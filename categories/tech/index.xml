<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>技术博客 on 仿生人会梦见电子羊吗？</title><link>https://cyber-blog.github.io/categories/tech/</link><description>Recent content in 技术博客 on 仿生人会梦见电子羊吗？</description><generator>Hugo -- gohugo.io</generator><language>zh-ch</language><managingEditor>majiang213@foxmail.com (majiang)</managingEditor><webMaster>majiang213@foxmail.com (majiang)</webMaster><lastBuildDate>Fri, 19 Sep 2025 16:30:00 +0800</lastBuildDate><atom:link href="https://cyber-blog.github.io/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring Boot应用假死现象：SLF4J日志框架冲突深度分析</title><link>https://cyber-blog.github.io/p/spring-boot/</link><pubDate>Fri, 19 Sep 2025 16:30:00 +0800</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/spring-boot/</guid><description>&lt;h2 id="引言">引言
&lt;/h2>&lt;h3 id="一个令人困惑的现象">一个令人困惑的现象
&lt;/h3>&lt;p>我最近遇到了一个奇怪的现象：在一个 Java Spring Boot 项目开发中，应用启动时显示了一些日志，然后就完全停止输出，程序看起来像是卡住了。控制台光标在闪烁，但是什么都不会发生。&lt;/p>
&lt;p>然而，通过排除一个jar包，程序就能正常启动。这让我非常困惑。 为什么排除一个日志相关的依赖就能解决问题？程序真的卡住了吗？&lt;/p>
&lt;p>我将分析我最近遇到的一个真实案例。&lt;/p>
&lt;h2 id="一当程序卡住的那一刻">一、当程序&amp;quot;卡住&amp;quot;的那一刻
&lt;/h2>&lt;h3 id="初步现象程序似乎停止了">初步现象：程序似乎停止了
&lt;/h3>&lt;p>我执行通过IDEA执行&lt;code>mvn spring-boot:run&lt;/code> 启动应用时，控制台显示了这些信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="n">contains&lt;/span> &lt;span class="n">multiple&lt;/span> &lt;span class="n">SLF4J&lt;/span> &lt;span class="n">providers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reload4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Reload4jServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="n">cd705f&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SLF4JServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">9225652&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">I&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Actual&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reload4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Reload4jServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="n">cd705f&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">log4j&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">WARN&lt;/span> &lt;span class="n">No&lt;/span> &lt;span class="n">appenders&lt;/span> &lt;span class="n">could&lt;/span> &lt;span class="n">be&lt;/span> &lt;span class="n">found&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">logger&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sankuai&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">octo&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mns&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">util&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">ProcessInfoUtil&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">log4j&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">WARN&lt;/span> &lt;span class="n">Please&lt;/span> &lt;span class="n">initialize&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">log4j&lt;/span> &lt;span class="n">system&lt;/span> &lt;span class="n">properly&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.178052&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">XMDFileAppender&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xmdCraneAppender&lt;/span> &lt;span class="n">fullFileName&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">crane&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">appkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">fullFilePattern&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">crane&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">yyyy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">MM&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dd&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.178277&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">XMDFileAppender&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xmdMafkaAppender&lt;/span> &lt;span class="n">fullFileName&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mafka&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">appkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">fullFilePattern&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">mafka&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">yyyy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">MM&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dd&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.178424&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">XMDFileAppender&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xmdRhinoAppender&lt;/span> &lt;span class="n">fullFileName&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">rhino&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">appkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">fullFilePattern&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">rhino&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">yyyy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">MM&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dd&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.178563&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">create&lt;/span> &lt;span class="n">XMDFileAppender&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">xmdKmsAppender&lt;/span> &lt;span class="n">fullFileName&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">kms&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span> &lt;span class="n">appkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span> &lt;span class="n">fullFilePattern&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">applogs&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">kms&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">d&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">yyyy&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">MM&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">dd&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="o">-%&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.183208&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">Begin&lt;/span> &lt;span class="n">Stop&lt;/span> &lt;span class="n">AsyncScibeAppender&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ScribeAsyncAppender&lt;/span> &lt;span class="n">Queue&lt;/span> &lt;span class="n">still&lt;/span> &lt;span class="n">has&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">events&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">23.183676&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">main&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">End&lt;/span> &lt;span class="n">Stop&lt;/span> &lt;span class="n">AsyncScibeAppender&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">ScribeAsyncAppender&lt;/span> &lt;span class="n">Queue&lt;/span> &lt;span class="n">still&lt;/span> &lt;span class="n">has&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="n">events&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">////////////////////////////////////////////////////////////////////&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">_ooOoo_&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">o8888888o&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="mi">88&lt;/span>&lt;span class="s2">&amp;#34; . &amp;#34;&lt;/span>&lt;span class="mi">88&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="o">^&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="o">^&lt;/span> &lt;span class="o">|&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">O&lt;/span>\ &lt;span class="o">=&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">O&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">____&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">---&lt;/span>&lt;span class="s1">&amp;#39;\____ //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="s1">&amp;#39; &lt;/span>&lt;span class="se">\\&lt;/span>&lt;span class="s1">| |// `. //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">/&lt;/span> \\&lt;span class="o">|||&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">|||//&lt;/span> \ &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="n">_&lt;/span>&lt;span class="o">|||||&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">-&lt;/span> &lt;span class="o">|||||-&lt;/span> \ &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">|&lt;/span> \\\ &lt;span class="o">-&lt;/span> &lt;span class="o">///&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">|&lt;/span> \&lt;span class="n">_&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>\&lt;span class="o">---/&lt;/span>&lt;span class="s1">&amp;#39;&amp;#39;&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> \ &lt;span class="o">.-&lt;/span>\&lt;span class="n">__&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="err">`&lt;/span> &lt;span class="n">___&lt;/span>&lt;span class="o">/-.&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">___&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="s1">&amp;#39; /--.--\ `. . ___ //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">.&lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span> &lt;span class="s1">&amp;#39;&amp;lt; `.___\_&amp;lt;|&amp;gt;_/___.&amp;#39;&lt;/span> &lt;span class="o">&amp;gt;&lt;/span>&lt;span class="s1">&amp;#39;&amp;#34;&amp;#34;. //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">-&lt;/span> \&lt;span class="err">`&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="err">`&lt;/span>\ &lt;span class="n">_&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="err">`&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">|&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> \ \ &lt;span class="err">`&lt;/span>&lt;span class="o">-.&lt;/span> \&lt;span class="n">_&lt;/span> &lt;span class="n">__&lt;/span>\ &lt;span class="o">/&lt;/span>&lt;span class="n">__&lt;/span> &lt;span class="n">_&lt;/span>&lt;span class="o">/&lt;/span> &lt;span class="o">.-&lt;/span>&lt;span class="err">`&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">========&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">-.&lt;/span>&lt;span class="n">____&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="o">-.&lt;/span>&lt;span class="n">___&lt;/span>\&lt;span class="n">_____&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">___&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="err">`&lt;/span>&lt;span class="n">____&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="s1">&amp;#39;======== //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="err">`&lt;/span>&lt;span class="o">=---=&lt;/span>&lt;span class="s1">&amp;#39; //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="o">^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="err">佛祖保佑&lt;/span> &lt;span class="err">永不宕机&lt;/span> &lt;span class="err">永无&lt;/span>&lt;span class="n">BUG&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">Thanks&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">Buddha&lt;/span>&lt;span class="s1">&amp;#39;s blessing, may our system //&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">//&lt;/span> &lt;span class="n">remain&lt;/span> &lt;span class="n">stable&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">bug&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">free&lt;/span> &lt;span class="n">forever&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">//&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">////////////////////////////////////////////////////////////////////&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">9&lt;/span>&lt;span class="err">月&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2025&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">26&lt;/span> &lt;span class="err">上午&lt;/span> &lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bouncycastle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">jsse&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PropertyUtils&lt;/span> &lt;span class="n">getStringSecurityProperty&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">信息&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">security&lt;/span> &lt;span class="n">property&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">jdk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">tls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disabledAlgorithms&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">SSLv3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TLSv1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">TLSv1&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RC4&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DES&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MD5withRSA&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DH&lt;/span> &lt;span class="n">keySize&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EC&lt;/span> &lt;span class="n">keySize&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">224&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="n">DES_EDE_CBC&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">anon&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">NULL&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">9&lt;/span>&lt;span class="err">月&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2025&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">26&lt;/span> &lt;span class="err">上午&lt;/span> &lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bouncycastle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">jsse&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">PropertyUtils&lt;/span> &lt;span class="n">getStringSecurityProperty&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">信息&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">string&lt;/span> &lt;span class="n">security&lt;/span> &lt;span class="n">property&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">jdk&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">certpath&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">disabledAlgorithms&lt;/span>&lt;span class="p">]:&lt;/span> &lt;span class="n">MD2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">MD5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SHA1&lt;/span> &lt;span class="n">jdkCA&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">usage&lt;/span> &lt;span class="n">TLSServer&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">RSA&lt;/span> &lt;span class="n">keySize&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">DSA&lt;/span> &lt;span class="n">keySize&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1024&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">EC&lt;/span> &lt;span class="n">keySize&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">224&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SHA1&lt;/span> &lt;span class="n">usage&lt;/span> &lt;span class="n">SignedJAR&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">denyAfter&lt;/span> &lt;span class="mi">2019&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">9&lt;/span>&lt;span class="err">月&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2025&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">26&lt;/span> &lt;span class="err">上午&lt;/span> &lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bouncycastle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">jsse&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DisabledAlgorithmConstraints&lt;/span> &lt;span class="n">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">警告&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Ignoring&lt;/span> &lt;span class="n">unsupported&lt;/span> &lt;span class="n">entry&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;jdk.certpath.disabledAlgorithms&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">SHA1&lt;/span> &lt;span class="n">jdkCA&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">usage&lt;/span> &lt;span class="n">TLSServer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">9&lt;/span>&lt;span class="err">月&lt;/span> &lt;span class="mi">19&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">2025&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">26&lt;/span> &lt;span class="err">上午&lt;/span> &lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">bouncycastle&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">jsse&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">provider&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">DisabledAlgorithmConstraints&lt;/span> &lt;span class="n">create&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">警告&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Ignoring&lt;/span> &lt;span class="n">unsupported&lt;/span> &lt;span class="n">entry&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="s1">&amp;#39;jdk.certpath.disabledAlgorithms&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">SHA1&lt;/span> &lt;span class="n">usage&lt;/span> &lt;span class="n">SignedJAR&lt;/span> &lt;span class="o">&amp;amp;&lt;/span> &lt;span class="n">denyAfter&lt;/span> &lt;span class="mi">2019&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">01&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">01&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">2025&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">09&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">19&lt;/span>&lt;span class="n">T02&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mf">26.632017&lt;/span>&lt;span class="n">Z&lt;/span> &lt;span class="n">xmdlog&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">registry&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">service&lt;/span> &lt;span class="n">INFO&lt;/span> &lt;span class="n">Registry&lt;/span> &lt;span class="n">LogManager&lt;/span> &lt;span class="n">register&lt;/span> &lt;span class="n">status&lt;/span> &lt;span class="bp">true&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">http&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="o">//&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">inf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dev&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sankuai&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">api&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">register&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">appkey&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">example&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">ip&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">172.18&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mf">151.200&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">port&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">12315&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">TEST&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">2.2&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Local&lt;/span> &lt;span class="n">Appenv&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">deployenv&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">qa&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">env&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">AppEnv&lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="n">deployenv&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;qa&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">env&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;test&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">swimlane&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;tmp-test&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">cell&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grouptags&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;null&amp;#39;&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Fri&lt;/span> &lt;span class="n">Sep&lt;/span> &lt;span class="mi">19&lt;/span> &lt;span class="mi">10&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">13&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">48&lt;/span> &lt;span class="n">CST&lt;/span> &lt;span class="mi">2025&lt;/span> &lt;span class="n">WARN&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Establishing&lt;/span> &lt;span class="n">SSL&lt;/span> &lt;span class="n">connection&lt;/span> &lt;span class="n">without&lt;/span> &lt;span class="n">server&lt;/span>&lt;span class="s1">&amp;#39;s identity verification is not recommended. According to MySQL 5.5.45+, 5.6.26+ and 5.7.6+ requirements SSL connection must be established by default if explicit option isn&amp;#39;&lt;/span>&lt;span class="n">t&lt;/span> &lt;span class="n">set&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">For&lt;/span> &lt;span class="n">compliance&lt;/span> &lt;span class="n">with&lt;/span> &lt;span class="n">existing&lt;/span> &lt;span class="n">applications&lt;/span> &lt;span class="ow">not&lt;/span> &lt;span class="n">using&lt;/span> &lt;span class="n">SSL&lt;/span> &lt;span class="n">the&lt;/span> &lt;span class="n">verifyServerCertificate&lt;/span> &lt;span class="n">property&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">set&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="s1">&amp;#39;false&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="n">You&lt;/span> &lt;span class="n">need&lt;/span> &lt;span class="n">either&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="n">explicitly&lt;/span> &lt;span class="n">disable&lt;/span> &lt;span class="n">SSL&lt;/span> &lt;span class="n">by&lt;/span> &lt;span class="n">setting&lt;/span> &lt;span class="n">useSSL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">false&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="ow">or&lt;/span> &lt;span class="n">set&lt;/span> &lt;span class="n">useSSL&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="bp">true&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">provide&lt;/span> &lt;span class="n">truststore&lt;/span> &lt;span class="k">for&lt;/span> &lt;span class="n">server&lt;/span> &lt;span class="n">certificate&lt;/span> &lt;span class="n">verification&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在显示了一些组件初始化信息和ASCII图案后，程序就完全停止输出了。控制台光标在闪烁，但是什么都不会发生。&lt;/p>
&lt;h2 id="二真相往往出人意料">二、真相往往出人意料
&lt;/h2>&lt;h3 id="数字不会说谎567的cpu使用率">数字不会说谎：56.7%的CPU使用率
&lt;/h3>&lt;p>首先使用 &lt;code>ps&lt;/code> 命令查看进程信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">$ ps aux &lt;span class="p">|&lt;/span> grep ApplicationLoader
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">majiang &lt;span class="m">97897&lt;/span> 56.7 2.5 &lt;span class="m">443940128&lt;/span> &lt;span class="m">633216&lt;/span> ?? R 11:34AM 1:19.25
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个结果让我震惊：&lt;/p>
&lt;ul>
&lt;li>进程状态: R (Running) — 程序在运行，不是阻塞状态&lt;/li>
&lt;li>CPU使用率: 56.7% — 程序在积极工作&lt;/li>
&lt;li>运行时间: 1小时19分钟 — 程序一直在持续运行&lt;/li>
&lt;/ul>
&lt;p>我原本以为程序卡住了，如果真是这样，CPU使用率应该接近0%。但现在56.7%的CPU使用率说明程序在正常运行！&lt;/p>
&lt;h3 id="深入检查使用各种分析工具">深入检查：使用各种分析工具
&lt;/h3>&lt;p>为了彻底搞清楚程序在做什么，我使用了多种分析手段：&lt;/p>
&lt;p>线程状态分析: 使用&lt;code>jstack&lt;/code>反复检查，没有发现死锁或异常阻塞&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Profiler火焰图: 通过JProfiler查看方法调用，程序执行正常&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程时间线: 观察线程的时间分布，各个线程都在正常工作&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程快照: 多次获取线程快照对比，线程状态正常工作&lt;/p>
&lt;p>所有这些工具都指向同一个结论：程序运行完全正常，没有任何阻塞或性能问题。&lt;/p>
&lt;p>进一步分析线程堆栈，我发现了关键信息：&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl"> $ jstack &lt;span class="m">97897&lt;/span> &lt;span class="p">|&lt;/span> grep -E &lt;span class="s2">&amp;#34;main.*tid&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 没有找到main线程！&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> $ jstack &lt;span class="m">97897&lt;/span> &lt;span class="p">|&lt;/span> head -20
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;qtp1366921090-106&amp;#34;&lt;/span> &lt;span class="c1">#106 prio=5 ... waiting on condition&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;qtp1366921090-107&amp;#34;&lt;/span> &lt;span class="c1">#107 prio=5 ... runnable &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;RhinoHttpSeverBossGroup-2-1&amp;#34;&lt;/span> &lt;span class="c1">#128 prio=5 ... runnable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;MtthriftServerBossGroup-8-1&amp;#34;&lt;/span> &lt;span class="c1">#346 prio=5 ... runnable&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;DestroyJavaVM&amp;#34;&lt;/span> &lt;span class="c1">#377 prio=5 ... waiting on condition&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这些发现彻底改变了我的认知：&lt;/p>
&lt;ul>
&lt;li>✅ Main线程已经正常执行完毕并退出&lt;/li>
&lt;li>✅ Spring Boot应用完全启动成功&lt;/li>
&lt;li>✅ HTTP服务器线程池（qtp开头的线程）在正常运行&lt;/li>
&lt;li>✅ 各种服务组件的工作线程都在运行&lt;/li>
&lt;/ul>
&lt;p>程序根本没有&amp;quot;卡住&amp;quot;！&lt;/p>
&lt;p>真正发生的是：应用在后台正常运行，但是没有任何日志输出。这给我造成了程序停止响应的错觉。&lt;/p>
&lt;p>问题的本质从&amp;quot;程序阻塞&amp;quot;变成了&amp;quot;日志系统失效&amp;quot;。&lt;/p>
&lt;h2 id="三静默杀手的真面目">三、静默杀手的真面目
&lt;/h2>&lt;h3 id="slf4j的选择困难症">SLF4J的选择困难症
&lt;/h3>&lt;p>既然程序正常运行但没有日志输出，问题就出在日志系统上。回看最初的警告信息：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Class&lt;/span> &lt;span class="n">path&lt;/span> &lt;span class="n">contains&lt;/span> &lt;span class="n">multiple&lt;/span> &lt;span class="n">SLF4J&lt;/span> &lt;span class="n">providers&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reload4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Reload4jServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="n">cd705f&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">W&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Found&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apache&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">logging&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SLF4JServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">9225652&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SLF4J&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">I&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="n">Actual&lt;/span> &lt;span class="n">provider&lt;/span> &lt;span class="n">is&lt;/span> &lt;span class="n">of&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">slf4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">reload4j&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">Reload4jServiceProvider&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="mi">64&lt;/span>&lt;span class="n">cd705f&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这里揭示了关键问题：&lt;strong>SLF4J在两个日志实现之间选择了错误的那个&lt;/strong>。&lt;/p>
&lt;p>&lt;code>SLF4J&lt;/code>是一个日志门面，它在运行时从classpath中选择一个具体的日志实现。选择策略很简单：使用第一个发现的提供者。&lt;/p>
&lt;p>&lt;strong>两个冲突的提供者&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>&lt;code>org.slf4j.reload4j.Reload4jServiceProvider&lt;/code> — 来自&lt;code>slf4j-reload4j&lt;/code>包，兼容Log4j 1.x&lt;/li>
&lt;li>&lt;code>org.apache.logging.slf4j.SLF4JServiceProvider&lt;/code> — 来自&lt;code>log4j-slf4j2-impl&lt;/code>包，支持Log4j 2.x&lt;/li>
&lt;/ul>
&lt;p>SLF4J选择了reload4j提供者，但我的项目配置的是Log4j 2.x格式。&lt;/p>
&lt;h3 id="被吞噬的日志去了哪里">被吞噬的日志去了哪里
&lt;/h3>&lt;p>我的项目使用的是标准的Log4j 2.x配置文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;configuration&lt;/span> &lt;span class="na">status=&lt;/span>&lt;span class="s">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;appenders&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;Console&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;Console&amp;#34;&lt;/span> &lt;span class="na">target=&lt;/span>&lt;span class="s">&amp;#34;SYSTEM_OUT&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;PatternLayout&lt;/span> &lt;span class="na">pattern=&lt;/span>&lt;span class="s">&amp;#34;${sys:CONSOLE_LOG_PATTERN}&amp;#34;&lt;/span> &lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/Console&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;XMDFile&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;infoAppender&amp;#34;&lt;/span> &lt;span class="na">fileName=&lt;/span>&lt;span class="s">&amp;#34;info.log&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- Log4j 2.x特有的appender --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/XMDFile&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/appenders&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;loggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;root&lt;/span> &lt;span class="na">level=&lt;/span>&lt;span class="s">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;appender-ref&lt;/span> &lt;span class="na">ref=&lt;/span>&lt;span class="s">&amp;#34;Console&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/root&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/loggers&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>问题在于：reload4j只能理解Log4j 1.x的配置格式，无法解析Log4j 2.x的高级语法。&lt;/p>
&lt;p>失败链路：&lt;/p>
&lt;ol>
&lt;li>reload4j尝试解析log4j2.xml&lt;/li>
&lt;li>遇到不认识的&lt;code>&amp;lt;XMDFile&amp;gt;&lt;/code>等Log4j 2.x元素&lt;/li>
&lt;li>配置解析失败，没有创建任何appender&lt;/li>
&lt;li>所有日志调用都被静默丢弃&lt;/li>
&lt;/ol>
&lt;p>这就是为什么会出现这个警告：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">log4j:WARN No appenders could be found for logger (com.sankuai.inf.octo.mns.util.ProcessInfoUtil).
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">log4j:WARN Please initialize the log4j system properly.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>完整的&amp;quot;吞噬&amp;quot;过程：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl"> 第1步: 业务代码调用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> logger.info&lt;span class="o">(&lt;/span>&lt;span class="s2">&amp;#34;Spring Boot application started&amp;#34;&lt;/span>&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第2步: SLF4J门面接收调用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> org.slf4j.Logger.info&lt;span class="o">(&lt;/span>String msg&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第3步: SLF4J路由到选中的提供者
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SLF4J → org.slf4j.reload4j.Reload4jLoggerAdapter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第4步: reload4j适配器委托给Log4j 1.x
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Reload4jLoggerAdapter → org.apache.log4j.Logger &lt;span class="o">(&lt;/span>reload4j实现&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第5步: Log4j检查可用的appender
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> logger.getAllAppenders&lt;span class="o">()&lt;/span> → 返回空集合 &lt;span class="o">(&lt;/span>因为配置解析失败&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第6步: 没有appender可用
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Log4j判断：既然没有appender，就直接丢弃这条消息
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 第7步: 静默返回
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 方法正常返回，不抛异常，业务代码继续执行
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 结果: 用户完全看不到任何日志输出
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Log4j采用&amp;quot;静默失败&amp;quot;策略：当没有可用的appender时，所有日志调用正常执行但输出被完全丢弃，不会抛出异常影响业务逻辑。&lt;/p>
&lt;p>这就是为什么排除slf4j-reload4j能解决问题：去掉错误的提供者后，SLF4J会选择正确的Log4j 2.x实现，日志系统恢复正常。&lt;/p>
&lt;h2 id="四破解之道">四、破解之道
&lt;/h2>&lt;h3 id="斩断混乱的依赖链">斩断混乱的依赖链
&lt;/h3>&lt;p>理解了问题本质后，解决方案就很清楚了：&lt;strong>消除SLF4J提供者冲突&lt;/strong>。&lt;/p>
&lt;p>通过Maven依赖排除，将错误的提供者从classpath中移除：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.sankuai.com&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>example-sdk&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-reload4j&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修复后的效果：&lt;/p>
&lt;ol>
&lt;li>Classpath中只剩下log4j-slf4j2-impl提供者&lt;/li>
&lt;li>SLF4J自动选择Log4j 2.x实现&lt;/li>
&lt;li>Log4j 2.x正确解析log4j2.xml配置文件&lt;/li>
&lt;li>Console和File appender正常创建&lt;/li>
&lt;li>日志输出恢复正常，应用&amp;quot;复活&amp;quot;&lt;/li>
&lt;/ol>
&lt;p>验证修复结果：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">2025-09-19 10:37:00.840 INFO 62045 --- [ main] c.s.h.g.g.ApplicationLoader : Starting ApplicationLoader using Java 17.0.10
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2025-09-19 10:37:00.840 INFO 62045 --- [ main] c.s.h.g.g.ApplicationLoader : The following 1 profile is active: &amp;#34;test&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">2025-09-19 10:37:15.234 INFO 62045 --- [ main] c.s.h.g.g.ApplicationLoader : Started ApplicationLoader in 14.628 seconds
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>没有了SLF4J警告信息，没有了log4j的错误提示，一切都恢复正常。&lt;/p>
&lt;h3 id="为什么会一直使用reald4j">为什么会一直使用reald4j?
&lt;/h3>&lt;p>通过查看项目的pom.xml文件，我发现&lt;code>photo-thrift-client&lt;/code>依赖的位置确实影响了SLF4J提供者的选择。&lt;/p>
&lt;p>在&lt;code>hrmdm-globaldata-gateway-infrastructure/pom.xml&lt;/code>中，&lt;code>photo-thrift-client&lt;/code>依赖位于：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.sankuai.com&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>example-sdk&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>slf4j-reload4j&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.slf4j&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/exclusion&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/exclusions&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这个依赖在文件中的位置相对较前，而且它直接引入了slf4j-reload4j作为传递依赖。由于Maven构建classpath时按照依赖在文件中的声明顺序，slf4j-reload4j的ServiceProvider文件被先加载到ServiceLoader中。&lt;/p>
&lt;p>具体的加载顺序：&lt;/p>
&lt;ol>
&lt;li>Maven解析依赖树，photo-thrift-client较早被处理&lt;/li>
&lt;li>photo-thrift-client → slf4j-reload4j 被添加到classpath靠前位置&lt;/li>
&lt;li>ServiceLoader扫描时，先发现slf4j-reload4j的ServiceProvider&lt;/li>
&lt;li>SLF4J选择第一个发现的提供者：reload4j&lt;/li>
&lt;/ol>
&lt;p>这就是为什么slf4j-reload4j被优先选择的根本原因。不同的项目中，如果依赖声明顺序不同，可能就会选择log4j-slf4j2-impl作为提供者。&lt;/p>
&lt;p>验证方法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">mvn dependency:build-classpath
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以查看实际构建的classpath顺序，确认slf4j-reload4j确实在前面。&lt;/p>
&lt;h2 id="尾声技术世界的启示">尾声：技术世界的启示
&lt;/h2>&lt;p>这个案例揭示了现代Java应用生态的复杂性。一个看似无害的传递依赖，通过微妙的类加载顺序和配置不匹配，导致了整个日志系统的静默失效。&lt;/p>
&lt;p>&lt;strong>表象具有欺骗性&lt;/strong>。当我最初看到程序&amp;quot;卡住&amp;quot;时，直觉告诉我这是一个阻塞或死锁问题。但深入分析后发现，程序运行完全正常，问题出在一个完全不同的地方。&lt;/p>
&lt;p>&lt;strong>工具是解决问题的关键&lt;/strong>。通过系统命令（ps、jstack）和分析工具，我能够透过现象看到本质，发现程序实际在正常运行。&lt;/p>
&lt;p>&lt;strong>依赖管理的重要性&lt;/strong>。在现代Java项目中，传递依赖可能带来意想不到的问题。一个小小的jar包冲突，就能让整个应用的行为变得诡异。&lt;/p>
&lt;p>&lt;strong>静默失败的双刃剑&lt;/strong>。Log4j的静默失败设计保护了业务逻辑，但也让问题变得更难发现。有时候，适当的&amp;quot;噪音&amp;quot;比安静的错误更有价值。&lt;/p>
&lt;p>最重要的是：&lt;strong>不要被第一印象误导&lt;/strong>。技术问题往往比表面现象更复杂，也更有趣。当遇到无法理解的现象时，保持好奇心，深入挖掘，往往会发现令人惊喜的真相。&lt;/p>
&lt;p>在复杂的技术世界里，最神秘的故障背后，可能隐藏着最简单的原理。&lt;/p></description></item><item><title>MySQL InnoDB 索引机制与优化</title><link>https://cyber-blog.github.io/p/database-index/</link><pubDate>Mon, 04 Aug 2025 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/database-index/</guid><description>&lt;h1 id="mysql-innodb-索引机制与优化执行流程覆盖索引回表与索引下推">MySQL InnoDB 索引机制与优化：执行流程、覆盖索引、回表与索引下推
&lt;/h1>&lt;p>InnoDB 表基于 B+ 树实现&lt;strong>聚簇索引&lt;/strong>（主键）和多个&lt;strong>二级索引&lt;/strong>。查询时，MySQL 优化器会选择合适的索引，然后按照执行流程依次进行索引查找（检索满足条件的索引项）、条件过滤、排序（如有需要）和&lt;strong>回表&lt;/strong>（根据二级索引叶子节点的主键值检索完整行）。如果所有查询列都包含在索引中（覆盖索引），则可避免回表，从而节省随机 IO ；否则需要通过主键到聚簇索引检索整行数据（回表），这增加了额外开销 。此外，InnoDB 支持&lt;strong>索引条件下推&lt;/strong>（Index Condition Pushdown，ICP）优化：在扫描二级索引时，将部分 WHERE 条件在存储引擎层提前过滤，从而减少了无效行的回表次数 。&lt;/p>
&lt;p>以下内容通过实际建表、查询示例和 EXPLAIN 分析，详细阐述索引在各阶段的作用，比较覆盖索引与回表的差异，并说明 ICP 在执行流程中的作用与限制。&lt;/p>
&lt;h2 id="innodb-索引查找与执行流程">&lt;strong>InnoDB 索引查找与执行流程&lt;/strong>
&lt;/h2>&lt;p>MySQL 查询经过优化器确定执行计划，若使用索引，则执行引擎依次进行：&lt;strong>(1) 索引查找&lt;/strong>：根据索引 B+ 树定位满足前缀条件的叶子节点；&lt;strong>(2) 条件过滤&lt;/strong>：对于索引未能覆盖的条件，在存储引擎层过滤（ICP 可提前过滤部分条件），其余条件或计算在服务器层过滤；&lt;strong>(3) 排序&lt;/strong>：若 ORDER BY 条件与索引顺序一致，则可以顺序扫描索引避免额外排序；否则会使用额外的排序（Using filesort） ；&lt;strong>(4) 回表&lt;/strong>：如果查询需要的列不全在二级索引中，则根据索引叶子节点的主键值到聚簇索引查完整行，此过程即“回表”。整个流程如下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>索引查找&lt;/strong>：优化器选择最合适的索引（如单列索引、多列联合索引）进行查找。InnoDB 二级索引叶子节点存储了对应行的主键值 ，因此定位二级索引时可直接获取主键。&lt;/li>
&lt;li>&lt;strong>条件过滤&lt;/strong>：默认情况下，MySQL 服务器层将所有非索引列的过滤条件留到获取完整行后处理；对于索引列上的条件，存储引擎可在索引层过滤。启用 ICP 时，满足条件的行可以在索引层提前淘汰 。&lt;/li>
&lt;li>&lt;strong>排序&lt;/strong>：如果查询涉及 ORDER BY，优化器检查索引顺序是否可以按需排序。若索引前缀完全匹配排序列并且无其他排序列，则无需额外排序；否则会产生 Using filesort 。&lt;/li>
&lt;li>&lt;strong>回表（Bookmark Lookup）&lt;/strong>：当查询列超出索引范围时，需要回表。InnoDB 的二级索引只能快速定位主键值，故若查询还需其他列数据，就要通过主键到聚簇索引读取完整行，这就是回表过程 。&lt;/li>
&lt;/ul>
&lt;p>综上，优化索引以让查询满足覆盖索引条件，可避免回表，提高效率 ；否则回表成为瓶颈。我们下面通过示例演示这两种情况。&lt;/p>
&lt;h2 id="覆盖索引与回表对比">&lt;strong>覆盖索引与回表对比&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>覆盖索引&lt;/strong>：若查询的所有列都包含在一个索引中（包括二级索引列及隐含的主键列），则查询可以完全从索引读取所需数据，无需访问表数据 。EXPLAIN 中 Extra 字段会显示 Using index 。这意味着 MySQL 引擎使用索引即可得到结果，无须读取表行。&lt;/li>
&lt;li>&lt;strong>回表&lt;/strong>：若查询涉及的列不全在索引中，则即使可以使用索引检索行主键，也必须通过主键到聚簇索引读出其余列，这称为回表。回表需要额外的随机 I/O 和时间 ，性能低于纯索引扫描。&lt;/li>
&lt;/ul>
&lt;p>我们以实际例子说明。假设有如下表和索引：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">CREATE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">TABLE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">PRIMARY&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">KEY&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">VARCHAR&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nb">INT&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">INDEX&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">idx_name_dept&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ENGINE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">InnoDB&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>回表示例&lt;/strong>：查询非覆盖情况需要回表。比如查询 name=&amp;hellip;、dept=&amp;hellip; 和 age（未加索引列）：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Alice&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Sales&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>说明：索引 idx_name_dept(name,dept,salary) 可以用于查找符合 name 和 dept 的行，但列 age 不在索引中，因此每匹配到一条记录后，需要通过主键 id 回表读取 age。对应的执行计划可能如下（示例）：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>id&lt;/strong>&lt;/th>
&lt;th>&lt;strong>select_type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>table&lt;/strong>&lt;/th>
&lt;th>&lt;strong>type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>possible_keys&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key_len&lt;/strong>&lt;/th>
&lt;th>&lt;strong>ref&lt;/strong>&lt;/th>
&lt;th>&lt;strong>rows&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Extra&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>demo&lt;/td>
&lt;td>ref&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>256&lt;/td>
&lt;td>const,const&lt;/td>
&lt;td>10&lt;/td>
&lt;td>Using where&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;strong>解释&lt;/strong>：type=ref 表示用二级索引范围查找；key=idx_name_dept；Extra 显示 Using where，表明服务器层需要再执行 WHERE 条件过滤（尽管在此例中过滤完毕后还需回表检索列）。注意由于 age 不在索引中，这不是覆盖索引查询，因此 MySQL 会回表获取完整行才能返回 age。回表导致额外开销 。&lt;/li>
&lt;li>&lt;strong>覆盖索引示例&lt;/strong>：若查询列都在索引中，则不回表。继续上述表结构，如果查询只取 salary：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Alice&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Sales&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>因为 name, dept, salary 恰好是索引 idx_name_dept 的列，且 id（主键）会隐式包含在每个索引叶子节点中，故此查询的所有列（name, dept, salary 及聚簇主键 id）均可从索引中取得，无须回表。执行计划示例：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>id&lt;/strong>&lt;/th>
&lt;th>&lt;strong>select_type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>table&lt;/strong>&lt;/th>
&lt;th>&lt;strong>type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>possible_keys&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key_len&lt;/strong>&lt;/th>
&lt;th>&lt;strong>ref&lt;/strong>&lt;/th>
&lt;th>&lt;strong>rows&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Extra&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>demo&lt;/td>
&lt;td>ref&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>256&lt;/td>
&lt;td>const,const&lt;/td>
&lt;td>5&lt;/td>
&lt;td>Using index&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;ul>
&lt;li>&lt;strong>解释&lt;/strong>：Extra 显示 Using index ，表示此查询可以由索引覆盖执行，不需要访问表（所谓覆盖索引）。通过覆盖索引，避免了读聚簇索引的随机 I/O ，查询效率更高。&lt;/li>
&lt;/ul>
&lt;p>下表总结覆盖索引与回表的区别：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>特性&lt;/strong>&lt;/th>
&lt;th>&lt;strong>覆盖索引&lt;/strong>&lt;/th>
&lt;th>&lt;strong>回表&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>列需求&lt;/td>
&lt;td>查询列完全包含在索引中（加上主键列）&lt;/td>
&lt;td>查询列不全在索引中&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>I/O 行为&lt;/td>
&lt;td>直接从索引树读取数据，无需访问表&lt;/td>
&lt;td>需要先查索引取主键值，再到聚簇索引读行&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>EXPLAIN Extra&lt;/td>
&lt;td>Using index&lt;/td>
&lt;td>通常含 Using where（或 Using index condition）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>性能&lt;/td>
&lt;td>最优（避免额外随机 I/O）&lt;/td>
&lt;td>较差（额外随机 I/O 和 CPU 过滤开销）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>适用场景&lt;/td>
&lt;td>查询列固定且已编入索引；WHERE/GROUP BY/ORDER BY 列索引前缀&lt;/td>
&lt;td>查询列超出索引；无覆盖索引需补列数据&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>以上示例说明：构造合理的联合索引，尽量让查询成为覆盖索引（如将常用的过滤列和返回列包含进索引），可以显著提高查询性能 。&lt;/p>
&lt;h2 id="索引条件下推icp的作用与使用">&lt;strong>索引条件下推（ICP）的作用与使用&lt;/strong>
&lt;/h2>&lt;p>**索引条件下推（Index Condition Pushdown, ICP）**是 MySQL 5.6+ 为 InnoDB 和 MyISAM 二级索引设计的优化功能 。当使用二级索引检索行时，如果查询中存在多个条件，其中只有部分条件能利用索引列，则 MySQL 默认会把满足索引的那部分条件下推到存储引擎中进行过滤，减少回表次数 。具体行为如下：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>无 ICP 时&lt;/strong>：存储引擎按索引查到每一行对应的主键值并回表，然后服务器层再对返回的行执行全部剩余的 WHERE 条件过滤 。这意味着即使某些条件可在索引层判断，也要等回表后才能筛选，导致大量不必要的行读取。&lt;/li>
&lt;li>&lt;strong>启用 ICP 后&lt;/strong>：存储引擎在扫描索引时，将能够在索引列上判断的条件提前执行：&lt;strong>只有在索引条件也满足的情况下，才回表读取该行&lt;/strong> 。对于索引层无法判断（非索引列或函数列）的条件，待回表后再在服务器层过滤。&lt;/li>
&lt;/ol>
&lt;p>举例说明：继续上述 demo 表，如果我们对 idx_name_dept(name,dept,salary) 既有索引，又对列 age 没有索引，则考虑如下查询：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Alice&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">50000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>索引 idx_name_dept 可用于 name=&amp;lsquo;Alice&amp;rsquo;（精确匹配）和 salary &amp;gt; 50000（范围匹配），但 age &amp;lt; 30 无索引参与。启用 ICP 时，存储引擎会首先根据 name 和 salary 在索引上查找主键，然后在索引层判断 age &amp;lt; 30 条件。如果 age 不在索引中，就不能在索引层判断，所以 age &amp;lt; 30 在索引层跳过，而在回表后由服务器层执行。&lt;/li>
&lt;li>EXPLAIN 输出示例可能为：&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>id&lt;/strong>&lt;/th>
&lt;th>&lt;strong>select_type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>table&lt;/strong>&lt;/th>
&lt;th>&lt;strong>type&lt;/strong>&lt;/th>
&lt;th>&lt;strong>possible_keys&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key&lt;/strong>&lt;/th>
&lt;th>&lt;strong>key_len&lt;/strong>&lt;/th>
&lt;th>&lt;strong>ref&lt;/strong>&lt;/th>
&lt;th>&lt;strong>rows&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Extra&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>SIMPLE&lt;/td>
&lt;td>demo&lt;/td>
&lt;td>range&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>idx_name_dept&lt;/td>
&lt;td>258&lt;/td>
&lt;td>const,const&lt;/td>
&lt;td>15&lt;/td>
&lt;td>Using index condition&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>这里 Extra 显示 Using index condition ，意味着 ICP 被使用。根据官方文档：“Using index condition 说明索引条件下推已经生效 ”。此时 MySQL 引擎会先在索引层应用 name=&amp;lsquo;Alice&amp;rsquo; AND salary&amp;gt;50000 过滤匹配的行，只有满足这些条件的索引条目才会被读取主键，回表到主表后服务器再检查 age&amp;lt;30。由此避免了对不满足前两条件的行进行回表，从而降低了 I/O 和 CPU 开销 。如果关闭 ICP（例如执行 SET optimizer_switch=&amp;lsquo;index_condition_pushdown=off&amp;rsquo;;），则 EXPLAIN 中 Extra 只会显示 Using where ，意味着索引层只用 name=&amp;lsquo;Alice&amp;rsquo; 等定位，查询返回的所有行都要回表并在服务器层再做 age&amp;lt;30 筛选，效率较低。&lt;/p>
&lt;p>需要注意的是，&lt;strong>ICP 只对二级索引有效&lt;/strong> 。InnoDB 的聚簇主键检索时，整行已经加载到缓冲区，故对主键索引应用 ICP 无意义。ICP 条件要求如文档所述：访问方法为 range/ref/eq_ref/ref_or_null，且表需要访问完整行 。此外，ICP 不能下推子查询和存储函数等复杂条件 。&lt;/p>
&lt;p>以下示例演示 ICP 在 EXPLAIN 输出中的表现：假设 demo 表中数据足够多，我们执行上面查询（启用 ICP）：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sql" data-lang="sql">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 启用ICP（默认开启），执行查询
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">EXPLAIN&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">SELECT&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">id&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dept&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">FROM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">demo&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">WHERE&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;Alice&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">salary&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">50000&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">AND&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">age&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="mi">30&lt;/span>&lt;span class="err">\&lt;/span>&lt;span class="k">G&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行计划解析（示例）：&lt;/p>
&lt;ul>
&lt;li>key=idx_name_dept：使用复合索引。&lt;/li>
&lt;li>type=range：范围查找（因为对 salary &amp;gt; 50000）。&lt;/li>
&lt;li>Extra=Using index condition ：说明引擎在索引层先应用了 name 和 salary 条件过滤，后续再回表检查 age 条件。&lt;/li>
&lt;/ul>
&lt;p>总结：ICP 在执行流程中的位置在&lt;strong>索引查找后、回表前&lt;/strong>，能有效减少回表次数 。在 EXPLAIN 输出中，Using index condition 表示 ICP 生效；若额外出现 Using where，说明仍有非索引列的过滤条件需在服务器层处理 。例如上例的 age&amp;lt;30 就因未在索引而留在服务器层。&lt;/p>
&lt;h2 id="索引相关概念对比一览">&lt;strong>索引相关概念对比一览&lt;/strong>
&lt;/h2>&lt;p>下表对照了本文讨论的关键概念及其适用场景：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>概念&lt;/strong>&lt;/th>
&lt;th>&lt;strong>触发条件&lt;/strong>&lt;/th>
&lt;th>&lt;strong>优势&lt;/strong>&lt;/th>
&lt;th>&lt;strong>EXPLAIN 标志&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>覆盖索引&lt;/strong>&lt;/td>
&lt;td>查询所需列全包含在某索引（包括主键）&lt;/td>
&lt;td>避免回表，减少随机 IO，提高查询效率&lt;/td>
&lt;td>Using index&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>回表&lt;/strong>&lt;/td>
&lt;td>查询列超出所用索引时&lt;/td>
&lt;td>无&lt;/td>
&lt;td>Using where（无 Using index）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>索引下推 (ICP)&lt;/strong>&lt;/td>
&lt;td>复合索引扫描时，有部分条件非索引列&lt;/td>
&lt;td>索引层提前过滤，减少回表次数&lt;/td>
&lt;td>Using index condition&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>排序 (filesort)&lt;/strong>&lt;/td>
&lt;td>ORDER BY 列未按索引顺序（或无合适索引）&lt;/td>
&lt;td>数据量小或内存足够时开销可接受，小表也可忽略&lt;/td>
&lt;td>Using filesort&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>表中各项分别对应覆盖索引利用索引免回表的优势 ；回表的触发（非覆盖）场景；ICP 适用情况与好处 ；以及排序相关的指标 Using filesort 表示排序在内存或外部进行 。&lt;/p>
&lt;h2 id="实战优化建议best-practices">&lt;strong>实战优化建议（Best Practices）&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>&lt;strong>设计覆盖索引&lt;/strong>：分析业务查询，针对常见的 WHERE、GROUP BY、ORDER BY 和 SELECT 列，设计联合索引，使其尽量覆盖这些查询。覆盖索引能大幅减少随机读，从而提速 。&lt;/li>
&lt;li>&lt;strong>注意索引列顺序&lt;/strong>：联合索引中将筛选条件最常用的列放在最左侧；只有左前缀匹配才能有效使用索引。复合索引建列顺序应符合查询逻辑，切勿盲目多列索引 。&lt;/li>
&lt;li>&lt;strong>合理限制 SELECT 列&lt;/strong>：避免 SELECT *，只选取必要列。若查询返回较少列，能降低回表概率，或可让索引覆盖更多查询需求 。&lt;/li>
&lt;li>&lt;strong>利用 EXPLAIN 分析执行计划&lt;/strong>：定期检查慢查询或关键查询的 EXPLAIN 输出，关注 type、key、rows、Extra 等字段。若出现 Using filesort 或全表扫描（type=ALL）等提示，要考虑创建索引或调整查询逻辑。&lt;/li>
&lt;li>&lt;strong>启用 ICP（默认开启）&lt;/strong>：对于范围查询或多条件过滤，EXPLAIN 出现 Using index condition 时说明 ICP 正在减少回表。确认 MySQL 版本 ≥5.6，保持 optimizer_switch 中 index_condition_pushdown 为 on。注意ICP只对二级索引生效 。&lt;/li>
&lt;li>&lt;strong>监控主键设计&lt;/strong>：主键越长，二级索引叶子节点也会越大（因为每条叶子记录都要存储主键），影响缓存命中和 I/O。避免在高频使用的表上构建过长的主键 。&lt;/li>
&lt;li>&lt;strong>定期统计与优化&lt;/strong>：使用 ANALYZE TABLE 保持统计信息准确，确保优化器能正确估算成本。对极少更新的大表，可考虑手动分析。采用 OPTIMIZE TABLE 或在线重建表，以消除碎片、缩减数据页。&lt;/li>
&lt;/ul>
&lt;p>通过上述策略，配合对 EXPLAIN 输出的深入理解 和指标观察，可最大化发挥 InnoDB 索引的性能优势，避免不必要的回表和排序开销，从而优化查询性能。&lt;/p></description></item><item><title>JMM</title><link>https://cyber-blog.github.io/p/jmm/</link><pubDate>Sat, 12 Jul 2025 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/jmm/</guid><description>&lt;h1 id="深入理解-java-内存模型jmm与锁机制">深入理解 Java 内存模型（JMM）与锁机制
&lt;/h1>&lt;h2 id="一java-内存模型jmm">一、Java 内存模型（JMM）
&lt;/h2>&lt;p>​ Java 内存模型的设计目的是解决多线程下共享内存的一致性问题。不同于强一致性硬件模型，现代 CPU 和编译器会对内存操作进行各种优化和重排序 。在没有规范约束时，不同处理器的缓存和乱序执行会导致线程间看到的共享变量值不一致，严重影响并发正确性 。Java 提供了跨平台的内存模型（JMM）来定义一套规则，使得 volatile、synchronized 等同步原语能在任何硬件架构上实现一致语义，保障“Write Once, Run Anywhere”原则 。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jmm/jmm.png"
width="869"
height="714"
srcset="https://cyber-blog.github.io/p/jmm/jmm_hu3393634758812708448.png 480w, https://cyber-blog.github.io/p/jmm/jmm_hu842773841910910357.png 1024w"
loading="lazy"
alt="image-20250712103720924"
class="gallery-image"
data-flex-grow="121"
data-flex-basis="292px"
>&lt;/p>
&lt;p>​ Java 内存模型示意：每个线程都有自己的工作内存（Local Memory），通过主内存（Main Memory）进行交互 。线程 A 要把修改写入共享变量，必须先把工作内存中的更新&lt;strong>刷新&lt;/strong>到主内存；线程 B 要读取，则必须从主内存将值&lt;strong>读取&lt;/strong>到其工作内存后才使用。JMM 通过控制这个读-写流程，为 Java 程序提供了内存可见性的保证 。下面示例说明了没有同步时指令重排序可能带来的问题：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReorderExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程 A 执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">writer&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 线程 B 执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reader&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">y&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">b&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>若线程 B 在 reader() 中首先读到 y == 2，按程序原序理应读到 x == 1；但由于编译器/CPU 可重排序写操作，上述代码可能实际执行为 y=2 后才 x=1，导致 B 看到 a==2 而 b==0 。JMM 引入 happens-before 规则来避免这类问题。&lt;/p>
&lt;p>&lt;strong>Happens-before 原则：&lt;/strong> 在 JMM 中，若操作 A happens-before 操作 B，则操作 A 的结果对操作 B 可见，并且执行 A 的语义在语句顺序上排在 B 之前 。常见的具体规则包括：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>程序顺序规则（Program Order）：&lt;/strong> 同一线程内，按代码顺序的每个操作 happens-before 于该线程中任意后续操作 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>监视器锁规则（Monitor Lock）：&lt;/strong> 对一个锁的 &lt;em>释放&lt;/em>（unlock）操作 happens-before 于随后对同一锁的 &lt;em>获取&lt;/em>（lock）操作 。这保证了进入同步块后可见之前在该锁保护下的修改。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>volatile 变量规则：&lt;/strong> 对一个 volatile 域的写操作 happens-before 于任意后续对同一 volatile 域的读操作 。这意味着写入 volatile 的值对后续读取立即可见，同时禁止了该写操作与读操作间的重排序。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>线程启动规则：&lt;/strong> 如果线程 A 调用了 Thread.start() 启动线程 B，则线程 A 在 start() 之后的操作 happens-before 线程 B 中的任何操作 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>线程终结规则：&lt;/strong> 如果线程 A 调用了 Thread.join() 等待线程 B 完成，则线程 B 中的任意操作 happens-before 线程 A 从 join() 返回之后的操作 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>传递性：&lt;/strong> 如果 A happens-before B 且 B happens-before C，则 A happens-before C 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>以上规则保证了关键同步操作之间的先后关系。例如，释放锁的写操作通过内存屏障将缓存数据刷新到主内存，随后的获取锁操作则从主内存重新读取，从而保证了锁保护块内存可见性；对 volatile 字段的写也会立刻被刷新，而读操作则从主内存读取最新值 。&lt;/p>
&lt;h3 id="可见性有序性原子性问题">&lt;strong>可见性、有序性、原子性问题&lt;/strong>
&lt;/h3>&lt;p>JMM 主要解决可见性和有序性问题。&lt;em>可见性&lt;/em> 指一个线程对共享变量的修改是否能及时被其他线程看到；_有序性_指在多线程环境下保证特定操作的执行顺序。通过 happens-before 规则，JMM 能保证关键操作的顺序性和可见性。&lt;strong>原子性&lt;/strong>问题方面，JMM 保证对基本类型的单次读/写（除 long/double 在旧版本中）的操作具有原子性，但复合操作（如 i++）并非原子。若需保证原子性，就必须使用同步手段或原子类。Java 提供了 java.util.concurrent.atomic 包中的原子类（如 AtomicInteger），它们使用 CAS + volatile 来实现线程安全的原子更新 。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 示例：使用 volatile 保证可见性&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">VolatileExample&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 普通变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">writer&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">10&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">reader&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">flag&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 如果读到 flag=1，则能保证看到 a=10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">a&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在上例中，flag 是 volatile 字段，写线程先写 a=10 再写 flag=1，读线程读取到 flag==1 时，通过 happens-before 规则可见先前写的 a 值 。若去掉 volatile，这种可见性就不能被保障，可能读到过时的 a 值。&lt;/p>
&lt;h2 id="二hotspot-jvm-的锁升级机制">&lt;strong>二、HotSpot JVM 的锁升级机制&lt;/strong>
&lt;/h2>&lt;p>Java 的 synchronized 锁在 HotSpot JVM 中有多种状态优化，以减少无竞争情况下的加锁开销 。JDK6 之后，锁主要有四种状态：&lt;strong>无锁&lt;/strong>、&lt;strong>偏向锁&lt;/strong>、&lt;strong>轻量级锁&lt;/strong>、&lt;strong>重量级锁&lt;/strong> 。对象头（Object Header）中的 Mark Word 用于标记当前锁状态和相关指针（如线程 ID、锁记录指针等） 。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>无锁状态：&lt;/strong> 对象未被任何线程锁定。Mark Word 保存的是对象哈希码和年龄等信息 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>偏向锁：&lt;/strong> 适用于对象只被一个线程反复访问的场景。第一次加锁时，JVM 会将该线程的 ID 写入对象头，之后该线程可无竞争地多次进入同步块而无需 CAS 自旋 。如果其他线程竞争此锁（或出现必须撤销偏向的情况），JVM 会撤销偏向锁并升级为轻量级锁 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>轻量级锁（自旋锁）：&lt;/strong> 当偏向锁被撤销后，或并发程度较低时使用。线程获取锁时通过 CAS 将对象头指向自己栈帧中的 &lt;em>Lock Record&lt;/em>（锁记录），若失败则在用户态进行自旋重试 。轻量级锁可以在短期竞争中避免进入内核阻塞，提升性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>重量级锁（监视器锁）：&lt;/strong> 当自旋仍无法获得锁（如自旋次数超过阈值或阻塞时间过长）时，JVM 会将锁升级为重量级锁。此时线程挂起，转入内核态由操作系统调度 。重量级锁的获取成本较高，但适用于高度竞争场景。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>下面的示意图展示了典型的锁状态转换流程：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jmm/image-20250712104201616.png"
width="748"
height="381"
srcset="https://cyber-blog.github.io/p/jmm/image-20250712104201616_hu17833523859756692957.png 480w, https://cyber-blog.github.io/p/jmm/image-20250712104201616_hu15817651795721076305.png 1024w"
loading="lazy"
alt="image-20250712104201616"
class="gallery-image"
data-flex-grow="196"
data-flex-basis="471px"
>&lt;/p>
&lt;p>对象锁状态转换图：HotSpot JVM 中对象锁的状态升级通常按无锁→偏向锁→轻量级锁→重量级锁的顺序进行 。例如，新对象创建后处于无锁；第一次线程访问若开启偏向锁，则进入偏向锁状态；当另一线程竞争时，偏向锁被撤销并升级为轻量级锁；若自旋多次仍未获取锁，则进一步膨胀为重量级锁 。&lt;/p>
&lt;h3 id="对象头与-mark-word">&lt;strong>对象头与 Mark Word&lt;/strong>
&lt;/h3>&lt;p>每个对象头（Object Header）包含 Mark Word 和类型指针（klass pointer）等元数据。Mark Word 存储对象运行时数据：平时包含对象的哈希码、GC 年龄等 ；加锁时则被修改为锁标记和相关指针 。下表示意了 Mark Word 的不同锁态编码：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>锁状态&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Mark Word 内容&lt;/strong>&lt;/th>
&lt;th>&lt;strong>低位标志位&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>无锁&lt;/td>
&lt;td>23bit 保存哈希码等，age，最低2位为 01&lt;/td>
&lt;td>01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>偏向锁&lt;/td>
&lt;td>线程ID、Epoch、age，高位标志位为 1，最低2位 01&lt;/td>
&lt;td>01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>轻量级锁&lt;/td>
&lt;td>指向栈上 Lock Record 的指针，最低2位 00&lt;/td>
&lt;td>00&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>重量级锁&lt;/td>
&lt;td>指向 Monitor 对象的指针，最低2位 10&lt;/td>
&lt;td>10&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>&lt;em>（上述表格源自 HotSpot 对象头结构，简化说明）&lt;/em>&lt;/p>
&lt;/blockquote>
&lt;h3 id="锁升级触发条件与过程">&lt;strong>锁升级触发条件与过程&lt;/strong>
&lt;/h3>&lt;p>锁的升级（膨胀）通常由以下条件触发：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>无锁→偏向锁：&lt;/strong> 在对象首次被线程访问时，若启用偏向锁，JVM 会将线程 ID 写入对象头标记为偏向 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>偏向锁→轻量级锁：&lt;/strong> 若在偏向锁状态下有第二线程尝试获取该锁，则检测到竞争，偏向锁被撤销并升级为轻量级锁 。撤销时需要安全点（safepoint），此过程将对象头转为指向申请锁的线程的 Lock Record，实现 CAS 自旋锁 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>轻量级锁→重量级锁：&lt;/strong> 如果在轻量级锁状态下竞争仍然激烈（例如自旋等待超过一定次数或线程挂起等待），JVM 会膨胀为重量级锁 。一般来说，超过处理器核心数的一半或固定自旋阈值时，就会升级为重量级锁 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>下面是锁升级过程的简单 Java 示例：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">Counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">syncIncrement&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>上例中，syncIncrement 初次被线程调用时可能处于无锁或偏向锁（只记录线程ID），当另一个线程并发调用时，偏向锁将撤销并切换到轻量级锁；若后续竞争继续，可能升级为重量级锁。读者可以使用 -XX:+PrintSafepointStatistics 等 JVM 参数或 Profiling 工具观察实际执行过程。&lt;/p>
&lt;h3 id="偏向锁的撤销与回退">&lt;strong>偏向锁的撤销与回退&lt;/strong>
&lt;/h3>&lt;p>偏向锁撤销过程复杂：当检测到竞争需要撤销时，JVM 必须在所有线程停止（safepoint）时完成撤销操作 。撤销时一般会将对象头恢复为无锁状态或直接升级为轻量级锁状态 。常见触发情形包括：当前线程调用 Object.hashCode()、执行 wait/notify/monitorexit、JNI 的 MonitorEnter/MonitorExit、Unsafe.monitorEnter 等，都可能强制撤销偏向锁并转为重量级锁 。例如，在撤销偏向锁后，如果发现原偏向线程还在同步块中，则转换为轻量级锁；若偏向线程已经退出同步块，则可将其恢复为无锁或轻量级锁 。&lt;/p>
&lt;p>需要注意的是，锁一旦升级为重量级锁后&lt;strong>不会自动回退&lt;/strong>为轻量级或偏向锁；只有在类级别触发批量重偏向（&lt;em>rebias&lt;/em>）或关闭偏向锁时，未来新对象才能再次使用偏向锁 。在需要性能分析时，可使用 JVM 提供的工具（如 jstack、Java Flight Recorder、JVMTI 接口或 JVisualVM 的锁监控功能）来查看锁竞争和升级情况，直观了解不同锁状态下的行为。&lt;/p>
&lt;h2 id="三各种锁的关系与适用场景">&lt;strong>三、各种锁的关系与适用场景&lt;/strong>
&lt;/h2>&lt;p>Java 提供了多种锁机制：内置的 synchronized 关键字、java.util.concurrent.locks 包下的锁（如 ReentrantLock、ReentrantReadWriteLock）以及原子操作（CAS）等。它们之间的关系和适用场景如下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Synchronized 与 ReentrantLock：&lt;/strong> 两者本质都是可重入的互斥锁。synchronized 是 Java 关键字，在 JVM 层面通过监视器（monitorenter/monitorexit）实现，不需要显式释放锁，执行完同步块后自动解锁；而 ReentrantLock 是 JDK 1.5 引入的锁实现，需要手动 lock() / unlock() 。从底层实现看，synchronized 利用了 JDK6+ 的锁优化（偏向锁、自旋、重量级锁等），而 ReentrantLock 基于 AQS 框架，使用 CAS + 自旋和队列实现 。
&lt;ul>
&lt;li>
&lt;p>ReentrantLock 支持&lt;strong>公平锁&lt;/strong>和&lt;strong>非公平锁&lt;/strong>模式（构造函数中可选），而 synchronized 只支持非公平调度 。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>ReentrantLock 可以响应中断（ &lt;strong>lockInterruptibly()&lt;/strong> ）或尝试超时获取锁（ &lt;strong>tryLock(long, TimeUnit)&lt;/strong> ），而 synchronized 不支持线程中断获取锁 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>ReentrantLock 支持绑定 Condition（条件队列），可实现更灵活的等待/通知，而 synchronized 只能使用 Object.wait()/notify() 机制 。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// synchronized 示例&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">synchronized&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">incrementSync&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 自动加锁和释放&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// ReentrantLock 示例&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReentrantLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// true 表示公平锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">incrementLock&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 需要手动释放锁&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>在高并发场景下，ReentrantLock 提供了更灵活的特性，因此通常推荐使用 。例如，可以选择非公平模式以提高吞吐量，也可以在需要时使用超时或可中断锁。但 synchronized 使用更简单，JVM 优化极好，在无竞争或轻度竞争时性能也非常高 。&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>&lt;strong>非公平锁为什么比公平锁吞吐量高&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>非公平锁&lt;strong>减少了线程切换&lt;/strong>：
&lt;ul>
&lt;li>新线程直接竞争成功就进入临界区，少一次上下文切换。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>公平锁需要：
&lt;ul>
&lt;li>判断自己是否是队列头（多一次检查）。&lt;/li>
&lt;li>如果不是，就必须等待——导致线程更多地陷入等待/唤醒，增加系统负担。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>非公平锁利用&lt;strong>随机性&lt;/strong>：系统调度新线程拿到锁后，可能比排队线程更快执行完，从而总体提高吞吐量。&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>&lt;strong>乐观锁 vs 悲观锁（CAS vs 同步锁）：&lt;/strong> 悲观锁假设会发生冲突，每次访问共享数据前都会上锁（如 synchronized、ReentrantLock） ；乐观锁则假设冲突很少，仅在提交时通过某种机制验证（如 CAS）是否成功 。Java 的原子类（如 AtomicInteger）即使用 CAS + volatile 来实现非阻塞的乐观并发。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// CAS 乐观锁示例：AtomicInteger&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">AtomicInteger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicInteger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">counter&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">incrementAndGet&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 底层使用 CAS 保证原子性&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>在 AtomicInteger 内部，核心实现依赖于 &lt;strong>sun.misc.Unsafe&lt;/strong> 类（JDK 9+ 是 jdk.internal.misc.Unsafe）。&lt;/p>
&lt;p>Unsafe 提供了底层的 compareAndSwapInt 等方法。&lt;/p>
&lt;p>来看一个简化版伪代码：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">class&lt;/span> &lt;span class="nc">AtomicInteger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">volatile&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">value&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">incrementAndGet&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">for&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(;;)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">// 无限循环直到成功&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">compareAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">current&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">boolean&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">compareAndSet&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">expect&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// compare and swap 缩写 CAS&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">compareAndSwapInt&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">valueOffset&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">expect&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">update&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>具体过程&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>当线程 A 调用 incrementAndGet() 时：
&lt;ul>
&lt;li>会先 get() 当前值：这里要读取 value&lt;/li>
&lt;li>另一个线程 B 也可能修改 value&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>因为 value 是 volatile：
&lt;ul>
&lt;li>保证了线程 A 读取 value 时，一定能读到主内存中&lt;strong>最新&lt;/strong>的值（而不是线程本地工作内存的旧值）&lt;/li>
&lt;li>当线程 B 更新 value 后，立即对线程 A 可见&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>然后 CAS 操作：
&lt;ul>
&lt;li>compareAndSwapInt 在比较时，也能保证看到最新的值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>为什么保证原子性&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>compareAndSwapInt 是 CPU 的原子指令，不可被打断&lt;/li>
&lt;li>无论多少线程同时执行，只有一个线程的 CAS 能成功&lt;/li>
&lt;li>失败的线程检测到值变化，就重试，直到成功&lt;/li>
&lt;li>volatile 保证 value 的读取永远是最新值&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;ul>
&lt;li>
&lt;p>CAS 的优点是不涉及操作系统阻塞，适合竞争不激烈、多核场景下的高吞吐量操作 ；缺点是循环重试可能导致 CPU 空转，并存在 ABA 问题。悲观锁则通过阻塞等待保证安全，多用于写操作频繁的场景 。实际应用中，可视情况混合使用：读多写少时可采用读写锁，更新计数等操作可使用 LongAdder/AtomicInteger 等原子类。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>自旋锁与阻塞锁：&lt;/strong> 轻量级锁本质是一种自旋锁，它让等待的线程在用户态循环尝试获取锁而不进入内核阻塞 。自旋锁适用于锁持有时间极短的场景，可减少线程切换开销，但若持锁时间较长或线程数过多，会浪费大量 CPU。与之相对，重量级锁采用阻塞（park）机制，适合长时间等待但会有上下文切换开销。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>读写锁（ReentrantReadWriteLock）：&lt;/strong> 读写锁维护一对锁，一个读锁一个写锁。多个读线程可同时持有读锁（共享），而写锁是独占的。持有写锁的线程可以降级为读锁（即先获取写锁再获取读锁，然后释放写锁） 。读写锁通常用于读多写少的场景，可显著提高并发性能。但若写操作很多，则读写锁的开销可能高于普通互斥锁，因为需要维护更多状态。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ReentrantReadWriteLock 示例：读多写少场景&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">ReentrantReadWriteLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rwLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReentrantReadWriteLock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">readLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rwLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">readLock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">writeLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">rwLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">writeLock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 读方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">doRead&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 读共享资源&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">readLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 写方法&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">doWrite&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writeLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 写共享资源&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">writeLock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>&lt;strong>公平锁 vs 非公平锁：&lt;/strong> 公平锁（new ReentrantLock(true)）按照线程请求顺序授予锁，避免饥饿；非公平锁则可能让新线程“插队”抢锁，从而通常具有更高的吞吐量。synchronized 以及默认的 ReentrantLock 为非公平策略。高并发场景下，非公平锁性能更优，但在需要严格顺序时应使用公平锁 。&lt;/li>
&lt;/ul>
&lt;p>综上所述，在高并发/低延迟系统中，&lt;strong>选择合适的锁策略非常关键&lt;/strong>：volatile 适合于简单的状态标志；原子类（CAS）适合于无锁计数；synchronized 简洁高效、自动释放，适合锁竞争较轻或场景简单；ReentrantLock 则提供更多特性和可调性；读写锁适用于读多写少场景；自旋锁（如轻量级锁）适合短时锁定，否则应切换到阻塞锁避免资源浪费。具体使用时应权衡吞吐量与延迟开销，比如在超低延迟场合尽量避免阻塞、使用非公平锁；在公平性要求高的场合选择公平锁或其他协调方式。&lt;/p>
&lt;p>&lt;strong>参考资料：&lt;/strong> 对于 JMM 和锁机制的深入原理，可参考 JSR-133 提案和 OpenJDK 文档，以及相关文章 等。上述讨论结合实际例子和 HotSpot 实现机制。&lt;/p></description></item><item><title>一致性哈希的简单介绍</title><link>https://cyber-blog.github.io/p/consistent-hash/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/consistent-hash/</guid><description>&lt;p>在分布式系统的设计与实现中，如何有效地管理数据分布、处理节点变动，并保持系统的高可用性与负载均衡，一直是一个核心挑战。随着云计算和微服务架构的广泛应用，传统的哈希方法已显得力不从心，特别是在节点动态变动的情况下。&lt;strong>一致性哈希（Consistent Hashing）算法&lt;/strong>作为一种创新的解决方案，因其显著的优势而被广泛应用于分布式缓存、负载均衡、分布式存储等场景中。&lt;/p>
&lt;p>本文将深度解析一致性哈希算法的工作原理、应用优势与局限性，并探讨它在实际应用中的挑战及潜在的优化方向。&lt;/p>
&lt;hr>
&lt;h2 id="一哈希算法的传统挑战与一致性哈希的提出">&lt;strong>一、哈希算法的传统挑战与一致性哈希的提出&lt;/strong>
&lt;/h2>&lt;h3 id="11-传统哈希算法的局限性">&lt;strong>1.1 传统哈希算法的局限性&lt;/strong>
&lt;/h3>&lt;p>哈希算法在分布式系统中的主要目的是将数据均匀地分配到多个节点上，从而保证数据的高可用性与系统的负载均衡。然而，传统哈希算法在处理节点变动时存在几个显著的缺点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>节点变动时的数据重分配&lt;/strong>：在传统哈希算法中，每次节点增加或减少时，数据需要重新分配。假设我们有N个节点，每个节点承载M个数据，节点数量变化时，可能需要重新映射大量数据。这种数据迁移不仅增加了系统的负担，还会导致性能下降。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>负载不均问题&lt;/strong>：节点的负载不均可能导致某些节点超负荷运行，而其他节点则空闲，影响系统的响应速度和稳定性。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>节点动态性问题&lt;/strong>：分布式系统中，节点的数量通常是动态的，如何高效地处理节点的增删，成为了分布式架构中的一个挑战。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="12-一致性哈希的提出">&lt;strong>1.2 一致性哈希的提出&lt;/strong>
&lt;/h3>&lt;p>为了应对这些挑战，&lt;strong>David Karger&lt;/strong> 等人于1997年提出了一致性哈希算法。该算法旨在通过减少节点变动时的数据迁移，降低系统的负担，实现平滑的数据迁移和高效的负载均衡。其核心思想是将整个哈希空间映射为一个环，每个节点和数据项都通过哈希函数映射到环上，数据项总是被存储到第一个顺时针方向上哈希值大于或等于数据项哈希值的节点上。&lt;/p>
&lt;hr>
&lt;h2 id="二一致性哈希算法的核心原理">&lt;strong>二、一致性哈希算法的核心原理&lt;/strong>
&lt;/h2>&lt;p>一致性哈希的核心思想通过哈希环来实现节点与数据的映射，从而减少节点增减时的数据迁移量。&lt;/p>
&lt;h3 id="21-哈希环与节点分布">&lt;strong>2.1 哈希环与节点分布&lt;/strong>
&lt;/h3>&lt;p>一致性哈希的工作原理基于一个哈希环，将哈希空间视为一个大环（例如0到2^32-1的整数区间）。每个节点和数据项都通过哈希函数映射到这个环上。数据项会被存储在哈希值大于或等于数据项哈希值的第一个节点上。节点的哈希值可以通过hash(node)计算得到，而数据项的哈希值则通过hash(data)来计算。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>节点映射&lt;/strong>：每个节点被映射到哈希环上一个位置，假设节点的哈希值为hash(node)，则节点在哈希环上的位置就是hash(node) % 2^32。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据映射&lt;/strong>：每个数据项（例如用户请求的key）会通过hash(data)计算其哈希值，然后顺时针方向找到第一个哈希值大于或等于该数据项哈希值的节点，将数据存储到该节点。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="22-节点增减的处理">&lt;strong>2.2 节点增减的处理&lt;/strong>
&lt;/h3>&lt;p>一致性哈希的优势之一就是对节点增删的高效处理。传统哈希方法在节点变动时需要重新分配所有数据，但一致性哈希只会影响与新增或删除节点相邻的数据项。&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>节点增加&lt;/strong>：当新增一个节点时，只有距离其哈希值最近的数据项会被迁移到该节点。其他节点上的数据不受影响，极大地减少了数据的迁移量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>节点删除&lt;/strong>：当一个节点被删除时，它所存储的数据会由顺时针方向上的下一个节点接管，迁移的数据量也被限制在相邻节点之间。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="23-虚拟节点的引入">&lt;strong>2.3 虚拟节点的引入&lt;/strong>
&lt;/h3>&lt;p>为了避免哈希环上节点分布不均带来的负载不均问题，一致性哈希引入了虚拟节点的概念。每个物理节点可以映射到多个虚拟节点，这样即使物理节点数量较少，虚拟节点的数量足够多，依然能保证数据的均匀分布。&lt;/p>
&lt;ul>
&lt;li>&lt;strong>虚拟节点映射&lt;/strong>：每个物理节点通过哈希函数生成多个虚拟节点，每个虚拟节点占有哈希环上的一个位置。虚拟节点可以帮助平衡负载，避免某些节点因为物理节点数量较少而导致负载不均。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="三一致性哈希的优缺点">&lt;strong>三、一致性哈希的优缺点&lt;/strong>
&lt;/h2>&lt;h3 id="31-优点">&lt;strong>3.1 优点&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>减少数据迁移&lt;/strong>：一致性哈希通过节点的局部调整，显著减少了数据迁移量。例如，新增节点时，只需迁移一小部分数据，避免了全量数据迁移的开销。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>负载均衡&lt;/strong>：虚拟节点的引入使得数据的分布更加均匀，能够有效解决节点负载不均的问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>高扩展性和容错性&lt;/strong>：一致性哈希能够平滑处理节点的增减，使得系统具有很高的扩展性。在节点失败时，数据的丢失范围也较小，具备较强的容错能力。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="32-缺点">&lt;strong>3.2 缺点&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>虚拟节点的管理复杂性&lt;/strong>：尽管虚拟节点在负载均衡方面发挥了重要作用，但它们的管理需要额外的计算与存储。特别是在节点频繁变化时，如何合理分配和管理虚拟节点成为了一个挑战。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>数据热点问题&lt;/strong>：尽管一致性哈希减少了数据的迁移，但在某些情况下，特定节点的负载可能仍然过高，导致出现热点问题。这个问题可以通过更加智能的虚拟节点管理来解决，但它仍然是一个需要优化的方向。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="四一致性哈希与其他算法的比较">&lt;strong>四、一致性哈希与其他算法的比较&lt;/strong>
&lt;/h2>&lt;p>一致性哈希算法相较于其他常见的哈希或负载均衡算法，在节点变动处理上的效率显著更高。以下是几种常见哈希算法的比较：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>随机哈希&lt;/strong>：随机哈希将数据随机分配到多个节点上，无法保证数据的均匀分布，并且在节点增减时会产生大量数据迁移。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>目标哈希&lt;/strong>：目标哈希通过节点与数据之间的目标值映射来进行负载均衡。尽管其在节点变动时的表现不如一致性哈希高效，但它在一些场景下仍有应用价值。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>一致性哈希通过哈希环和虚拟节点的引入，优化了数据迁移问题，实现了更高效的数据分配和负载均衡。&lt;/p>
&lt;hr>
&lt;h2 id="五一致性哈希的实际应用案例">&lt;strong>五、一致性哈希的实际应用案例&lt;/strong>
&lt;/h2>&lt;h3 id="51-分布式缓存">&lt;strong>5.1 分布式缓存&lt;/strong>
&lt;/h3>&lt;p>在分布式缓存系统中，一致性哈希被广泛应用。例如，&lt;strong>Memcached&lt;/strong> 和 &lt;strong>Redis&lt;/strong> 等缓存系统使用一致性哈希来优化节点增减时的数据迁移。当缓存节点的数量发生变化时，仅需迁移相邻的数据，而非全量迁移，极大地降低了成本。&lt;/p>
&lt;h3 id="52-分布式存储与数据库">&lt;strong>5.2 分布式存储与数据库&lt;/strong>
&lt;/h3>&lt;p>分布式数据库如&lt;strong>Amazon DynamoDB&lt;/strong> 和 &lt;strong>Cassandra&lt;/strong> 使用一致性哈希来实现高效的分布式存储。通过一致性哈希，数据分布可以平滑地处理节点的增删，减少了扩展过程中的数据迁移和负载不均问题。&lt;/p>
&lt;h3 id="53-负载均衡">&lt;strong>5.3 负载均衡&lt;/strong>
&lt;/h3>&lt;p>在&lt;strong>Nginx&lt;/strong> 和 &lt;strong>HAProxy&lt;/strong> 等负载均衡器中，一致性哈希通过客户端请求特征（如IP地址）实现请求分配。这样，当新增后端服务器时，仅会影响与新节点相邻的请求，减少了重新分配的开销。&lt;/p>
&lt;hr>
&lt;h2 id="六未来发展与优化">&lt;strong>六、未来发展与优化&lt;/strong>
&lt;/h2>&lt;p>尽管一致性哈希已经在多个领域取得了成功，但仍然有进一步的优化空间。以下是几个潜在的优化方向：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>虚拟节点的自适应管理&lt;/strong>：可以引入自适应算法，根据节点负载和变动情况动态调整虚拟节点的数量与分布。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>混合算法&lt;/strong>：结合一致性哈希与其他负载均衡算法（如目标哈希、最小负载等），通过智能调度进一步提升数据分布的均衡性和系统的效率。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="七总结">&lt;strong>七、总结&lt;/strong>
&lt;/h2>&lt;p>一致性哈希算法为分布式系统提供了一个高效、低成本的数据分配和负载均衡解决方案。通过哈希环和虚拟节点的创新设计，它能够在节点增减时显著减少数据迁移，保证系统的高可用性和扩展性。尽管存在虚拟节点管理和数据热点等挑战，但一致性哈希在分布式缓存、存储、负载均衡等领域的广泛应用，已经证明了它的重要性。随着技术的发展，一致性哈希算法有望进一步优化，提升其在更复杂分布式环境下的适应能力。&lt;/p></description></item><item><title>分布式锁的实现原理与方式详解</title><link>https://cyber-blog.github.io/p/distributed-lock/</link><pubDate>Sat, 07 Jun 2025 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/distributed-lock/</guid><description>&lt;h1 id="分布式锁的实现原理与方式详解">分布式锁的实现原理与方式详解
&lt;/h1>&lt;h2 id="一基于-redis-的分布式锁实现">一、基于 Redis 的分布式锁实现
&lt;/h2>&lt;p>Redis 是目前使用最广泛的分布式锁方案之一，通常通过如下命令实现：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">SET lock_key unique_id NX PX &lt;span class="m">30000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="参数说明">参数说明
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;code>lock_key&lt;/code>：&lt;strong>键（Key）&lt;/strong>，表示分布式锁在 Redis 中的标识名；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>unique_id&lt;/code>：&lt;strong>值（Value）&lt;/strong>，代表当前请求加锁的客户端唯一标识（例如 UUID + ThreadID），用于确保释放锁时身份验证；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>NX&lt;/code>：表示仅在键不存在时才进行设置，防止覆盖其他客户端已持有的锁；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>PX 30000&lt;/code>：设置键的过期时间为 30 秒，防止因客户端异常退出而产生死锁。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="加锁失败的返回值">加锁失败的返回值
&lt;/h3>&lt;p>如果 &lt;code>lock_key&lt;/code> 已存在，说明已有其他线程持有锁，命令将返回 &lt;code>null&lt;/code>，表示加锁失败。&lt;/p>
&lt;h3 id="解锁-lua-脚本示例">解锁 Lua 脚本示例
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-lua" data-lang="lua">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;get&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;del&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>该脚本判断当前请求者是否为锁的持有者（通过比对 &lt;code>unique_id&lt;/code>），只有持有者才能安全释放锁。&lt;/p>
&lt;hr>
&lt;h2 id="二基于-redisson-的分布式锁实现">二、基于 Redisson 的分布式锁实现
&lt;/h2>&lt;p>Redisson 是 Redis 官方推荐的 Java 客户端之一，封装了丰富的分布式对象，其中对分布式锁的支持较为完整。&lt;/p>
&lt;h3 id="主要特性">主要特性
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>支持可重入锁（同一线程可多次加锁）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Watchdog 自动续期机制，防止锁自动过期；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lua 脚本保障操作原子性；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>支持公平锁、读写锁、联锁等高级功能。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="加锁-lua-脚本">加锁 Lua 脚本
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-lua" data-lang="lua">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;exists&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hset&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pexpire&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hexists&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hincrby&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pexpire&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">return&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pttl&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>使用 Hash 存储锁持有者及重入次数；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>ARGV[2]&lt;/code> 为唯一标识（如线程 ID）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若当前线程已持有锁，则重入计数 +1 并续期。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="解锁-lua-脚本">解锁 Lua 脚本
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-lua" data-lang="lua">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hexists&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">])&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">local&lt;/span> &lt;span class="n">counter&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;hincrby&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">counter&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;pexpire&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">ARGV&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">redis.call&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;del&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">KEYS&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>减少持有者的重入计数；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若减为 0，释放锁。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="watchdog-自动续期机制">Watchdog 自动续期机制
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>默认锁的 TTL 为 30 秒；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>若未显式设置 TTL，Redisson 会启动“看门狗”线程，每隔 10 秒自动续期，直至业务逻辑完成；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>避免因执行时间较长导致锁意外过期。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="java-使用示例">Java 使用示例
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">RLock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">redissonClient&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;myLock&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">tryLock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">30&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SECONDS&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 执行业务逻辑&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">finally&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isHeldByCurrentThread&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">lock&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">unlock&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="三lua-脚本为何具备原子性">三、Lua 脚本为何具备原子性？
&lt;/h2>&lt;h3 id="核心机制">核心机制
&lt;/h3>&lt;p>Redis 执行 Lua 脚本时具备以下特性：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Redis 使用单线程模型；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>EVAL&lt;/code> 命令整体作为一个事务执行；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>执行脚本期间不会响应其他客户端请求；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>脚本内部多个 Redis 命令会被整体提交执行，无法被打断。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>因此，在 Redis 中执行 Lua 脚本具有天然的原子性，能够有效避免竞态条件。&lt;/p>
&lt;hr>
&lt;h2 id="四分布式锁的其他实现方式">四、分布式锁的其他实现方式
&lt;/h2>&lt;h3 id="1-基于数据库如-mysqlpostgresql">1. 基于数据库（如 MySQL/PostgreSQL）
&lt;/h3>&lt;h4 id="实现方式">实现方式
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>利用唯一约束：&lt;code>INSERT INTO lock_table (key) VALUES ('lockKey')&lt;/code>；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>或使用悲观锁：&lt;code>SELECT ... FOR UPDATE&lt;/code>。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="优缺点">优缺点
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;strong>优点&lt;/strong>：实现简单、依赖较少、与业务数据库一致性强；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缺点&lt;/strong>：性能较差，不适合高并发场景，可能引发死锁或阻塞。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="2-基于-zookeeper-的分布式锁">2. 基于 ZooKeeper 的分布式锁
&lt;/h3>&lt;h4 id="实现方式-1">实现方式
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>利用临时顺序节点（&lt;code>Ephemeral Sequential&lt;/code>）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有客户端在某节点下创建顺序子节点；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>排序最小的节点获得锁，其他客户端监听前一个节点。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="优缺点-1">优缺点
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;strong>优点&lt;/strong>：可靠性高、天然支持顺序和事件通知机制；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缺点&lt;/strong>：部署复杂、性能受限于 ZooKeeper 的吞吐能力。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="3-基于-etcd-的分布式锁">3. 基于 Etcd 的分布式锁
&lt;/h3>&lt;h4 id="实现方式-2">实现方式
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>利用 Etcd 的租约（Lease）和事务（Txn）；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>客户端通过 CAS 机制创建唯一锁键，并绑定租约；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>续期机制保障锁的持有。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="优缺点-2">优缺点
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>&lt;strong>优点&lt;/strong>：一致性强、适用于容器编排等场景；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>缺点&lt;/strong>：相对复杂，需要管理租约续期和连接状态。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="五小结">五、小结
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>实现方式&lt;/th>
&lt;th>优点&lt;/th>
&lt;th>缺点&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Redis&lt;/td>
&lt;td>高性能、实现简单、生态丰富&lt;/td>
&lt;td>容易出现锁失效或误删&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Redisson&lt;/td>
&lt;td>功能丰富、支持自动续期&lt;/td>
&lt;td>相对重量级，需客户端支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>数据库&lt;/td>
&lt;td>简单易用、无需引入中间件&lt;/td>
&lt;td>性能瓶颈明显，存在死锁风险&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ZooKeeper&lt;/td>
&lt;td>高可靠性、顺序性好&lt;/td>
&lt;td>部署复杂、性能有限&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Etcd&lt;/td>
&lt;td>一致性强、支持租约机制&lt;/td>
&lt;td>运维成本高，使用门槛较高&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>选择分布式锁实现方案时，应根据系统性能需求、可靠性要求和技术栈综合考虑。&lt;/p></description></item><item><title>Java 线程池详解</title><link>https://cyber-blog.github.io/p/java-threadpool-details/</link><pubDate>Tue, 01 Apr 2025 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/java-threadpool-details/</guid><description>&lt;h1 id="java-线程池详解">Java 线程池详解
&lt;/h1>&lt;p>Java 中的线程池是并发编程中非常重要的一部分，用于提高程序的性能和资源利用率，减少频繁创建和销毁线程的开销。本文将循序渐进地介绍 Java 线程池的构造参数、常见类型及其适用场景，帮助开发者选择和配置合适的线程池。&lt;/p>
&lt;hr>
&lt;h2 id="一线程池基础threadpoolexecutor-构造函数">一、线程池基础：ThreadPoolExecutor 构造函数
&lt;/h2>&lt;p>Java 提供了 &lt;code>ThreadPoolExecutor&lt;/code> 类用于自定义线程池，其构造函数如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">ThreadPoolExecutor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">corePoolSize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">maximumPoolSize&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">keepAliveTime&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unit&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">BlockingQueue&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">workQueue&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadFactory&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">threadFactory&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">RejectedExecutionHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">handler&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="参数详解">参数详解
&lt;/h3>&lt;h4 id="1-corepoolsize核心线程数">1. corePoolSize（核心线程数）
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>线程池中始终保留的线程数量，即使空闲也不会被销毁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当任务提交时，如果当前线程数小于 corePoolSize，会创建新线程处理任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="2-maximumpoolsize最大线程数">2. maximumPoolSize（最大线程数）
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>线程池允许的最大线程数量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>当队列已满且线程数小于 maximumPoolSize 时，线程池会创建新线程处理任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="3-keepalivetime--unit空闲线程最大存活时间">3. keepAliveTime + unit（空闲线程最大存活时间）
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>非核心线程在空闲时间超过此值时会被回收。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>默认对核心线程无效，可通过 &lt;code>allowCoreThreadTimeOut(true)&lt;/code> 启用。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="4-workqueue任务等待队列">4. workQueue（任务等待队列）
&lt;/h4>&lt;p>用于缓存等待执行的任务，常见实现：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>特点&lt;/th>
&lt;th>适用场景&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>ArrayBlockingQueue&lt;/td>
&lt;td>有界，FIFO&lt;/td>
&lt;td>控制内存使用，防止 OOM&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>LinkedBlockingQueue&lt;/td>
&lt;td>默认无界&lt;/td>
&lt;td>默认队列类型，需防范内存泄漏风险&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SynchronousQueue&lt;/td>
&lt;td>不缓存任务&lt;/td>
&lt;td>高并发、短任务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PriorityBlockingQueue&lt;/td>
&lt;td>支持任务优先级&lt;/td>
&lt;td>有优先级需求的场景&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="5-threadfactory线程工厂">5. threadFactory（线程工厂）
&lt;/h4>&lt;ul>
&lt;li>用于自定义线程创建逻辑，如命名、守护线程设置等。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadFactory&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicInteger&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">AtomicInteger&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">newThread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">r&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;MyThread-&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">count&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getAndIncrement&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="6-handler拒绝策略">6. handler（拒绝策略）
&lt;/h4>&lt;ul>
&lt;li>当线程池和队列已满时，任务提交会触发拒绝策略。&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>策略类&lt;/th>
&lt;th>行为&lt;/th>
&lt;th>是否抛异常&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AbortPolicy&lt;/td>
&lt;td>抛出异常&lt;/td>
&lt;td>✅ 是&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CallerRunsPolicy&lt;/td>
&lt;td>由调用者线程执行&lt;/td>
&lt;td>❌ 否&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DiscardPolicy&lt;/td>
&lt;td>直接丢弃任务&lt;/td>
&lt;td>❌ 否&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DiscardOldestPolicy&lt;/td>
&lt;td>丢弃队列中最旧的任务&lt;/td>
&lt;td>❌ 否&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;hr>
&lt;h2 id="二任务处理流程简化逻辑">二、任务处理流程（简化逻辑）
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> +------------------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 提交任务 executor.execute() |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +---------------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-------------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 当前线程数 &amp;lt; corePoolSize ? |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-------------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 是
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 创建线程立即执行任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 否
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-------------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 队列未满？（workQueue） |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-------------+--------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 是
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 放入队列等待
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 否
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +--------------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 当前线程数 &amp;lt; maximumPoolSize ? |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +--------------+-------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | 是
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 创建线程立即执行任务
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 否
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> v
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 触发拒绝策略（handler）
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="三executors-提供的线程池工厂方法">三、Executors 提供的线程池工厂方法
&lt;/h2>&lt;p>除了手动创建线程池，Java 提供了 &lt;code>Executors&lt;/code> 工具类简化常见线程池的创建方式：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>类型&lt;/th>
&lt;th>方法&lt;/th>
&lt;th>特点&lt;/th>
&lt;th>适用场景&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>固定线程池&lt;/td>
&lt;td>&lt;code>Executors.newFixedThreadPool(n)&lt;/code>&lt;/td>
&lt;td>固定线程数，无界队列&lt;/td>
&lt;td>稳定任务量，控制并发&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>缓存线程池&lt;/td>
&lt;td>&lt;code>Executors.newCachedThreadPool()&lt;/code>&lt;/td>
&lt;td>无限线程数，空闲线程回收&lt;/td>
&lt;td>高并发、短任务&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>单线程池&lt;/td>
&lt;td>&lt;code>Executors.newSingleThreadExecutor()&lt;/code>&lt;/td>
&lt;td>单线程顺序执行&lt;/td>
&lt;td>日志、事务顺序&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>定时线程池&lt;/td>
&lt;td>&lt;code>Executors.newScheduledThreadPool(n)&lt;/code>&lt;/td>
&lt;td>支持定时与周期任务&lt;/td>
&lt;td>定时任务处理&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>单线程定时池&lt;/td>
&lt;td>&lt;code>Executors.newSingleThreadScheduledExecutor()&lt;/code>&lt;/td>
&lt;td>单线程定时任务&lt;/td>
&lt;td>严格顺序定时任务&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="各线程池使用示例与说明">各线程池使用示例与说明
&lt;/h3>&lt;h4 id="1-fixedthreadpool">1. FixedThreadPool
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newFixedThreadPool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>固定线程数，线程不会被销毁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用无界队列，需注意任务积压可能导致 OOM。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="2-cachedthreadpool">2. CachedThreadPool
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newCachedThreadPool&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>无限线程创建，适合短期高并发任务。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 &lt;code>SynchronousQueue&lt;/code>，不会缓存任务。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="3-singlethreadexecutor">3. SingleThreadExecutor
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newSingleThreadExecutor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>
&lt;p>单线程执行所有任务，保证顺序。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>可用于串行化控制任务执行顺序。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h4 id="4-scheduledthreadpool">4. ScheduledThreadPool
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ScheduledExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newScheduledThreadPool&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>支持延迟和周期性执行任务：&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">pool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">schedule&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SECONDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">scheduleAtFixedRate&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">task&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SECONDS&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="5-singlethreadscheduledexecutor">5. SingleThreadScheduledExecutor
&lt;/h4>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ScheduledExecutorService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newSingleThreadScheduledExecutor&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>单线程定时任务调度器，适用于需要顺序和定时的任务。&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="四executors-工厂方法的潜在风险">四、Executors 工厂方法的潜在风险
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>FixedThreadPool 和 SingleThreadExecutor 使用 &lt;strong>无界队列&lt;/strong>，任务堆积可能导致内存溢出；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>CachedThreadPool 最大线程数无限制，线程创建过多可能引发 OOM；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h3 id="-推荐实践">✅ 推荐实践
&lt;/h3>&lt;blockquote>
&lt;p>明确指定线程池参数，避免默认配置带来的不确定性。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">executor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">60&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TimeUnit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">SECONDS&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayBlockingQueue&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">100&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Executors&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">defaultThreadFactory&lt;/span>&lt;span class="p">(),&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ThreadPoolExecutor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">AbortPolicy&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;hr>
&lt;h2 id="五总结与建议">五、总结与建议
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>对于一般项目，推荐根据任务特性合理配置 ThreadPoolExecutor；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Executors 提供的快捷工厂方法方便但存在默认值陷阱；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>线程池需监控运行状态，避免资源耗尽或任务堆积；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>定期评估线程池的负载情况，调整配置参数。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>使用线程池是一项系统工程，需要根据任务类型、系统资源、服务目标进行细致规划与调优。&lt;/p></description></item><item><title>Redis Hash 结构的底层实现</title><link>https://cyber-blog.github.io/p/redis-hash/</link><pubDate>Tue, 24 Dec 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/redis-hash/</guid><description>&lt;h1 id="java-hashmap-和-redis-hash-的区别">Java HashMap 和 Redis Hash 的区别
&lt;/h1>&lt;p>• &lt;strong>Redis 的 hash&lt;/strong>:&lt;/p>
&lt;p>• Redis 的 hash 是基于自定义的哈希表实现，支持高效的键值对操作。&lt;/p>
&lt;p>• 其内部实现利用了 &lt;strong>dict&lt;/strong> 数据结构，具体是通过动态哈希表和链地址法处理冲突。&lt;/p>
&lt;p>• Redis 的 hash 可以存储较大规模的数据，但一般会限制在单个键值对（Field 和 Value）的大小范围内。&lt;/p>
&lt;p>• &lt;strong>Java 的 HashMap&lt;/strong>:&lt;/p>
&lt;p>• Java 的 HashMap 是基于 &lt;strong>数组 + 链表 + 红黑树&lt;/strong> 实现的哈希表。&lt;/p>
&lt;p>• 当链表长度超过阈值（默认 8）时，会将链表转换为红黑树以优化性能。&lt;/p>
&lt;p>在 Redis 中，dict 是 Redis 内部用来实现哈希表的一种核心数据结构。它为 Redis 的很多功能提供了基础支持，包括键值存储、集合和哈希类型等。&lt;/p>
&lt;h2 id="dict">dict
&lt;/h2>&lt;p>• dict 是 Redis 的哈希表实现。&lt;/p>
&lt;p>• 它的主要目的是提供快速的键值对存储和检索。&lt;/p>
&lt;p>• 由两个哈希表组成，用于支持渐进式 rehash 操作（扩容或缩容时逐步迁移数据）。&lt;/p>
&lt;h3 id="结构组成">结构组成
&lt;/h3>&lt;p>Redis 的 dict 主要由以下几个部分组成：&lt;/p>
&lt;ol>
&lt;li>dict 结构
dict 是一个封装了哈希表的结构，它包含两个 dictEntry 数组和一些辅助信息。定义如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">dict&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dictType&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">type&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 类型特定函数（如计算哈希值、键比较等）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">privdata&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 私有数据指针，供用户使用
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">dictht&lt;/span> &lt;span class="n">ht&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">];&lt;/span> &lt;span class="c1">// 两个哈希表，ht[0] 和 ht[1]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">rehashidx&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// rehash 索引，-1 表示未进行 rehash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">iterators&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 当前运行的安全迭代器数量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">dict&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>dictht 结构
dictht 是具体的哈希表结构，定义如下：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">dictht&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dictEntry&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">table&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 哈希表数组
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">size&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 哈希表大小
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">sizemask&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 用于计算索引的掩码 (size - 1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">long&lt;/span> &lt;span class="n">used&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 已使用的节点数量
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">dictht&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ul>
&lt;li>table 是一个指针数组，每个元素指向一个 dictEntry 链表的头结点。&lt;/li>
&lt;li>sizemask 和 size 用于快速计算哈希值的存储位置。&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>dictEntry 结构
dictEntry 是存储具体键值对的结构：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">dictEntry&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 键
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">union&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 值（通用指针）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">uint64_t&lt;/span> &lt;span class="n">u64&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 64 位无符号整数值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">int64_t&lt;/span> &lt;span class="n">s64&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 64 位有符号整数值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">d&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 浮点值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span> &lt;span class="n">v&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 值
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">struct&lt;/span> &lt;span class="n">dictEntry&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="c1">// 指向下一个节点，用于处理哈希冲突（链表法）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="p">}&lt;/span> &lt;span class="n">dictEntry&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="dict的特性">dict的特性
&lt;/h4>&lt;ol>
&lt;li>
&lt;p>&lt;strong>双哈希表支持&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>Redis 的 dict 拥有两个哈希表（ht[0] 和 ht[1]），正常情况下只使用 ht[0]。&lt;/li>
&lt;li>在扩容或缩容时，ht[1] 会被用来暂存新数据，然后逐步将数据从 ht[0] 迁移到 ht[1]。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>渐进式 Rehash&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>扩容或缩容时，Redis 不会一次性完成哈希表的重建。&lt;/li>
&lt;li>每次对哈希表进行读/写操作时，Redis 会将 ht[0] 中的一部分数据迁移到 ht[1]，从而避免性能抖动。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>动态调整大小&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>Redis 会根据哈希表的负载因子（used / size）动态调整哈希表的大小：&lt;/li>
&lt;li>当负载因子超过 1（即元素数量大于桶数量）时，触发扩容。&lt;/li>
&lt;li>当 Redis 处于高内存压力时（maxmemory 限制），负载因子可以放宽到 5。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>冲突解决&lt;/strong>:&lt;/p>
&lt;ul>
&lt;li>使用链地址法解决哈希冲突。&lt;/li>
&lt;li>同一索引的多个键值对通过 dictEntry 链表连接。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="redis-dict-和-java-hash表有何不同">Redis Dict 和 Java Hash表有何不同
&lt;/h2>&lt;h3 id="数据结构">数据结构
&lt;/h3>&lt;p>&lt;strong>Redis Dict&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>数组&lt;/strong>：哈希槽的核心存储，每个槽位可以指向一个链表。初始大小通常根据实际数据动态调整，避免空间浪费。&lt;/li>
&lt;li>&lt;strong>链表&lt;/strong>：用于处理哈希冲突，存储冲突的键值对。Redis 的链表比较简单，只是一个线性链表，没有复杂的数据结构。&lt;/li>
&lt;li>&lt;strong>渐进式 Rehash&lt;/strong>：
&lt;ul>
&lt;li>Redis 通过维护两张哈希表（ht[0] 和 ht[1]）来实现动态扩容或缩容。扩容时避免一次性拷贝，通过增量方式分批迁移数据。&lt;/li>
&lt;li>数据迁移是逐步完成的，不会阻塞服务。&lt;/li>
&lt;li>优势：不会造成显著的性能抖动。&lt;/li>
&lt;li>劣势：Rehash 完成前需要维护两张哈希表，稍微增加了内存开销。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Java HashMap&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>&lt;strong>数组&lt;/strong>：存储哈希桶，每个桶可以指向一个链表或树结构。&lt;/li>
&lt;li>&lt;strong>链表&lt;/strong>：用于解决冲突，链表长度超过阈值后会转换为红黑树。
&lt;ul>
&lt;li>&lt;strong>链表转红黑树&lt;/strong>：
&lt;ul>
&lt;li>在链表长度超过 8 时，链表自动转化为红黑树，降低最坏情况下的查找复杂度（从 O(n) 降到 O(log n)）。&lt;/li>
&lt;li>当节点数量少于 6 时，会回退为链表。&lt;/li>
&lt;li>优势：极大优化了高冲突情况下的性能。&lt;/li>
&lt;li>劣势：引入红黑树增加了实现复杂性。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>直接扩容&lt;/strong>：
&lt;ul>
&lt;li>HashMap 在负载因子达到阈值时（默认 0.75）触发扩容，直接分配新的数组，将所有数据重新哈希并迁移。会导致明显的性能开销，尤其在存储大量数据时。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>总结&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>特性&lt;/th>
&lt;th>Redis Dict&lt;/th>
&lt;th>Java HashMap&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>核心结构&lt;/td>
&lt;td>数组 + 链表&lt;/td>
&lt;td>数组 + 链表/红黑树&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>扩容机制&lt;/td>
&lt;td>渐进式 Rehash&lt;/td>
&lt;td>直接扩容，性能可能抖动&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>冲突处理&lt;/td>
&lt;td>链地址法（链表）&lt;/td>
&lt;td>链地址法 + 链表转树&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>并发支持&lt;/td>
&lt;td>单线程操作&lt;/td>
&lt;td>线程不安全，多线程需额外支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>实现复杂度&lt;/td>
&lt;td>简单，轻量化&lt;/td>
&lt;td>较复杂，支持更多功能&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>适用场景&lt;/td>
&lt;td>高性能内存数据库&lt;/td>
&lt;td>通用本地存储&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>实用深度学习 Part1-1.入门</title><link>https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/</link><pubDate>Thu, 19 Dec 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/</guid><description>&lt;h1 id="它是一只鸟吗-从您自己的数据创建模型">它是一只鸟吗？ 从您自己的数据创建模型
&lt;/h1>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#NB: Kaggle requires phone verification to use the internet or a GPU. If you haven&amp;#39;t done that yet, the cell below will fail&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># This code is only here to check that your internet is enabled. It doesn&amp;#39;t do anything else.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Here&amp;#39;s a help thread on getting your phone number verified: https://www.kaggle.com/product-feedback/135367&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">socket&lt;/span>&lt;span class="o">,&lt;/span>&lt;span class="nn">warnings&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">try&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">setdefaulttimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">AF_INET&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">SOCK_STREAM&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">((&lt;/span>&lt;span class="s1">&amp;#39;1.1.1.1&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">53&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">except&lt;/span> &lt;span class="n">socket&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">error&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">ex&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="k">raise&lt;/span> &lt;span class="ne">Exception&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;STOP: No internet. Click &amp;#39;&amp;gt;|&amp;#39; in top right and set &amp;#39;Internet&amp;#39; switch to on&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># It&amp;#39;s a good idea to ensure you&amp;#39;re running the latest version of any libraries you need.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># `!pip install -Uqq &amp;lt;libraries&amp;gt;` upgrades to the latest version of &amp;lt;libraries&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># NB: You can safely ignore any warnings or errors pip spits out about running as root or incompatibilities&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">iskaggle&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">environ&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;KAGGLE_KERNEL_RUN_TYPE&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="n">iskaggle&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">!&lt;/span>&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">Uqq&lt;/span> &lt;span class="n">fastai&lt;/span> &lt;span class="s1">&amp;#39;duckduckgo_search&amp;gt;=6.2&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>2015 年，创建一个可以识别鸟类的计算机系统的想法被认为非常具有挑战性，以至于它成为这个 XKCD 笑话的基础：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219180609.png"
width="606"
height="489"
srcset="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219180609_hu3323407491388893832.png 480w, https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219180609_hu1595402411412305774.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="123"
data-flex-basis="297px"
>&lt;/p>
&lt;p>但今天，我们只需几分钟就可以使用完全免费的资源做到这一点！
我们将采取的基本步骤是：&lt;/p>
&lt;ol>
&lt;li>使用 DuckDuckGo 搜索“鸟照片”的图片&lt;/li>
&lt;li>使用 DuckDuckGo 搜索“森林照片”的图片&lt;/li>
&lt;li>微调预训练的神经网络以识别这两组&lt;/li>
&lt;li>尝试在鸟的图片上运行此模型，看看它是否有效。&lt;/li>
&lt;/ol>
&lt;h2 id="step-1-下载鸟类和非鸟类的图像">Step 1: 下载鸟类和非鸟类的图像
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">duckduckgo_search&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">DDGS&lt;/span> &lt;span class="c1">#DuckDuckGo has changed the api so we need to update &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fastcore.all&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">search_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">keywords&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_images&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">200&lt;/span>&lt;span class="p">):&lt;/span> &lt;span class="k">return&lt;/span> &lt;span class="n">L&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DDGS&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">keywords&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_results&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">max_images&lt;/span>&lt;span class="p">))&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">itemgot&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;image&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">time&lt;/span>&lt;span class="o">,&lt;/span> &lt;span class="nn">json&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>让我们从搜索鸟照片开始，看看我们得到什么样的结果。我们首先从搜索中获取 URL：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#NB: `search_images` depends on duckduckgo.com, which doesn&amp;#39;t always return correct responses.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># If you get a JSON error, just try running it again (it may take a couple of tries).&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">urls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">search_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;bird photos&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_images&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">urls&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">&amp;#39;https://images.pexels.com/photos/326900/pexels-photo-326900.jpeg?cs=srgb&amp;amp;dl=wood-flight-bird-326900.jpg&amp;amp;fm=jpg&amp;#39;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&amp;hellip;然后下载图片并查看它：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fastdownload&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">download_url&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;bird.jpg&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">download_url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">urls&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">show_progress&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">fastai.vision.all&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="o">*&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">im&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">im&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_thumb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181231.png"
width="256"
height="171"
srcset="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181231_hu11753680461174853147.png 480w, https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181231_hu11827023049726065876.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>现在让我们下载“森林照片”并压缩事情：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">download_url&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">search_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;forest photos&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_images&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="s1">&amp;#39;forest.jpg&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">show_progress&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">False&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Image&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;forest.jpg&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_thumb&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">256&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181346.png"
width="256"
height="144"
srcset="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181346_hu4261206687157492178.png 480w, https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219181346_hu17184510574698968972.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="177"
data-flex-basis="426px"
>&lt;/p>
&lt;p>我们搜索到了想要的结果，所以让我们再多下载一些“鸟”和“森林”的照片，并将它们保存到不同的文件夹中：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">searches&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;forest&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s1">&amp;#39;bird&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Path&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;bird_or_not&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">for&lt;/span> &lt;span class="n">o&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="n">searches&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dest&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">dest&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">mkdir&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">exist_ok&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">parents&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">download_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dest&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">urls&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">search_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s1">&amp;#39;&lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s1"> photo&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">resize_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">max_size&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">400&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">dest&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">o&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="step-2-训练我们的模型">Step 2: 训练我们的模型
&lt;/h2>&lt;p>有些照片可能无法正确下载，这可能会导致模型训练失败，因此需要删除它们：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">failed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">verify_images&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">get_image_files&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">failed&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">unlink&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">len&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">failed&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>为了训练模型，我们需要 &lt;code>DataLoaders&lt;/code>，它是一个包含训练集（用于创建模型的图像）和验证集（用于检查模型准确性的图像&amp;ndash;训练期间未使用的数据）。 在 &lt;code>fastai&lt;/code> 中，我们可以使用 &lt;code>DataBlock&lt;/code> 轻松创建它，并从中查看示例图像：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dls&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">DataBlock&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">blocks&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ImageBlock&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">CategoryBlock&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">get_items&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">get_image_files&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">splitter&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">RandomSplitter&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">valid_pct&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mf">0.2&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">seed&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">42&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">get_y&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">parent_label&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">item_tfms&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">Resize&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">192&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">method&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;squish&amp;#39;&lt;/span>&lt;span class="p">)]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">dataloaders&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">bs&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">32&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dls&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">show_batch&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">max_n&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">6&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;img src="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219182854.png"
width="717"
height="499"
srcset="https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219182854_hu14700026338536030349.png 480w, https://cyber-blog.github.io/p/practicaldeeplearning-pdl-part1-gettingstarted/Pasted_image_20241219182854_hu17290892737116787282.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="143"
data-flex-basis="344px"
>&lt;/p>
&lt;p>每个 &lt;code>DataBlock&lt;/code> 参数的含义如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">blocks=(ImageBlock, CategoryBlock),
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>我们模型的输入是图像，输出是类别（在本例中为“鸟”或“森林”）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">get_items=get_image_files,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>要查找模型的所有输入，请运行 &lt;code>get_image_files&lt;/code> 函数（它返回路径中所有图像文件的列表）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">splitter=RandomSplitter(valid_pct=0.2, seed=42),
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>将数据随机分为训练集和验证集，使用 20% 的数据作为验证集。&lt;code>seed&lt;/code>是随机数种子，一般是一个固定的整数，它用来初始化生成随机数的算法。通过设置相同的种子，你可以确保在不同的机器或者不同的时间执行相同的代码时，得到相同的随机结果。42 是一个常见的随机数种子（也许有些人觉得它是一个“神秘的”数字），其实可以使用任何整数值，只要它们固定，就能保证一致的划分结果。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">get_y=parent_label,
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>标签（&lt;code>y&lt;/code> 值）是每个文件的 &lt;code>parent&lt;/code> 的名称（即它们所在的文件夹的名称，可以是 &lt;code>bird&lt;/code> 或 &lt;code>forest&lt;/code>）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">item_tfms=[Resize(192, method=&amp;#39;squish&amp;#39;)]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Before training, resize each image to 192x192 pixels by &amp;ldquo;squishing&amp;rdquo; it (as opposed to cropping it).&lt;br>
在训练之前，通过&lt;code>squish&lt;/code>图像（而不是裁剪图像）将每个图像的大小调整为 192x192 像素。&lt;/p>
&lt;p>现在我们准备好训练我们的模型了。 最快广泛使用的计算机视觉模型是&lt;code>resnet18&lt;/code>。 即使在 CPU 上，也可以在几分钟内对其进行训练！ （在 GPU 上，通常需要不到 10 秒&amp;hellip;&amp;hellip;）&lt;/p>
&lt;p>&lt;code>fastai&lt;/code> 附带了一个有用的 &lt;code>fine_tune()&lt;/code> 方法，该方法自动使用最佳实践来微调预训练模型，因此我们将使用它。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">learn&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">vision_learner&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">dls&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">resnet18&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">metrics&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">error_rate&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">learn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">fine_tune&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">3&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>• 参数3表示: 这个参数表示微调的训练轮数（epochs）。在这里，模型会在数据集上进行 3 个训练周期（epochs）的微调。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Downloading&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;https://download.pytorch.org/models/resnet18-f37072fd.pth&amp;#34;&lt;/span> &lt;span class="n">to&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">root&lt;/span>&lt;span class="o">/.&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">torch&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">hub&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">checkpoints&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">resnet18&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">f37072fd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">pth&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="mi">100&lt;/span>&lt;span class="o">%|&lt;/span>&lt;span class="err">██████████&lt;/span>&lt;span class="o">|&lt;/span> &lt;span class="mf">44.7&lt;/span>&lt;span class="n">M&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="mf">44.7&lt;/span>&lt;span class="n">M&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">00&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mf">84.4&lt;/span>&lt;span class="n">MB&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>epoch&lt;/th>
&lt;th>train_loss&lt;/th>
&lt;th>valid_loss&lt;/th>
&lt;th>error_rate&lt;/th>
&lt;th>time&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>0.783741&lt;/td>
&lt;td>0.634016&lt;/td>
&lt;td>0.214286&lt;/td>
&lt;td>00:01&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>epoch&lt;/th>
&lt;th>train_loss&lt;/th>
&lt;th>valid_loss&lt;/th>
&lt;th>error_rate&lt;/th>
&lt;th>time&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>0&lt;/td>
&lt;td>0.045509&lt;/td>
&lt;td>0.020604&lt;/td>
&lt;td>0.000000&lt;/td>
&lt;td>00:01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>1&lt;/td>
&lt;td>0.026428&lt;/td>
&lt;td>0.000642&lt;/td>
&lt;td>0.000000&lt;/td>
&lt;td>00:01&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>2&lt;/td>
&lt;td>0.017754&lt;/td>
&lt;td>0.000184&lt;/td>
&lt;td>0.000000&lt;/td>
&lt;td>00:01&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>一般来说，当我运行此程序时，我会看到验证集的准确性为 100%（尽管每次运行可能会有所不同）。
“微调”模型意味着我们从其他人使用其他数据集训练的模型（称为预训练模型）开始，并稍微调整权重，以便模型学会识别您的特定数据集。 在本例中，预训练模型经过训练，可以识别 imagenet 中的照片以及广泛使用的计算机视觉数据集，其中图像涵盖 1000 个类别）有关微调的详细信息及其重要性，请查看免费的 &lt;a class="link" href="https://course.fast.ai/" target="_blank" rel="noopener"
>fast.ai课程&lt;/a>。&lt;/p>
&lt;h2 id="step-3-第-3-步使用我们的模型构建您自己的模型">Step 3: 第 3 步：使用我们的模型（构建您自己的模型！）
&lt;/h2>&lt;p>让我们看看我们的模型对我们一开始下载的那只鸟有什么看法：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">is_bird&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">_&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">probs&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">learn&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">predict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">PILImage&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;bird.jpg&amp;#39;&lt;/span>&lt;span class="p">))&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;This is a: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">is_bird&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Probability it&amp;#39;s a bird: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">probs&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="si">:&lt;/span>&lt;span class="s2">.4f&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">This is a: bird.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Probability it&amp;#39;s a bird: 1.0000
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Good job, resnet18&lt;/p>
&lt;p>因此，正如所看到的，在几年的时间里，创建计算机视觉分类模型已经从“难得像一个笑话”变成了“非常简单且免费”！
这不仅仅是在计算机视觉领域。 得益于深度学习，计算机现在可以做许多几年前看似不可能的事情，包括&lt;a class="link" href="https://openai.com/dall-e-2/" target="_blank" rel="noopener"
>创作令人惊叹的艺术品&lt;/a>和&lt;a class="link" href="https://www.datanami.com/2022/04/22/googles-massive-new-language-model-can-explain-jokes/" target="_blank" rel="noopener"
>解释笑话&lt;/a>。 它的发展速度如此之快，以至于即使是该领域的专家也很难预测它在未来几年将如何影响社会。
有一点很明确——我们所有人都必须尽力理解这项技术，这一点很重要，否则我们就会落后！&lt;/p>
&lt;p>现在轮到你了。 单击&lt;a class="link" href="https://www.kaggle.com/code/jhoward/is-it-a-bird-creating-a-model-from-your-own-data" target="_blank" rel="noopener"
>此页面&lt;/a>的“Copy &amp;amp; Edit”并尝试使用您自己的图像搜索创建您自己的图像分类器！&lt;/p>
&lt;p>如果您喜欢这个，请考虑点击右上角的“投票”按钮——知道人们何时欣赏我们的工作对我们笔记本作者来说是非常鼓舞人心的。&lt;/p></description></item><item><title>记一次C++内存泄漏的排查经过</title><link>https://cyber-blog.github.io/p/cpp-memoryleak/</link><pubDate>Fri, 25 Oct 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/cpp-memoryleak/</guid><description>&lt;img src="https://cyber-blog.github.io/p/cpp-memoryleak/cover.png" alt="Featured image of post 记一次C++内存泄漏的排查经过" />&lt;h2 id="背景">背景
&lt;/h2>&lt;p>公司的一台 Freeswitch 软交换机在之前开发了一个自定义的基于 Websocket 的 ASR 模块。&lt;/p>
&lt;p>这个模块会在每次拨打机器人外呼时运行，监听电话的语音流，通过 Websocket 发送给 ASR 接口。并同时监听 WebSocket 的返回，如果有返回则通过 Freeswitch 的 ASR 模块扩展接口触发 Lua 的回调函数，Lua 回调会发送 Event 事件通知 Java 服务。&lt;/p>
&lt;p>这个模块在运行一段时间之后发现 Freeswitch 就会崩溃。通过 Zabbix 发现机器的可用内存会持续降低。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/cpp-memoryleak/image-20241024173838000.png"
width="915"
height="342"
srcset="https://cyber-blog.github.io/p/cpp-memoryleak/image-20241024173838000_hu7282111965098412615.png 480w, https://cyber-blog.github.io/p/cpp-memoryleak/image-20241024173838000_hu2811108713500254615.png 1024w"
loading="lazy"
alt="image-20241024173838000"
class="gallery-image"
data-flex-grow="267"
data-flex-basis="642px"
>&lt;/p>
&lt;p>并且排查系统日志，看到相同时间 Freeswitch 被系统 Kill 掉。可以确认是因为 Freeswitch内存泄漏导致的。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@wyn-fs-02 ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># dmesg | grep -i &amp;#34;kill&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.056478&lt;span class="o">]&lt;/span> in:imjournal invoked oom-killer: &lt;span class="nv">gfp_mask&lt;/span>&lt;span class="o">=&lt;/span>0x201da, &lt;span class="nv">order&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">oom_score_adj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.060698&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49cd3c5&amp;gt;&lt;span class="o">]&lt;/span> oom_kill_process+0x2d5/0x4a0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.061095&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49ccd8d&amp;gt;&lt;span class="o">]&lt;/span> ? oom_unkillable_task+0xcd/0x120
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.132781&lt;span class="o">]&lt;/span> Out of memory: Kill process &lt;span class="m">1705&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span> score &lt;span class="m">482&lt;/span> or sacrifice child
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.133635&lt;span class="o">]&lt;/span> Killed process &lt;span class="m">1705&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span>, UID 0, total-vm:3770896kB, anon-rss:1925484kB, file-rss:0kB, shmem-rss:0kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.140076&lt;span class="o">]&lt;/span> in:imjournal invoked oom-killer: &lt;span class="nv">gfp_mask&lt;/span>&lt;span class="o">=&lt;/span>0x201da, &lt;span class="nv">order&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">oom_score_adj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.147021&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49cd3c5&amp;gt;&lt;span class="o">]&lt;/span> oom_kill_process+0x2d5/0x4a0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.147658&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49ccd8d&amp;gt;&lt;span class="o">]&lt;/span> ? oom_unkillable_task+0xcd/0x120
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.236909&lt;span class="o">]&lt;/span> Out of memory: Kill process &lt;span class="m">1727&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span> score &lt;span class="m">483&lt;/span> or sacrifice child
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>87068.237622&lt;span class="o">]&lt;/span> Killed process &lt;span class="m">1727&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span>, UID 0, total-vm:3770896kB, anon-rss:1928716kB, file-rss:0kB, shmem-rss:0kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>100910.662047&lt;span class="o">]&lt;/span> gmain invoked oom-killer: &lt;span class="nv">gfp_mask&lt;/span>&lt;span class="o">=&lt;/span>0x201da, &lt;span class="nv">order&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">oom_score_adj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>100910.668484&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49cd3c5&amp;gt;&lt;span class="o">]&lt;/span> oom_kill_process+0x2d5/0x4a0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>100910.669139&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49ccd8d&amp;gt;&lt;span class="o">]&lt;/span> ? oom_unkillable_task+0xcd/0x120
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>100910.782806&lt;span class="o">]&lt;/span> Out of memory: Kill process &lt;span class="m">6691&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span> score &lt;span class="m">489&lt;/span> or sacrifice child
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>100910.784072&lt;span class="o">]&lt;/span> Killed process &lt;span class="m">6691&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span>, UID 0, total-vm:3826532kB, anon-rss:1952492kB, file-rss:0kB, shmem-rss:0kB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>203440.310492&lt;span class="o">]&lt;/span> in:imjournal invoked oom-killer: &lt;span class="nv">gfp_mask&lt;/span>&lt;span class="o">=&lt;/span>0x201da, &lt;span class="nv">order&lt;/span>&lt;span class="o">=&lt;/span>0, &lt;span class="nv">oom_score_adj&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>203440.316740&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49cd3c5&amp;gt;&lt;span class="o">]&lt;/span> oom_kill_process+0x2d5/0x4a0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>203440.317352&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>&amp;lt;ffffffffa49ccd8d&amp;gt;&lt;span class="o">]&lt;/span> ? oom_unkillable_task+0xcd/0x120
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>203440.390917&lt;span class="o">]&lt;/span> Out of memory: Kill process &lt;span class="m">16512&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span> score &lt;span class="m">476&lt;/span> or sacrifice child
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>203440.391793&lt;span class="o">]&lt;/span> Killed process &lt;span class="m">16512&lt;/span> &lt;span class="o">(&lt;/span>freeswitch&lt;span class="o">)&lt;/span>, UID 0, total-vm:3896204kB, anon-rss:1902280kB, file-rss:0kB, shmem-rss:0kB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>并且用 htop 监控 Freeswitch 的进程发现只要一开启 ASR 模块，内存占用就开始往上涨并且不会下降。&lt;/p>
&lt;h2 id="解决过程">解决过程
&lt;/h2>&lt;p>看到上述问题，初步怀疑是模块使用的 Websocket 库 &lt;a class="link" href="https://github.com/zaphoyd/websocketpp" target="_blank" rel="noopener"
>Websocketpp&lt;/a> 的相关对象等可能没有手动回收内存。开始着手检查。&lt;/p>
&lt;h3 id="问题1-链接关闭时没有销毁相关的消息列表">问题1 链接关闭时没有销毁相关的消息列表
&lt;/h3>&lt;p>经过检查，发现Websocket 库的 Client 及相关链接对象都是使用的C++11的&lt;code>shared_ptr&lt;/code>或 &lt;code>weak_ptr&lt;/code>等智能指针标准库进行管理。&lt;/p>
&lt;p>不过，在 Websocket Client 对象当中有一个自定义属性&lt;code>std::vector&amp;lt;std::string&amp;gt; m_messages;&lt;/code> 这个队列记录了接收到的所有消息，但是在链接关闭时没有清空，需要手动清空。在重启 Freeswitch 后发现内存还是会一直增长，但是会有一些回收，虽然造成了一些内存泄漏，但是不是主要原因。这个问题也比较容易发现，可以直接查找代码发现。&lt;/p>
&lt;h3 id="问题2-cjson-的-cjson_print-方法转换的字符串需要手动清除">问题2 CJSON 的 CJSON_Print 方法转换的字符串需要手动清除
&lt;/h3>&lt;p>在发现还有问题后，检查了一遍代码，感觉只是看代码是检查不出来了。通过调研，先是使用的valgrind来查内存泄漏。&lt;/p>
&lt;blockquote>
&lt;p>Valgrind 是一款综合性的程序分析工具，主要用于内存管理的调试、内存泄漏检测、并发错误检测和性能分析。它适用于 C、C++、Fortran 等语言编写的程序，帮助开发者发现程序中的各种隐蔽问题。Valgrind 本质上是一个虚拟化的执行环境，它将你的程序加载进一个动态二进制翻译器中执行，并对内存的使用情况进行监控。&lt;/p>
&lt;/blockquote>
&lt;h4 id="valgrind">valgrind
&lt;/h4>&lt;p>Contenos直接使用&lt;code>yum install valgrind&lt;/code>进行安装。&lt;/p>
&lt;p>安转完成后，运行下面的指令检查&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">valgrind --leak-check&lt;span class="o">=&lt;/span>full freeswitch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>检查结果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> Memcheck, a memory error &lt;span class="nv">detector&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> Copyright &lt;span class="o">(&lt;/span>C&lt;span class="o">)&lt;/span> 2002-2017, and GNU GPL&lt;span class="err">&amp;#39;&lt;/span>d, by Julian Seward et al.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> Using Valgrind-3.15.0 and LibVEX&lt;span class="p">;&lt;/span> rerun with -h &lt;span class="k">for&lt;/span> copyright &lt;span class="nv">info&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> Command: &lt;span class="nv">freeswitch&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Cannot lock pid file /usr/local/freeswitch/run/freeswitch.pid.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> HEAP SUMMARY:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> in use at exit: 46,272 bytes in &lt;span class="m">25&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> total heap usage: &lt;span class="m">29&lt;/span> allocs, &lt;span class="m">4&lt;/span> frees, 120,232 bytes &lt;span class="nv">allocated&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> LEAK SUMMARY:
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> definitely lost: &lt;span class="m">0&lt;/span> bytes in &lt;span class="m">0&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> indirectly lost: &lt;span class="m">0&lt;/span> bytes in &lt;span class="m">0&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> possibly lost: 24,576 bytes in &lt;span class="m">3&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> still reachable: 21,696 bytes in &lt;span class="m">22&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> suppressed: &lt;span class="m">0&lt;/span> bytes in &lt;span class="m">0&lt;/span> &lt;span class="nv">blocks&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> Rerun with --leak-check&lt;span class="o">=&lt;/span>full to see details of leaked &lt;span class="nv">memory&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> For lists of detected and suppressed errors, rerun with: -s
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">==&lt;/span>&lt;span class="nv">11979&lt;/span>&lt;span class="o">==&lt;/span> ERROR SUMMARY: &lt;span class="m">0&lt;/span> errors from &lt;span class="m">0&lt;/span> contexts &lt;span class="o">(&lt;/span>suppressed: &lt;span class="m">0&lt;/span> from 0&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>可以看到没有检测出来 &lt;code>definitely&lt;/code> 的明确内存泄漏，都是一些“一次性”的泄漏。。所以猜测是一些“still reachable”的内存越来越多导致的，“still reachable”指的是能被引用的内存，内存泄漏是内存无法被引用到，但是能被引用的内存不一定是还在使用的内存，比如不断向一个链表里面写数据而没有删除动作，那么这个链表就会一直增大，虽然可能只有最新的10个数据有在用，但是没有把旧的数据释放，这个虽然不是严格的内存泄漏，但也会造成了内存不断增大。&lt;/p>
&lt;p>目前来看就是借助其他办法分析现在 Freeswitch 的内存分布。&lt;/p>
&lt;h4 id="jemalloc">jemalloc
&lt;/h4>&lt;p>Google 了一番，找到一个C++内存分析工具 &lt;a class="link" href="https://github.com/jemalloc/jemalloc" target="_blank" rel="noopener"
>jemalloc&lt;/a>。该工具能分析 C++程序的内存分布，帮助检查哪个环节分配了过多的内存。&lt;/p>
&lt;blockquote>
&lt;p>jemalloc 是一个高效的内存分配库，设计用于提升系统性能、减少内存碎片和优化多线程程序的内存管理。最初由 Facebook 开发，jemalloc 被广泛应用于需要高性能和高并发支持的环境，如数据库系统、Web 服务器和缓存服务。以下是 jemalloc 的一些关键特点：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>内存碎片优化&lt;/strong>：jemalloc 使用分级分配策略和延迟归还内存技术，以有效减少内存碎片问题，特别是在需要频繁分配和释放内存的应用中，表现出更稳定的内存使用率。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>多线程优化&lt;/strong>：jemalloc 针对多线程环境进行了深度优化，通过线程本地缓存（thread-local caching）技术大幅减少了内存锁竞争，提升了多线程程序的并发性能。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>分配效率高&lt;/strong>：jemalloc 使用多级分配池（arenas）和分级桶（bins）来高效管理不同大小的内存分配需求，减少了内存分配器的开销。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>诊断工具支持&lt;/strong>：jemalloc 提供了丰富的调试和诊断功能，可以生成内存分配日志和统计数据，帮助开发人员分析内存分配情况和优化程序内存使用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>与 glibc 兼容&lt;/strong>：在 Linux 系统上，jemalloc 可作为 glibc 的替代内存分配器使用，应用程序只需简单配置即可使用 jemalloc 而无需代码修改。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h5 id="安装步骤">安装步骤
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">wget https://github.com/jemalloc/jemalloc/releases/download/5.3.0/jemalloc-5.3.0.tar.bz2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">bzip2 -d jemalloc-5.3.0.tar.bz2
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar -xf jemalloc-5.3.0.tar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> jemalloc-5.3.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./autogen.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./configure --prefix&lt;span class="o">=&lt;/span>/usr/local --enable-prof
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>内存分布接转出 PDF 需要依赖这两个工具，直接通过&lt;code>yum&lt;/code>安装。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum install graphviz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install ghostscript
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="使用">使用
&lt;/h5>&lt;p>要在应用中使用 jemalloc，一般可以通过 LD_PRELOAD 将其加载，或在编译阶段直接链接 jemalloc 库。例如，在 Linux 上可以使用以下命令强制应用使用 jemalloc：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MALLOC_CONF&lt;/span>&lt;span class="o">=&lt;/span>prof:true,lg_prof_interval:27 &lt;span class="nv">LD_PRELOAD&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/lib/libjemalloc.so.2 freeswitch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>命令详解&lt;/p>
&lt;p>&lt;strong>1. MALLOC_CONF 环境变量&lt;/strong>&lt;/p>
&lt;p>jemalloc 支持通过 MALLOC_CONF 环境变量传递配置选项，这里使用了以下参数：&lt;/p>
&lt;p>​ •prof:true：开启内存分配分析（profiling）功能，帮助检测和分析应用中的内存使用情况。&lt;/p>
&lt;p>​ •lg_prof_interval:27：设置内存分配采样间隔的对数值。27 表示间隔为 2^27 字节，即每分配 128MB 内存进行一次采样。&lt;/p>
&lt;p>&lt;strong>2. LD_PRELOAD 环境变量&lt;/strong>&lt;/p>
&lt;p>​ •LD_PRELOAD=/usr/local/lib/libjemalloc.so.2：指定在程序启动时预加载 jemalloc 库，以替换默认的内存分配函数 (malloc、free 等)。/usr/local/lib/libjemalloc.so.2 是 jemalloc 库的路径。&lt;/p>
&lt;p>&lt;strong>3. freeswitch&lt;/strong>&lt;/p>
&lt;p>​ •freeswitch：启动 Freeswitch 应用程序，应用上述 jemalloc 设置。&lt;/p>
&lt;/blockquote>
&lt;p>运行下面的命令可以把单次采样文件转换为 PDF 内存报告&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">jeprof --show_bytes --pdf /usr/local/freeswitch/bin/freeswitch jeprof.1842.42.i42.heap &amp;gt; output1.pdf
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>注意这里有一个坑，可执行文件的路径必须是执行文件的绝对路径，不能是 bin 目录下的软连接。&lt;/p>
&lt;h5 id="报告">报告
&lt;/h5>&lt;p>下面是报告的完整截图，可以看到每个方法分配的内存大小还有层级调用关系。&lt;/p>
&lt;img src="SCR-20241025-pgqm.png" alt="报告截图" style="zoom:500%;" />
&lt;p>可以看到 &lt;code>Print(inline) &lt;/code>方法分配了 86% 的内存。该方法的调用栈是 &lt;code>cJson_Print&lt;/code> -&amp;gt; &lt;code>asr_feed&lt;/code>。&lt;code>asr_feed&lt;/code>方法会通过 Websocket 发送所有音频数据，每帧音频都是通过使用 JSON 格式发送，通过&lt;code>cJSON_Print &lt;/code>将 JSON 数据结构转换为一个字符串，并返回一个动态分配的字符串指针。但是由于这个返回的字符串是通过 &lt;code>malloc&lt;/code> 或 &lt;code>realloc&lt;/code> 直接分配在堆上，所以必须使用 &lt;code>free()&lt;/code> 函数手动释放，否则，这部分内存将会造成内存泄露。&lt;/p>
&lt;p>即使 &lt;code>cJSON_Print&lt;/code> 的指针是局部变量，并且已经销毁了这个指针，内存仍然会保留在堆上，并且依然是标记为“可达到的”（reachable）状态。这就是内存泄露的主要原因。&lt;/p>
&lt;h5 id="可达到内存">可达到内存
&lt;/h5>&lt;p>“&lt;strong>Reachable（可达到）&lt;/strong>” 是内存的概念，通常出现在内存泄漏检查工具（例如 Valgrind）的报告中，表示虽然程序不再需要使用这部分内存，或者已经没有明确的指针指向它，但从技术上讲，内存管理系统仍然可以找到它并访问它。&lt;/p>
&lt;p>要理解这个问题，我们可以从内存管理和指针的生命周期两个方面来分析：&lt;/p>
&lt;p>&lt;strong>1. 堆内存的分配和释放&lt;/strong>&lt;/p>
&lt;p>在调用 &lt;code>cJSON_Print()&lt;/code> 时，它返回一个动态分配的字符串，内存分配是在 &lt;strong>堆&lt;/strong> 上完成的。这意味着，程序员必须手动释放这块内存（通过 free()）。即使局部变量指针已经销毁，这块堆内存仍然会存在，直到被明确释放或程序结束。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c" data-lang="c">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// json_str 是局部变量，指向堆上的内存
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">json_str&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nf">cJSON_Print&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">json_data&lt;/span>&lt;span class="p">);&lt;/span> &lt;span class="c1">// 堆内存分配
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>当你离开这个函数或作用域时，json_str 指针本身可能会被销毁或失效，但堆上的内存依然存在。这就是为什么它仍然会被视为&lt;strong>reachable&lt;/strong>：因为堆上分配的内存没有释放，操作系统或内存管理器可以通过堆的内存结构访问它。&lt;/p>
&lt;p>&lt;strong>2. 可达到 vs 不可达到&lt;/strong>&lt;/p>
&lt;p>​ •&lt;strong>可达到 (reachable)&lt;/strong>：指分配的内存块在程序中&lt;strong>尚未被释放&lt;/strong>，并且从技术上，内存管理器仍然可以通过某些方式找到它们，尽管它们可能不再被局部变量或指针直接引用。&lt;/p>
&lt;p>​ •&lt;strong>不可达到 (unreachable)&lt;/strong>：如果没有任何指针或引用指向这块内存，而且你无法通过正常的编程手段找到这块内存，那么这部分内存就变成“不可达到”的了。此时，它会被标记为未使用内存，等到程序结束时才会回收。&lt;/p></description></item><item><title>基于 MMS 模型的印尼语微调</title><link>https://cyber-blog.github.io/p/finetune-vits-mms-id/</link><pubDate>Fri, 12 Jul 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/finetune-vits-mms-id/</guid><description>&lt;img src="https://cyber-blog.github.io/p/finetune-vits-mms-id/cover.png" alt="Featured image of post 基于 MMS 模型的印尼语微调" />&lt;p>VITS 是一种用于英语文本转语音 （TTS） 的轻量级、低延迟模型。
大规模多语言语音 （MMS） 是 VITS 的多语言 TTS 扩展，支持 1100 多种语言。&lt;/p>
&lt;p>两者都使用相同的底层 VITS 架构，由一个鉴别器和一个用于基于 GAN 的训练的生成器组成。它们的标记器不同：VITS 标记器将英语输入文本转换为音素，而 MMS 标记器将输入文本转换为基于字符的标记。&lt;/p>
&lt;p>如果要使用宽松的英语 TTS 模型，则应微调基于 VITS 的 checkpoint，并针对所有其他情况微调基于 MMS 的检查点。
针对印尼语的训练选择 &lt;a class="link" href="https://huggingface.co/fadhilamri/mms-tts-ind-train" target="_blank" rel="noopener"
>mms-tts-ind-train&lt;/a>checkpoint&lt;/p>
&lt;p>结合正确的数据和以下训练方法，您可以在 20 分钟内获得每个 VITS/MMS 检查点的出色微调版本，只需 80 到 150 个样本。&lt;/p>
&lt;p>微调 VITS 或 MMS 需要按连续顺序完成多个阶段：&lt;/p>
&lt;ol>
&lt;li>&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits?tab=readme-ov-file#1-requirements" target="_blank" rel="noopener"
>Install requirements&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits?tab=readme-ov-file#2-model-selection" target="_blank" rel="noopener"
>Choose or create the initial model&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits?tab=readme-ov-file#3-finetuning" target="_blank" rel="noopener"
>Finetune the model&lt;/a> &lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits?tab=readme-ov-file#4-inference" target="_blank" rel="noopener"
>Optional - how to use the finetuned model&lt;/a>&lt;/li>
&lt;/ol>
&lt;h4 id="安装-requirements">安装 requirements
&lt;/h4>&lt;ol start="0">
&lt;li>克隆仓库并 install，确保&lt;code>python &amp;gt;= 3.10&lt;/code>&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">git&lt;/span> &lt;span class="n">clone&lt;/span> &lt;span class="n">git&lt;/span>&lt;span class="nd">@github.com&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">ylacombe&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">finetune&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">hf&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vits&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">git&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">cd&lt;/span> &lt;span class="n">finetune&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">hf&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">vits&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">pip&lt;/span> &lt;span class="n">install&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">r&lt;/span> &lt;span class="n">requirements&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">txt&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>链接您的 Hugging Face 帐户，以便您可以在 Hub 上拉取/推送模型仓库。这将使您能够在 Hub 上保存微调的权重，以便您可以与社区共享它们并轻松重复使用它们。运行以下命令：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git config --global credential.helper store
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">huggingface-cli login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>
&lt;p>然后输入 &lt;a class="link" href="https://huggingface.co/settings/tokens" target="_blank" rel="noopener"
>https://huggingface.co/settings/tokens&lt;/a> 的身份验证令牌。如果还没有令牌，请创建一个新令牌。您应确保此令牌具有“写入”权限。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用 Cython 构建&lt;code>monotonic alignment search function&lt;/code>。这是绝对必要的，因为 Python 原生版本非常慢。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Cython-version Monotonoic Alignment Search&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> monotonic_align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir monotonic_align
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">python setup.py build_ext --inplace
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ..
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="4">
&lt;li>（可选）如果您使用的是原始 VITS 检查点，而不是 MMS 检查点，请安装&lt;code>phonemizer&lt;/code>。
按照&lt;a class="link" href="https://bootphon.github.io/phonemizer/install.html" target="_blank" rel="noopener"
>此处&lt;/a>指示的步骤操作。
例如，如果你在 Debian/Unbuntu 上：&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install dependencies&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo apt-get install festival espeak-ng mbrola
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Install phonemizer&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">pip install phonemizer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>更多细节
某些语言要求在将文本提供给 `VitsTokenizer` 之前使用 `uroman`，因为目前分词器本身不支持执行预处理。
为此，您需要将 uroman 仓库克隆到本地计算机，并将 bash 变量 UROMAN 设置为本地路径：
&lt;/code>&lt;/pre>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">git clone https://github.com/isi-nlp/uroman.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> uroman
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">export&lt;/span> &lt;span class="nv">UROMAN&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="k">$(&lt;/span>&lt;span class="nb">pwd&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;pre>&lt;code>剩下的就是由训练脚本来处理了。
&lt;/code>&lt;/pre>
&lt;h4 id="选择模型">选择模型
&lt;/h4>&lt;p>如果需要的 &lt;code>checkpoint&lt;/code> 已经存在。&lt;/p>
&lt;p>目前一些&lt;code>checkpoint&lt;/code>已经可用，参照如下列表可以在 Hugging Face 搜索
可以列表&lt;/p>
&lt;ul>
&lt;li>English
&lt;ul>
&lt;li>&lt;code>ylacombe/vits-ljs-with-discriminator&lt;/code> (确保 &lt;a class="link" href="https://bootphon.github.io/phonemizer/install.html" target="_blank" rel="noopener"
>phonemizer&lt;/a>已安装) - 非常适合单一声音微调&lt;/li>
&lt;li>&lt;code>ylacombe/vits-vctk-with-discriminator&lt;/code> (确保 &lt;a class="link" href="https://bootphon.github.io/phonemizer/install.html" target="_blank" rel="noopener"
>phonemizer&lt;/a>已安装) - 适用于多声音英语微调。&lt;/li>
&lt;li>&lt;code>ylacombe/mms-tts-eng-train&lt;/code> - 如果您想避免使用 &lt;code>phonemizer&lt;/code> 包。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Spanish - &lt;code>ylacombe/mms-tts-spa-train&lt;/code> 西班牙语&lt;/li>
&lt;li>Korean - &lt;code>ylacombe/mms-tts-kor-train&lt;/code> 韩语&lt;/li>
&lt;li>Marathi - &lt;code>ylacombe/mms-tts-mar-train&lt;/code> 马拉地语&lt;/li>
&lt;li>Tamil - &lt;code>ylacombe/mms-tts-tam-train&lt;/code> 泰米尔语&lt;/li>
&lt;li>Gujarati - &lt;code>ylacombe/mms-tts-guj-train&lt;/code> 古吉拉特语
在这种情况下，您找到了正确的检查点，记下存储库名称并直接传递到下一步🤗。
在这里我选择了 &lt;code>fadhilamri/mms-tts-ind-train&lt;/code>🥳。&lt;/li>
&lt;/ul>
&lt;p>如果需要的需要微调的语言 &lt;code>checkpoint&lt;/code> 不存在，请参考&lt;a class="link" href="https://huggingface.co/dhavalgala/mms-tts-ind-train" target="_blank" rel="noopener"
>这里&lt;/a>创建对应语言的&lt;code>checkpoint&lt;/code>。&lt;/p>
&lt;h4 id="微调">微调
&lt;/h4>&lt;p>使用 json 配置文件可以运行微调脚本，两种方法都使用命令行。请注意，您只需要一个 GPU 即可微调 VITS/MMS，因为模型非常轻巧（83M 参数）,根据数据集的大小对显存的需求有较大变化，我的数据集大小是&lt;code>602MB&lt;/code>、需要 21GB 显存左右。&lt;/p>
&lt;blockquote>
&lt;p>Note
使用配置文件是使用微调脚本的首选方式，因为它包含要考虑的最重要的参数。有关参数的完整列表，请运行 &lt;code>python run_vits_finetuning.py --help&lt;/code>。请注意，训练脚本不会忽略某些参数。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits/blob/main/training_config_examples" target="_blank" rel="noopener"
>training_config_examples&lt;/a>文件夹包含配置文件的示例。一旦对您的配置文件感到满意，您就可以微调模型。&lt;/p>
&lt;p>要考虑的重要参数：&lt;/p>
&lt;ul>
&lt;li>与工件相关的所有内容：&lt;code>project_name&lt;/code> 和输出目录 （&lt;code>hub_model_id&lt;/code>， &lt;code>output_dir&lt;/code>），用于跟踪模型。&lt;/li>
&lt;li>需要微调的模型：&lt;code>model_name_or_path&lt;/code>。
&lt;ul>
&lt;li>这里，填写需要进行微调的模型（&lt;code>checkpoint&lt;/code>）。&lt;/li>
&lt;li>例如，如果选择已存在的检查点：&lt;code>ylacombe/vits-ljs-with-discriminator&lt;/code>，或者转换了自己的检查点：&lt;code>&amp;lt;repo-id-you-want&amp;gt;&lt;/code> 或 &lt;code>&amp;lt;local-folder&amp;gt;&lt;/code>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>数据集使用的 &lt;code>dataset_name&lt;/code> 及其详细信息：&lt;code>dataset_config_name&lt;/code>、列名等。
&lt;ul>
&lt;li>如果有多个声音，而您只想保留一个声音，请注意 &lt;code>speaker_id_column_name&lt;/code>、&lt;code>override_speaker_embeddings&lt;/code> 和 &lt;code>filter_on_speaker_id&lt;/code>。后者允许只保留一个声音，但您也可以使用多个声音进行训练。&lt;/li>
&lt;li>例如，&lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits/blob/main/training_config_examples/finetune_english.json" target="_blank" rel="noopener"
>&lt;code>finetune_english.json&lt;/code>&lt;/a> 中默认使用的数据集是 British Isles accents 数据集的子集，使用 &lt;code>welsh_female&lt;/code> 配置的单个威尔士女声，由 &lt;code>speaker_id=5223&lt;/code> 标识。&lt;/li>
&lt;li>如何打包本地数据到上传到 HuggingFace 的 Datasets 请参考我写的上一篇&lt;a class="link" href="https://cyber-blog.github.io/p/dataset-upload2hugginface/" target="_blank" rel="noopener"
>博客&lt;/a>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>超级重要的 &lt;code>hyperparameters&lt;/code>‼
&lt;ul>
&lt;li>&lt;code>learning_rate&lt;/code>&lt;/li>
&lt;li>&lt;code>batch_size&lt;/code>&lt;/li>
&lt;li>各种损失权重：&lt;code>weight_duration&lt;/code>、&lt;code>weight_kl&lt;/code>、&lt;code>weight_mel&lt;/code>、&lt;code>weight_disc&lt;/code>、&lt;code>weight_gen&lt;/code> 、&lt;code>weight_fmaps&lt;/code>&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>可以参考我进行微调的配置文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;project_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;vits_finetuned_ind_female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;push_to_hub&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;hub_model_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dhavalgala/mms-tts-ind-train&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;overwrite_output_dir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;output_dir&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;./tmp/vits_finetuned_ind_female&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;dataset_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;Majiang213/ind_famal&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;dataset_config_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;data&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;audio_column_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;audio&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;text_column_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;text&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;train_split_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;train&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;eval_split_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;train&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;speaker_id_column_name&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;speaker_id&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;override_speaker_embeddings&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;filter_on_speaker_id&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;12&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;max_duration_in_seconds&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;min_duration_in_seconds&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.0&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;max_tokens_length&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">5000&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;model_name_or_path&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;dhavalgala/mms-tts-ind-train&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;preprocessing_num_workers&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">4&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;do_train&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;num_train_epochs&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">200&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;gradient_accumulation_steps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;gradient_checkpointing&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;per_device_train_batch_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;learning_rate&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">2e-5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;adam_beta1&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.8&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;adam_beta2&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.99&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;warmup_ratio&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">0.01&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;group_by_length&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">false&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;do_eval&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;eval_steps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">50&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;per_device_eval_batch_size&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">16&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;do_step_schedule_per_epoch&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_disc&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_fmaps&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_gen&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_kl&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mf">1.5&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_duration&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;weight_mel&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">35&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;fp16&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;seed&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="mi">456&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="推理">推理
&lt;/h4>&lt;p>只需几行代码，即可通过文本转语音 （TTS） 管道使用微调的模型！只需将 &lt;code>ylacombe/vits_ljs_welsh_female_monospeaker_2&lt;/code> 替换为您自己的模型 ID （&lt;code>hub_model_id&lt;/code>） 或模型的路径 （&lt;code>output_dir&lt;/code>）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">transformers&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">pipeline&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">scipy&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">model_id&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;ylacombe/vits_ljs_welsh_female_monospeaker_2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">synthesiser&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pipeline&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;text-to-speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">model_id&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1"># add device=0 if you want to use a GPU&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">speech&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">synthesiser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello, my dog is cooler than you!&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">scipy&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">wavfile&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;finetuned_output.wav&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">rate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">speech&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;sampling_rate&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">speech&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;audio&amp;#34;&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="问题">问题
&lt;/h4>&lt;p>目前在推理时有一个关于 &lt;code>speaker_id&lt;/code>的代码兼容性问题，需要将&lt;code>run_vits_finetuning.py&lt;/code>文件里的所有 &lt;code>speaker_id=batch[&amp;quot;speaker_id&amp;quot;]&lt;/code> 代码注释掉。
注释后参考&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">model_outputs_train&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">model&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">input_ids&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;input_ids&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">attention_mask&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;attention_mask&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">labels&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;labels&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">labels_attention_mask&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">batch&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;labels_attention_mask&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># speaker_id=batch[&amp;#34;speaker_id&amp;#34;], &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">return_dict&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">True&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">monotonic_alignment_function&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">maximum_path&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ps">PS
&lt;/h4>&lt;ul>
&lt;li>MMS 是由 Vineel Pratap、Andros Tjandra、Bowen Shi 等人在《 &lt;a class="link" href="https://arxiv.org/abs/2305.13516" target="_blank" rel="noopener"
>Scaling Speech Technology to 1,000+ Languages&lt;/a>》中提出的。您可以在&lt;a class="link" href="https://dl.fbaipublicfiles.com/mms/misc/language_coverage_mms.html" target="_blank" rel="noopener"
>MMS Language Coverage Overview&lt;/a>中找到有关受支持语言及其 ISO 639-3 代码的更多详细信息，并在 Hugging Face Hub 上查看所有 MMS-TTS 检查点：&lt;a class="link" href="https://huggingface.co/models?sort=trending&amp;amp;search=facebook%2Fmms-tts" target="_blank" rel="noopener"
>facebook/mms-tts&lt;/a>。&lt;/li>
&lt;li>&lt;a class="link" href="https://huggingface.co/docs/transformers/index" target="_blank" rel="noopener"
>Hugging Face 🤗 Transformers&lt;/a> 用于模型集成，&lt;a class="link" href="https://huggingface.co/docs/accelerate/index" target="_blank" rel="noopener"
>Hugging Face 🤗 Accelerate&lt;/a> 用于分布式代码，&lt;a class="link" href="https://huggingface.co/docs/datasets/index" target="_blank" rel="noopener"
>Hugging Face 🤗 datasets&lt;/a>用于方便数据集访问。&lt;/li>
&lt;/ul></description></item><item><title>音频文件打包 Dataset 上传 HugginFace</title><link>https://cyber-blog.github.io/p/dataset-upload2hugginface/</link><pubDate>Mon, 01 Jul 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/dataset-upload2hugginface/</guid><description>&lt;h3 id="打包dataset">打包Dataset
&lt;/h3>&lt;p>之前在使用 &lt;a class="link" href="https://github.com/ylacombe/finetune-hf-vits" target="_blank" rel="noopener"
>finetune-hf-vits&lt;/a> 项目微调 &lt;code>MMS-TTS&lt;/code> 的印尼语模型的时候，该项目会读取 HuggingFace 的数据集，需要将本地的数据集上传到 HuggingFace。
HugginFace 的数据集是 parquet 格式。可以使用 Hugging Face 官方提供的包生成。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="n">path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;your-path&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 读取 Excel 文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">excel_file_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;FEMALE VOICE 2 .xlsx&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pd&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read_excel&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">excel_file_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 处理音频路径 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;audio&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;audio&amp;#39;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">apply&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">lambda&lt;/span> &lt;span class="n">x&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">load_audio_file_to_bytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="nb">isinstance&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">x&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">str&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="ow">and&lt;/span> &lt;span class="n">x&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 转换 DataFrame 为字典格式 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">data_dict&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">df&lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;audio&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;speaker_id&amp;#39;&lt;/span>&lt;span class="p">]]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">orient&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;list&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 定义数据集特征，使用 Audio 类型 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">features&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Features&lt;/span>&lt;span class="p">({&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;text&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;audio&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Audio&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sampling_rate&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="c1"># 这里定义音频特征 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s1">&amp;#39;speaker_id&amp;#39;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">Value&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;string&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 Dataset 对象 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataset&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Dataset&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_dict&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">data_dict&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">features&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">features&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 保存为 Hugging Face 的数据集格式 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">dataset&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">push_to_hub&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Majiang213/ind_female&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过代码可以看到，我的数据保存格式是一个 Excel 文件，里面有 text 列，为音频的文本，audio 列为文件路径，speaker_id 列为声音 id。在读取 Excel 之后，将音频路径转换为了实际的音频数据。然后将 &lt;code>Pandas DataFrame&lt;/code> 对象转换为了一个字典，通过 Hugging Face 包的 &lt;code>Dataset&lt;/code> 对象，进行转换，并上传。&lt;/p>
&lt;p>另外不要忘记使用该命令登录&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">huggingface-cli login
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>这是读取音频数据的代码和需要引入的包&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-python" data-lang="python">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">io&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">os&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">librosa&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">pandas&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">pd&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span> &lt;span class="nn">soundfile&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="nn">sf&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">datasets&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">Dataset&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Audio&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Value&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">Features&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kn">from&lt;/span> &lt;span class="nn">pydub&lt;/span> &lt;span class="kn">import&lt;/span> &lt;span class="n">AudioSegment&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">def&lt;/span> &lt;span class="nf">load_audio_file_to_bytes&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">audio_path&lt;/span>&lt;span class="p">):&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">audio_path&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">os&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">audio_path&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 获取文件扩展名 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">file_extension&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">audio_path&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">split&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">lower&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 创建一个字节流对象 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">audio_bytes&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">BytesIO&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 处理不同格式的音频文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">file_extension&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;mp3&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;m4a&amp;#39;&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用 pydub 读取 MP3 或 M4A 文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">audio&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">AudioSegment&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">from_file&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">audio_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">file_extension&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 直接保存音频数据到字节流 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">audio&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">export&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">audio_bytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;wav&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">elif&lt;/span> &lt;span class="n">file_extension&lt;/span> &lt;span class="ow">in&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s1">&amp;#39;wav&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;flac&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;ogg&amp;#39;&lt;/span>&lt;span class="p">]:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 使用 librosa 直接读取音频文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">librosa&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">load&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">audio_path&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sr&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="kc">None&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 将 NumPy 数组转换为 int16 类型并写入字节流 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sf&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">write&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">audio_bytes&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">y&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">sr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">format&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s1">&amp;#39;WAV&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">raise&lt;/span> &lt;span class="ne">ValueError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="sa">f&lt;/span>&lt;span class="s2">&amp;#34;Unsupported file format: &lt;/span>&lt;span class="si">{&lt;/span>&lt;span class="n">file_extension&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># 移动流的指针到起始位置，以便后续读取 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">audio_bytes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">seek&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">audio_bytes&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">getvalue&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="ps">PS
&lt;/h4>&lt;p>另外推荐一个处理音频文件的 Python 小工具 &lt;a class="link" href="https://github.com/fishaudio/audio-preprocess" target="_blank" rel="noopener"
>audio-preprocess&lt;/a>。
这个 Repo 包含了一些用于处理音频的脚本. 主要包含以下功能:&lt;/p>
&lt;ul>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  视频/音频转 wav&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频人声分离&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频自动切片&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频响度匹配&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频数据统计（支持判断音频长度）&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频重采样&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频打标 (.lab)&lt;/li>
&lt;li>&lt;input checked="" disabled="" type="checkbox">  音频打标 FunASR（使用 &lt;code>--model-type funasr&lt;/code> 开启, 详细使用方法可查看代码）&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox">  音频打标 WhisperX&lt;/li>
&lt;li>&lt;input disabled="" type="checkbox">  .lab 标注合并为 .list 文件 (示例: &lt;code>fap merge-lab ./dataset list.txt &amp;quot;{PATH}|spkname|JP|{TEXT}&amp;quot;&lt;/code>)&lt;/li>
&lt;/ul>
&lt;p>([ ] 表示未完成, [x] 表示已完成)&lt;/p>
&lt;h5 id="使用方式参考">使用方式参考
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">pip install -e .
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">fap --help
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>FreeSWITCH ASR 接口对接</title><link>https://cyber-blog.github.io/p/fs-asr-api-connection/</link><pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/fs-asr-api-connection/</guid><description>&lt;img src="https://cyber-blog.github.io/p/fs-asr-api-connection/cover.png" alt="Featured image of post FreeSWITCH ASR 接口对接" />&lt;h2 id="定义-asr-模块">定义 ASR 模块
&lt;/h2>&lt;p>在当前的外呼平台中，实时 ASR（语音识别）已成为一种常见的基础功能。尽管接触 FreeSWITCH 已有一段时间，但此前一直未进行 ASR 模块的定制化开发，仅通过 GitHub 上的开源项目实现需求。然而，这些方案往往无法完全满足业务需求，例如需要对接不同厂商的 ASR 接口、支持定制化开发（如实时 ASR、文件 ASR、打断功能等）。因此，基于具体需求进行定制开发势在必行。&lt;/p>
&lt;p>目前的一个需求是实现 FreeSWITCH 的语音实时识别，采用的方案是通过 WebSocket 传输语音帧进行识别，具体可以通过以下方式实现。&lt;/p>
&lt;h3 id="基础代码">基础代码
&lt;/h3>&lt;p>Freeswitch 的 ASR 模块也是通过 media_bug 来实现的。
FreeSWITCH 定义的模块，需要定义下面的这 3 个方法。分别定义模块加载、卸载和模块定义。&lt;/p>
&lt;p>主要关注模块加载方法，定义了这个模块在 ASR 生命周期里的接口实现。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="k">extern&lt;/span> &lt;span class="s">&amp;#34;C&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 模块定义，分别是模块加载、模块卸载
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">SWITCH_MODULE_LOAD_FUNCTION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod_iflytekasr_load&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SWITCH_MODULE_SHUTDOWN_FUNCTION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod_iflytekasr_shutdown&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">SWITCH_MODULE_DEFINITION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod_iflytekasr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mod_iflytekasr_load&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">mod_iflytekasr_shutdown&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 模块加载
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">SWITCH_MODULE_LOAD_FUNCTION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod_iflytekasr_load&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_asr_interface_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">asr_interface&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_mutex_init&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">MUTEX&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_MUTEX_NESTED&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">pool&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">globals&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">pool&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">pool&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_mutex_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MUTEX&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">iflytekasr_load_config&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_mutex_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">MUTEX&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* connect my internal structure to the blank pointer passed to me */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">module_interface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_loadable_module_create_module_interface&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">modname&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_interface_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">switch_loadable_module_create_interface&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="n">module_interface&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_INTERFACE&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">interface_name&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;iflytekasr&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_open&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_open&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_close&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_close&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_load_grammar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_load_grammar&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_unload_grammar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_unload_grammar&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_feed&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_feed&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_pause&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_pause&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_resume&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_resume&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_check_results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_check_results&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_get_results&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_get_results&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_start_input_timers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_start_input_timers&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_text_param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_text_param&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_numeric_param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_numeric_param&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_interface&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">asr_float_param&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">asr_float_param&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="cm">/* indicate that the module should continue to be loaded */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">module_interface&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_loadable_module_create_module_interface&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">modname&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;iflytekasr mod loaded version 1.1 since 20241024.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 模块卸载
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="n">SWITCH_MODULE_SHUTDOWN_FUNCTION&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">mod_iflytekasr_shutdown&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_WARNING&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;iflytekasr shutdown&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_UNLOAD&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="接口实现">接口实现
&lt;/h3>&lt;p>下列接口定义了一个 ASR 模块的完整生命周期及其功能。在 FreeSWITCH 中，这些接口可用于与第三方 ASR API（如科大讯飞、Google Speech-to-Text 等）对接，负责从初始化到关闭的各种操作。以下是各接口的具体作用：&lt;/p>
&lt;p>​ 1.asr_open：ASR 启动时执行，初始化 ASR 模块并建立连接。&lt;/p>
&lt;p>​ 2.asr_close：ASR 关闭时执行，关闭 ASR 模块并释放资源。&lt;/p>
&lt;p>​ 3.asr_load_grammar：在初始化资源之后执行，加载语法或语言模型。在开始 ASR 开启命令，可以加载一些外部传递来的参数，最终会传递到该接口解析。命令格式为 &lt;code>detect_speech &amp;lt;mod_name&amp;gt; &amp;lt;gram_name&amp;gt; &amp;lt;gram_path&amp;gt; [&amp;lt;addr&amp;gt;]&lt;/code>&lt;/p>
&lt;p>​ 4.asr_unload_grammar：在 close 方法前执行，卸载语法或语言模型，释放资源。&lt;/p>
&lt;p>​ 5.asr_feed：在拨打过程中，向 ASR API 传递语音数据帧。&lt;/p>
&lt;p>​ 6.asr_pause：暂停当前语音识别任务。&lt;/p>
&lt;p>​ 7.asr_resume：恢复暂停的语音识别任务。&lt;/p>
&lt;p>​ 8.asr_check_results：检查识别结果是否已生成。&lt;strong>注意：这个方法的实现要保证幂等性。在asr_get_results方法被调用之前，这个方法多次调用的结果要保持一致&lt;/strong>&lt;/p>
&lt;p>​ 9.asr_get_results：获取语音识别的最终结果。&lt;/p>
&lt;p>​ 10.asr_start_input_timers：启动输入计时器控制时间窗口。&lt;/p>
&lt;p>​ 11.asr_text_param：设置文本类型的配置参数。&lt;/p>
&lt;p>​ 12.asr_numeric_param：设置数值类型的配置参数。&lt;/p>
&lt;p>​ 13.asr_float_param：设置浮点类型的配置参数。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-cpp" data-lang="cpp">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// asr 模块开启时执行的方法，做一些初始化操作
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">test_speech_open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_speech_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sh&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">voice_name&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">rate&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">channels&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch_speech_flag_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_tts_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_core_alloc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">sh&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">memory_pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">test_tts_t&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_assert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">samples&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">sh&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">samplerate&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sh&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// close 时执行的方法，释放一些资源
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">test_speech_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_speech_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">sh&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch_speech_flag_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 通过查阅官方文档可以看到这个指令的格式为 detect_speech &amp;lt;mod_name&amp;gt; &amp;lt;gram_name&amp;gt; &amp;lt;gram_path&amp;gt; [&amp;lt;addr&amp;gt;]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to load a grammar to the asr interface */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_load_grammar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">grammar&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_ERROR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;asr_open attempt on CLOSED asr handle&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_FALSE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;load grammar %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grammar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">grammar&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_core_strdup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">memory_pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">grammar&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*! function to unload a grammar to the asr interface */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_unload_grammar&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">name&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 接收语音流的方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// ASR 的 media_bug 会在 SWITCH_ABC_TYPE_READ 状态下调用这个方法。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to feed audio to the ASR */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_feed&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">unsigned&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">len&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch_asr_flag_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="n">status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_vad_state_t&lt;/span> &lt;span class="n">vad_state&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_BREAK&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RETURNED_RESULT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_AUTO_RESUME&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Auto Resuming&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_reset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_READY&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">vad_state&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_vad_process&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kt">int16_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">len&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="k">sizeof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">uint16_t&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">vad_state&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">SWITCH_VAD_STATE_STOP_TALKING&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RESULT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Talking stopped, have result.&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_vad_reset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_clear_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_READY&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">vad_state&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">SWITCH_VAD_STATE_START_TALKING&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_START_OF_SPEECH&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">status&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// detect_speech resume 命令执行时会调用这个方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to resume recognizer */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_resume&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_ERROR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;asr_resume attempt on CLOSED asr handle&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_FALSE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Resuming&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_reset&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// detect_speech pause 命令执行时会调用这个方法
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to pause recognizer */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_pause&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_ERROR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;asr_pause attempt on CLOSED asr handle&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_FALSE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Pausing&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flags&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 检查是否获取到 ASR 结果的方法。每个语音帧都会调用。
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// **注意：这个方法的实现要保证幂等性。在asr_get_results方法被调用之前，这个方法多次调用的结果要保持一致
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to read results from the ASR*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_check_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch_asr_flag_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RETURNED_RESULT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_BREAK&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RETURNED_START_OF_SPEECH&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_START_OF_SPEECH&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">((&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RESULT&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_NOINPUT_TIMEOUT&lt;/span>&lt;span class="p">)))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_INPUT_TIMERS&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_START_OF_SPEECH&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_timeout&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_timeout&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;NO INPUT TIMEOUT %&amp;#34;&lt;/span> &lt;span class="n">SWITCH_TIME_T_FMT&lt;/span> &lt;span class="s">&amp;#34;ms&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_NOINPUT_TIMEOUT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_START_OF_SPEECH&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_timeout&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_timeout&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;SPEECH TIMEOUT %&amp;#34;&lt;/span> &lt;span class="n">SWITCH_TIME_T_FMT&lt;/span> &lt;span class="s">&amp;#34;ms&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_time&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_START_OF_SPEECH&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RESULT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_NOINPUT_TIMEOUT&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_RESULT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">||&lt;/span> &lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_NOINPUT_TIMEOUT&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="nl">SWITCH_STATUS_SUCCESS&lt;/span> &lt;span class="p">:&lt;/span> &lt;span class="n">SWITCH_STATUS_BREAK&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 获取识别加过的方法，识别结果复制给 xmlstr 这个指针。返回 true 时 Freeswitch 会对外发送 detected-speech 事件
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to read results from the ASR */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_get_results&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">**&lt;/span>&lt;span class="n">xmlstr&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">switch_asr_flag_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">flags&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">udp_info_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">udp_info&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">udp_info_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;[[iflytekasr_callback--&amp;gt;asr_get_results]] get result start [%s] &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="n">metadata_it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">globals&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">endpoint&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_mutex_lock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag_mutex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">index&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">metadata_it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_m_last_index&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">seq&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_FALSE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">seq&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;[[iflytekasr_callback--&amp;gt;asr_get_results]] get result get mutex [%s] &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">*&lt;/span>&lt;span class="n">xmlstr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_mprintf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;%s&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">get_switch_buffer_ptr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">text_buffer&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;[[iflytekasr_callback--&amp;gt;asr_get_result]] asr results is [%s] &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">xmlstr&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_buffer_zero&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">text_buffer&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_mutex_unlock&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">udp_info&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">flag_mutex&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 设置超时时间接口
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! function to start input timeouts */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_status_t&lt;/span> &lt;span class="nf">asr_start_input_timers&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_ASR_FLAG_CLOSED&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_LOG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">SWITCH_LOG_ERROR&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;asr_start_input_timers attempt on CLOSED asr handle&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_FALSE&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;start_input_timers&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">switch_test_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_INPUT_TIMERS&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_INPUT_TIMERS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_time&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_micro_time_now&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_INFO&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;Input timers already started&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">SWITCH_STATUS_SUCCESS&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 加载参数
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="cm">/*! set text parameter */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">asr_text_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">context&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">test_asr_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">private_info&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">zstr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="n">zstr&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">nval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">atoi&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">double&lt;/span> &lt;span class="n">fval&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">atof&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;no-input-timeout&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">switch_is_number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;no-input-timeout = %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">no_input_timeout&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;speech-timeout&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">switch_is_number&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_timeout&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;speech-timeout = %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">speech_timeout&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;start-input-timers&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">start_input_timers&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">start_input_timers&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_set_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_INPUT_TIMERS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_clear_flag&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ASRFLAG_INPUT_TIMERS&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;start-input-timers = %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">start_input_timers&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vad-mode&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;vad-mode = %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="n">switch_vad_set_mode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vad-voice-ms&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">nval&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">voice_ms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_vad_set_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;voice_ms&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vad-silence-ms&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">nval&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">silence_ms&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_vad_set_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;silence_ms&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;vad-thresh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">nval&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">thresh&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_vad_set_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">vad&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;thresh&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">nval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;channel-uuid&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_core_strdup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">memory_pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;channel-uuid = %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;result&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">result_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">switch_core_strdup&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">memory_pool&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;result = %s&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;confidence&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">fval&lt;/span> &lt;span class="o">&amp;gt;=&lt;/span> &lt;span class="mf">0.0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">result_confidence&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">fval&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;confidence = %f&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">fval&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="o">!&lt;/span>&lt;span class="n">strcasecmp&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;partial&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">param&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">switch_true&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">val&lt;/span>&lt;span class="p">))&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">partial&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">switch_log_printf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">SWITCH_CHANNEL_UUID_LOG&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">channel_uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">SWITCH_LOG_DEBUG&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;partial = %d&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">context&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">partial&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*! set numeric parameter */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">asr_numeric_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">int&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/*! set float parameter */&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="kt">void&lt;/span> &lt;span class="nf">asr_float_param&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">switch_asr_handle_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">ah&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">char&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">param&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kt">double&lt;/span> &lt;span class="n">val&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="配置文件">配置文件
&lt;/h3>&lt;p>自定义模块的配置文件参考，可以在加载模块时读取一些配置，保存到模块的全局变量当中&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;configuration&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;iflytekasr.conf&amp;#34;&lt;/span> &lt;span class="na">description=&lt;/span>&lt;span class="s">&amp;#34;ybs ws asr configuration&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;auto-reload&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- save the wave file for debug --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;wav-file-dir&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;/data/tmp/iflytekasr/&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="websocketpp-模块">WebSocketPP 模块
&lt;/h2>&lt;p>WebSocket 模块经过多种调研，选择使用了 &lt;a class="link" href="https://github.com/zaphoyd/websocketpp.git" target="_blank" rel="noopener"
>WebSocketPP&lt;/a>。&lt;/p>
&lt;p>Websocketpp 需要依赖 boost，CentOS 安装方法如下，其他分发版本可以参考官方文档&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 boost&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install boost
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install boost-devel
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装 websocketpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">git clone https://github.com/zaphoyd/websocketpp.git
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> websocketpp &lt;span class="c1">#进入目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir build &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">cd&lt;/span> build
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmake .. &lt;span class="c1">#执行cmake&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="测试-demo">测试 Demo
&lt;/h3>&lt;p>你可以进入该项目运行下面的脚本编译代码，启动 Server 端和 Client 端进行简单测试&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ../examples/echo_server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">g++ -o echo_server echo_server.cpp -lboost_system -lpthread -std&lt;span class="o">=&lt;/span>c++11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#编译链接echo_server&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./echo_server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#启动服务器端&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ../examples/echo_client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#编译链接echo_client&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">g++ -o echo_client echo_client.cpp -lboost_system -lpthread -std&lt;span class="o">=&lt;/span>c++11
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#启动客户端&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">./echo_client
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="实现代码">实现代码
&lt;/h3>&lt;p>下面代码定义了一个 &lt;code>endpoint&lt;/code> 对象，提供了一些基础方法，如&lt;code>send&lt;/code>、&lt;code>close&lt;/code>等。该对象还维持了多个 WebSocket 链接对象，这些对象包含一些 如&lt;code>on_message&lt;/code>的钩子方法。代码如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;span class="lnt">117
&lt;/span>&lt;span class="lnt">118
&lt;/span>&lt;span class="lnt">119
&lt;/span>&lt;span class="lnt">120
&lt;/span>&lt;span class="lnt">121
&lt;/span>&lt;span class="lnt">122
&lt;/span>&lt;span class="lnt">123
&lt;/span>&lt;span class="lnt">124
&lt;/span>&lt;span class="lnt">125
&lt;/span>&lt;span class="lnt">126
&lt;/span>&lt;span class="lnt">127
&lt;/span>&lt;span class="lnt">128
&lt;/span>&lt;span class="lnt">129
&lt;/span>&lt;span class="lnt">130
&lt;/span>&lt;span class="lnt">131
&lt;/span>&lt;span class="lnt">132
&lt;/span>&lt;span class="lnt">133
&lt;/span>&lt;span class="lnt">134
&lt;/span>&lt;span class="lnt">135
&lt;/span>&lt;span class="lnt">136
&lt;/span>&lt;span class="lnt">137
&lt;/span>&lt;span class="lnt">138
&lt;/span>&lt;span class="lnt">139
&lt;/span>&lt;span class="lnt">140
&lt;/span>&lt;span class="lnt">141
&lt;/span>&lt;span class="lnt">142
&lt;/span>&lt;span class="lnt">143
&lt;/span>&lt;span class="lnt">144
&lt;/span>&lt;span class="lnt">145
&lt;/span>&lt;span class="lnt">146
&lt;/span>&lt;span class="lnt">147
&lt;/span>&lt;span class="lnt">148
&lt;/span>&lt;span class="lnt">149
&lt;/span>&lt;span class="lnt">150
&lt;/span>&lt;span class="lnt">151
&lt;/span>&lt;span class="lnt">152
&lt;/span>&lt;span class="lnt">153
&lt;/span>&lt;span class="lnt">154
&lt;/span>&lt;span class="lnt">155
&lt;/span>&lt;span class="lnt">156
&lt;/span>&lt;span class="lnt">157
&lt;/span>&lt;span class="lnt">158
&lt;/span>&lt;span class="lnt">159
&lt;/span>&lt;span class="lnt">160
&lt;/span>&lt;span class="lnt">161
&lt;/span>&lt;span class="lnt">162
&lt;/span>&lt;span class="lnt">163
&lt;/span>&lt;span class="lnt">164
&lt;/span>&lt;span class="lnt">165
&lt;/span>&lt;span class="lnt">166
&lt;/span>&lt;span class="lnt">167
&lt;/span>&lt;span class="lnt">168
&lt;/span>&lt;span class="lnt">169
&lt;/span>&lt;span class="lnt">170
&lt;/span>&lt;span class="lnt">171
&lt;/span>&lt;span class="lnt">172
&lt;/span>&lt;span class="lnt">173
&lt;/span>&lt;span class="lnt">174
&lt;/span>&lt;span class="lnt">175
&lt;/span>&lt;span class="lnt">176
&lt;/span>&lt;span class="lnt">177
&lt;/span>&lt;span class="lnt">178
&lt;/span>&lt;span class="lnt">179
&lt;/span>&lt;span class="lnt">180
&lt;/span>&lt;span class="lnt">181
&lt;/span>&lt;span class="lnt">182
&lt;/span>&lt;span class="lnt">183
&lt;/span>&lt;span class="lnt">184
&lt;/span>&lt;span class="lnt">185
&lt;/span>&lt;span class="lnt">186
&lt;/span>&lt;span class="lnt">187
&lt;/span>&lt;span class="lnt">188
&lt;/span>&lt;span class="lnt">189
&lt;/span>&lt;span class="lnt">190
&lt;/span>&lt;span class="lnt">191
&lt;/span>&lt;span class="lnt">192
&lt;/span>&lt;span class="lnt">193
&lt;/span>&lt;span class="lnt">194
&lt;/span>&lt;span class="lnt">195
&lt;/span>&lt;span class="lnt">196
&lt;/span>&lt;span class="lnt">197
&lt;/span>&lt;span class="lnt">198
&lt;/span>&lt;span class="lnt">199
&lt;/span>&lt;span class="lnt">200
&lt;/span>&lt;span class="lnt">201
&lt;/span>&lt;span class="lnt">202
&lt;/span>&lt;span class="lnt">203
&lt;/span>&lt;span class="lnt">204
&lt;/span>&lt;span class="lnt">205
&lt;/span>&lt;span class="lnt">206
&lt;/span>&lt;span class="lnt">207
&lt;/span>&lt;span class="lnt">208
&lt;/span>&lt;span class="lnt">209
&lt;/span>&lt;span class="lnt">210
&lt;/span>&lt;span class="lnt">211
&lt;/span>&lt;span class="lnt">212
&lt;/span>&lt;span class="lnt">213
&lt;/span>&lt;span class="lnt">214
&lt;/span>&lt;span class="lnt">215
&lt;/span>&lt;span class="lnt">216
&lt;/span>&lt;span class="lnt">217
&lt;/span>&lt;span class="lnt">218
&lt;/span>&lt;span class="lnt">219
&lt;/span>&lt;span class="lnt">220
&lt;/span>&lt;span class="lnt">221
&lt;/span>&lt;span class="lnt">222
&lt;/span>&lt;span class="lnt">223
&lt;/span>&lt;span class="lnt">224
&lt;/span>&lt;span class="lnt">225
&lt;/span>&lt;span class="lnt">226
&lt;/span>&lt;span class="lnt">227
&lt;/span>&lt;span class="lnt">228
&lt;/span>&lt;span class="lnt">229
&lt;/span>&lt;span class="lnt">230
&lt;/span>&lt;span class="lnt">231
&lt;/span>&lt;span class="lnt">232
&lt;/span>&lt;span class="lnt">233
&lt;/span>&lt;span class="lnt">234
&lt;/span>&lt;span class="lnt">235
&lt;/span>&lt;span class="lnt">236
&lt;/span>&lt;span class="lnt">237
&lt;/span>&lt;span class="lnt">238
&lt;/span>&lt;span class="lnt">239
&lt;/span>&lt;span class="lnt">240
&lt;/span>&lt;span class="lnt">241
&lt;/span>&lt;span class="lnt">242
&lt;/span>&lt;span class="lnt">243
&lt;/span>&lt;span class="lnt">244
&lt;/span>&lt;span class="lnt">245
&lt;/span>&lt;span class="lnt">246
&lt;/span>&lt;span class="lnt">247
&lt;/span>&lt;span class="lnt">248
&lt;/span>&lt;span class="lnt">249
&lt;/span>&lt;span class="lnt">250
&lt;/span>&lt;span class="lnt">251
&lt;/span>&lt;span class="lnt">252
&lt;/span>&lt;span class="lnt">253
&lt;/span>&lt;span class="lnt">254
&lt;/span>&lt;span class="lnt">255
&lt;/span>&lt;span class="lnt">256
&lt;/span>&lt;span class="lnt">257
&lt;/span>&lt;span class="lnt">258
&lt;/span>&lt;span class="lnt">259
&lt;/span>&lt;span class="lnt">260
&lt;/span>&lt;span class="lnt">261
&lt;/span>&lt;span class="lnt">262
&lt;/span>&lt;span class="lnt">263
&lt;/span>&lt;span class="lnt">264
&lt;/span>&lt;span class="lnt">265
&lt;/span>&lt;span class="lnt">266
&lt;/span>&lt;span class="lnt">267
&lt;/span>&lt;span class="lnt">268
&lt;/span>&lt;span class="lnt">269
&lt;/span>&lt;span class="lnt">270
&lt;/span>&lt;span class="lnt">271
&lt;/span>&lt;span class="lnt">272
&lt;/span>&lt;span class="lnt">273
&lt;/span>&lt;span class="lnt">274
&lt;/span>&lt;span class="lnt">275
&lt;/span>&lt;span class="lnt">276
&lt;/span>&lt;span class="lnt">277
&lt;/span>&lt;span class="lnt">278
&lt;/span>&lt;span class="lnt">279
&lt;/span>&lt;span class="lnt">280
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-c++" data-lang="c++">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;websocketpp/config/asio_no_tls_client.hpp&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;websocketpp/client.hpp&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;websocketpp/common/thread.hpp&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#include&lt;/span> &lt;span class="cpf">&amp;lt;websocketpp/common/memory.hpp&amp;gt;&lt;/span>&lt;span class="cp">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">typedef&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">asio_client&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">static&lt;/span> &lt;span class="n">switch_mutex_t&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">MUTEX&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">NULL&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">connection_metadata&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">typedef&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">hdl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="n">m_uuid&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">m_hdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hdl&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">m_status&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Connecting&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">m_uri&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="p">),&lt;/span> &lt;span class="n">m_server&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;N/A&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_open&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">hdl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Open&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_ptr&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_con_from_hdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hdl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_response_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Server&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_fail&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">hdl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Failed&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_ptr&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_con_from_hdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hdl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_server&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_response_header&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Server&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_error_reason&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_ec&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">client&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">c&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">hdl&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_status&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s">&amp;#34;Closed&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_ptr&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">c&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_con_from_hdl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">hdl&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">stringstream&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">s&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;close code: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_remote_close_code&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34; (&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">close&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">get_string&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_remote_close_code&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;), close reason: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_remote_close_reason&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_error_reason&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">s&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">str&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">on_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">message_ptr&lt;/span> &lt;span class="n">msg&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_opcode&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opcode&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_payload&lt;/span>&lt;span class="p">());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">push_back&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">utility&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">to_hex&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">msg&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_payload&lt;/span>&lt;span class="p">()));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// std::cout &amp;lt;&amp;lt; &amp;#34;&amp;gt; recived message is: &amp;#34; &amp;lt;&amp;lt; msg-&amp;gt;get_payload() &amp;lt;&amp;lt; &amp;#34;index is: &amp;#34; &amp;lt;&amp;lt; m_messages.size() &amp;lt;&amp;lt; std::endl;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">get_hdl&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">m_hdl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">get_uuid&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">m_uuid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">get_status&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="k">const&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">m_status&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="nf">get_size&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">get_message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kt">int&lt;/span> &lt;span class="n">index&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">m_messages&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">];&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">friend&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ostream&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">operator&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ostream&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">connection_metadata&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">m_uuid&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_hdl&lt;/span> &lt;span class="n">m_hdl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">m_status&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">m_uri&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">m_server&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">m_error_reason&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">m_messages&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ostream&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="k">operator&lt;/span>&lt;span class="o">&amp;lt;&amp;lt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ostream&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">out&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">connection_metadata&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; URI: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_uri&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Status: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_status&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Remote Server: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_server&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">empty&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s">&amp;#34;None Specified&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_server&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Error/close reason: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_error_reason&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">empty&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s">&amp;#34;N/A&amp;#34;&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_error_reason&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Messages Processed: (&amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;) &lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">vector&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;::&lt;/span>&lt;span class="n">const_iterator&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">data&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">m_messages&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">out&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="o">*&lt;/span>&lt;span class="n">it&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s">&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">out&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="nc">websocket_endpoint&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">public&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocket_endpoint&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="n">m_next_id&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clear_error_channels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">elevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">set_access_channels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">alevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">clear_access_channels&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">alevel&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">none&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// m_endpoint.set_access_channels(websocketpp::log::alevel::all);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// m_endpoint.clear_access_channels(websocketpp::log::alevel::frame_payload);
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">init_asio&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">start_perpetual&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_thread&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="kr">thread&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">run&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">~&lt;/span>&lt;span class="n">websocket_endpoint&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stop_perpetual&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">con_list&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">const_iterator&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">begin&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="n">it&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">();&lt;/span> &lt;span class="o">++&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_status&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s">&amp;#34;Open&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Only close open connections
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">continue&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Closing connection &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_uuid&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">error_code&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_hdl&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">close&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">going_away&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Error closing connection &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_uuid&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;: &amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_thread&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">join&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="nf">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="k">const&lt;/span> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">error_code&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">connection_ptr&lt;/span> &lt;span class="n">con&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">get_connection&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uri&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Connect initialization error: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="n">metadata_ptr&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">make_shared&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_handle&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">uri&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">metadata_ptr&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">set_open_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">on_open&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metadata_ptr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">placeholders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">_1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">set_fail_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">on_fail&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metadata_ptr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">placeholders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">_1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">set_close_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">on_close&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metadata_ptr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">placeholders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">_1&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">set_message_handler&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">bind&lt;/span>&lt;span class="p">(&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;amp;&lt;/span>&lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">on_message&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">metadata_ptr&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">placeholders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">_1&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">placeholders&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">_2&lt;/span>&lt;span class="p">));&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">connect&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">con&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">close&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">status&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">value&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">reason&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">error_code&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con_list&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">iterator&lt;/span> &lt;span class="n">metadata_it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; No connection found with uuid &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">uuid&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">close&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_hdl&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">code&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">reason&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Error initiating close: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">erase&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">error_code&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con_list&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">iterator&lt;/span> &lt;span class="n">metadata_it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; No connection found with uuid &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">uuid&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_hdl&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opcode&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">text&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Error sending message: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">void&lt;/span> &lt;span class="nf">sendBinary&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">error_code&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con_list&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">iterator&lt;/span> &lt;span class="n">metadata_it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; No connection found with uuid &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">uuid&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">send&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">get_hdl&lt;/span>&lt;span class="p">(),&lt;/span> &lt;span class="n">message&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">frame&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">opcode&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">binary&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">ec&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">cout&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="s">&amp;#34;&amp;gt; Error sending message: &amp;#34;&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">ec&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">message&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&amp;lt;&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">endl&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ptr&lt;/span> &lt;span class="n">get_metadata&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span> &lt;span class="n">uuid&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">const&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con_list&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">const_iterator&lt;/span> &lt;span class="n">metadata_it&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">find&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">uuid&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">metadata_it&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">end&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="n">metadata_it&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="n">second&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">private&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">typedef&lt;/span> &lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">std&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">connection_metadata&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">ptr&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">con_list&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">client&lt;/span> &lt;span class="n">m_endpoint&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">shared_ptr&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">websocketpp&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">::&lt;/span>&lt;span class="kr">thread&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">m_thread&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">con_list&lt;/span> &lt;span class="n">m_connection_list&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kt">int&lt;/span> &lt;span class="n">m_next_id&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="安装-mod_iflytekasr">安装 mod_iflytekasr
&lt;/h2>&lt;p>Makefile 参考如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-makefile" data-lang="makefile">&lt;span class="line">&lt;span class="cl">&lt;span class="nv">FREESWITCH_MOD_PATH&lt;/span>&lt;span class="o">=&lt;/span>/usr/local/freeswitch/mod
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MODNAME&lt;/span> &lt;span class="o">=&lt;/span> mod_iflytekasr.so
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MODOBJ&lt;/span> &lt;span class="o">=&lt;/span> mod_iflytekasr.o base64.o
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">MODCFLAGS&lt;/span> &lt;span class="o">=&lt;/span> -Wall -Wno-unused-function -I/usr/src/freeswitch/src/include -I/usr/src/freeswitch/libs/libteletone/src -lboost_system -lpthread
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CC&lt;/span> &lt;span class="o">=&lt;/span> g++
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">CPPFLAGS&lt;/span> &lt;span class="o">=&lt;/span> -fPIC -std&lt;span class="o">=&lt;/span>c++11 -g &lt;span class="k">$(&lt;/span>MODCFLAGS&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">LDFLAGS&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">$(&lt;/span>MODLDFLAGS&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">all&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">MODNAME&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">$(MODNAME)&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">MODOBJ&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> @&lt;span class="k">$(&lt;/span>CC&lt;span class="k">)&lt;/span> -shared &lt;span class="k">$(&lt;/span>CPPFLAGS&lt;span class="k">)&lt;/span> -o &lt;span class="nv">$@&lt;/span> &lt;span class="k">$(&lt;/span>MODOBJ&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>LDFLAGS&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">.PHONY&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">all&lt;/span> &lt;span class="n">clean&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">clean&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> rm -f &lt;span class="k">$(&lt;/span>MODNAME&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>MODOBJ&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">install&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="k">$(&lt;/span>&lt;span class="nv">MODNAME&lt;/span>&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install -d &lt;span class="k">$(&lt;/span>FREESWITCH_MOD_PATH&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> install &lt;span class="k">$(&lt;/span>MODNAME&lt;span class="k">)&lt;/span> &lt;span class="k">$(&lt;/span>FREESWITCH_MOD_PATH&lt;span class="k">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">mod_iflytekasr.o&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">mod_iflytekasr&lt;/span>.&lt;span class="n">cpp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nf">base64.o&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="n">base&lt;/span>64.&lt;span class="n">cpp&lt;/span> &lt;span class="n">base&lt;/span>64.&lt;span class="n">h&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>在 ${FREESWITCH_SOURCE_ROOT}/modules.conf 添加以下两个模块&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">asr_tts/mod_iflytekasr
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>通过将以下行添加到 &lt;code>${FREESWITCH_INSTALLATION_ROOT}/conf/autoload_configs/modules.conf.xml&lt;/code> 来激活 mod_iflytekasr&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;load&lt;/span> &lt;span class="na">module=&lt;/span>&lt;span class="s">&amp;#34;mod_iflytekasr&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="2">
&lt;li>将模块复制到 &lt;code>${FREESWITCH_SOURCE_ROOT}/src/mod/asr_tts/&lt;/code> 目录下&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> mod_iflytekasr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">make install
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="3">
&lt;li>
&lt;p>重启 freeswitch 加载模块&lt;/p>
&lt;/li>
&lt;li>
&lt;p>复制以下lua脚本到&lt;code>${FREESWITCH_INSTALLATION_ROOT}/scripts/&lt;/code>里&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-lua" data-lang="lua">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- asr text for one round&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kd">local&lt;/span> &lt;span class="n">asr_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- 通话的事件都会回调这个接口&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- This is the input callback used by dtmf or any other events on this session such as ASR.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">function&lt;/span> &lt;span class="nf">onInput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">s&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">type&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">freeswitch.consoleLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;Callback with type &amp;#34;&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="n">type&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- freeswitch.consoleLog(&amp;#34;info&amp;#34;, &amp;#34;s=&amp;#34; .. s .. &amp;#34;\n&amp;#34;);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">freeswitch.consoleLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;obj=&amp;#34;&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">serialize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;dtmf&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">freeswitch.consoleLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;DTMF Digit: &amp;#34;&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="n">obj.digit&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">elseif&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">type&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;event&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">local&lt;/span> &lt;span class="n">event&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">getHeader&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Speech-Type&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;begin-speaking&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">freeswitch.consoleLog&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;info&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;speaking=&amp;#34;&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">serialize&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">..&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="se">\n&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- Return break on begin-speaking events to stop playback of the fire or tts.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">return&lt;/span> &lt;span class="s2">&amp;#34;break&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">event&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;detected-speech&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- freeswitch.consoleLog(&amp;#34;info&amp;#34;, &amp;#34;\n&amp;#34; .. obj:serialize() .. &amp;#34;\n&amp;#34;);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">local&lt;/span> &lt;span class="n">text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">obj&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">getBody&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">text&lt;/span> &lt;span class="o">~=&lt;/span> &lt;span class="s2">&amp;#34;(null)&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- Pause speech detection (this is on auto but pausing it just in case)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;detect_speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;pause&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- Parse the results from the event into the results table for later use.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- results = getResults(obj:getBody());&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- set the global asr text for later use&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">text&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- return &amp;#34;break&amp;#34;;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">answer&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- Register the input callback&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">setInputCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;onInput&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- Sleep a little bit to get media time to be fully up&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">100&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">streamFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;hello.wav&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;detect_speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;test directory directory&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- keep the thread alive&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">while&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">ready&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">do&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">asr_text&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">20&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">elseif&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="n">asr_text&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="kr">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">streamFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;I didn&amp;#39;t hear you.wav&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;detect_speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;resume&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- do your NLU here ?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">-- echo back the recognition result&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">streamFile&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Yes.wav&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">asr_text&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">nil&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;detect_speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;resume&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">-- stop the detect_speech and hangup&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">execute&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;detect_speech&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;stop&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">sleep&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1000&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">session&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">hangup&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>Mysql 查询流程</title><link>https://cyber-blog.github.io/p/mysql-%E6%9F%A5%E8%AF%A2%E6%B5%81%E7%A8%8B/</link><pubDate>Tue, 24 Oct 2023 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/mysql-%E6%9F%A5%E8%AF%A2%E6%B5%81%E7%A8%8B/</guid><description>&lt;h1 id="mysql-索引结构与执行流程从-b-树到联合索引与索引下推全解析">&lt;strong>MySQL 索引结构与执行流程：从 B+ 树到联合索引与索引下推全解析&lt;/strong>
&lt;/h1>&lt;p>本篇文章从 MySQL 为什么选择 B+ 树索引开始，逐步引出联合索引的最左匹配原则、索引下推（ICP）、回表机制和覆盖索引等关键执行细节，帮助你从结构、原理到实际执行路径深入理解索引背后的逻辑。&lt;/p>
&lt;hr>
&lt;h2 id="一为什么-mysql-选择-b-树而非-b-树">&lt;strong>一、为什么 MySQL 选择 B+ 树而非 B 树？&lt;/strong>
&lt;/h2>&lt;p>MySQL 中使用最广泛的 InnoDB 存储引擎采用 &lt;strong>B+ 树&lt;/strong> 作为索引结构，这种选择并非偶然。&lt;/p>
&lt;h3 id="1-b-树-vs-b-树-的结构差异">&lt;strong>1. B 树 vs B+ 树 的结构差异&lt;/strong>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>特性&lt;/strong>&lt;/th>
&lt;th>&lt;strong>B 树&lt;/strong>&lt;/th>
&lt;th>&lt;strong>B+ 树&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>数据存储&lt;/td>
&lt;td>所有节点都存数据&lt;/td>
&lt;td>仅叶子节点存数据，内部节点只存键&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>查询路径&lt;/td>
&lt;td>查询可能在中间节点结束&lt;/td>
&lt;td>查询必须走到叶子节点&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>范围扫描&lt;/td>
&lt;td>需要中序遍历整棵树&lt;/td>
&lt;td>叶子节点通过链表串联，天然支持范围查询&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="2-为什么-b-树更适合数据库索引">&lt;strong>2. 为什么 B+ 树更适合数据库索引？&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>&lt;strong>磁盘访问效率更高&lt;/strong>：非叶子节点更小，内存缓存命中率更高，减少磁盘 IO；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>范围查询更高效&lt;/strong>：链表串联叶子节点，直接顺序扫描即可；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>结构稳定、查询均衡&lt;/strong>：所有查找都走到叶子节点，路径统一，优化更容易；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>排序与全表扫描友好&lt;/strong>：天然有序，支持快速 ORDER BY；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>📌 &lt;strong>总结：B+ 树对磁盘 I/O、范围查、缓存友好，全面优于 B 树，是关系型数据库的首选。&lt;/strong>&lt;/p>
&lt;hr>
&lt;h2 id="二联合索引与最左匹配原则">&lt;strong>二、联合索引与最左匹配原则&lt;/strong>
&lt;/h2>&lt;h3 id="1-什么是联合索引">&lt;strong>1. 什么是联合索引？&lt;/strong>
&lt;/h3>&lt;p>联合索引是将多个字段作为一个整体创建的复合索引，例如：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CREATE INDEX idx_abc ON user(a, b, c);
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在使用联合索引 (a, b, c) 时，会把每一行的 a、b、c 作为组合键 (a, b, c) 排序成一棵 B+ 树，其比较顺序就是字典序。它在 B+ 树的叶子节点上，按照 a -&amp;gt; b -&amp;gt; c 的顺序排列。&lt;/p>
&lt;p>B+树索引示例&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl"> Root Node
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-----------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | (2,1,1) |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +-----------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +------------------+ +------------------+ ← 中间节点
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> | (1,2,1) | | (2,2,1) |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +------------------+ +------------------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / \ / \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> / \ / \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> Leaf1 Leaf2 Leaf3 Leaf4 ← 叶子节点（有序链表）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+ +----------+ +----------+ +----------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">|1,1,1 | → |1,1,2 | →|1,2,1 | →|2,1,1 |
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">+----------+ +----------+ +----------+ +----------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +----------+
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> |2,2,1 | → (尾部 null)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> +----------+
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-为什么要遵循最左匹配原则">&lt;strong>2. 为什么要遵循最左匹配原则？&lt;/strong>
&lt;/h3>&lt;p>只有&lt;strong>从最左侧字段开始连续使用&lt;/strong>，索引才能被利用。例如：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>WHERE 条件&lt;/strong>&lt;/th>
&lt;th>&lt;strong>是否命中 idx_abc&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>WHERE a = 1&lt;/td>
&lt;td>✅ 使用 a&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WHERE a = 1 AND b = 2&lt;/td>
&lt;td>✅ 使用 a、b&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WHERE b = 2&lt;/td>
&lt;td>❌ 不使用联合索引&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>WHERE a = 1 AND c = 3&lt;/td>
&lt;td>✅ 使用 a，但 c 不触发&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>联合索引中的比较（如 &amp;lt; (2,1,1)）是基于联合键的&lt;strong>字典序&lt;/strong>，而最左前缀原则则是限制你&lt;strong>必须从前往后匹配字段&lt;/strong>，否则 B+ 树无法正确判断搜索路径。&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="三联合索引查询执行流程含回表索引下推覆盖索引">&lt;strong>三、联合索引查询执行流程（含回表、索引下推、覆盖索引）&lt;/strong>
&lt;/h2>&lt;p>我们通过一个实际查询来讲解完整的执行流程：&lt;/p>
&lt;h3 id="1-表结构与查询示例">&lt;strong>1. 表结构与查询示例&lt;/strong>
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">CREATE TABLE user (
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> id INT PRIMARY KEY,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> a INT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> b INT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> c INT,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> d VARCHAR(100),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> KEY idx_abc (a, b, c)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">);
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">SELECT c FROM user WHERE a = 1 AND b = 2 AND c &amp;gt; 3;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="2-执行流程含-server-层与-innodb-层分工">&lt;strong>2. 执行流程（含 Server 层与 InnoDB 层分工）&lt;/strong>
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">【1】客户端发送 SQL 查询：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> SELECT d FROM t WHERE a = 1 AND c = 2;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【2】Server 层：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 解析 SQL，生成执行计划
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 确认可以使用联合索引 idx_a_b_c（a 是最左字段）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 判断：c 不满足最左前缀 → 不能用于定位
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─ 但是 ✅ 可以使用 Index Condition Pushdown（ICP）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【3】Server 层下发执行计划 + 下推过滤条件 (c=2) 到 InnoDB
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【4】InnoDB 二级索引扫描 idx_a_b_c：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 根据 a=1 扫描对应索引区间
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 对每一个记录，**在扫描索引的同时检查 c=2**
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─ ✅ 满足 c=2 的主键 id 被保留，其他跳过（减少回表）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【5】返回匹配的主键 id（如 id=123、id=456）给 Server
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【6】Server 层判断：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─ 字段 d 不在索引中 ❌ → 必须回表
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【7】InnoDB 根据主键 ID 回表：
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├─ 检查主键页是否在 Buffer Pool（缓存）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └─ ✅ 在内存 → 直接读取
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │ └─ ❌ 不在内存 → 触发磁盘 IO
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └─ 返回完整行数据（含 d 字段）
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ↓
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">【8】Server 层组装最终结果，返回给客户端
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="3-术语解析">&lt;strong>3. 术语解析&lt;/strong>
&lt;/h3>&lt;ul>
&lt;li>
&lt;p>✅ &lt;strong>索引下推（ICP）&lt;/strong>：将 c &amp;gt; 3 的判断提前到 InnoDB 层，在遍历索引时就过滤不符合的行，避免大量无效回表；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ &lt;strong>覆盖索引&lt;/strong>：查询字段 c 已经在索引 idx_abc 中，直接从叶子节点读取，无需访问主键页（聚簇索引），提高效率；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>❌ &lt;strong>回表&lt;/strong>：如果 SELECT 中包含非索引字段（如 d），则需根据主键 id 再去聚簇索引中查找整行数据，增加开销；&lt;/p>
&lt;/li>
&lt;/ul>
&lt;hr>
&lt;h2 id="四hash-索引对比补充适合极端等值查询">&lt;strong>四、Hash 索引对比补充：适合极端等值查询&lt;/strong>
&lt;/h2>&lt;h3 id="1-hash-索引特点多用于-memory-引擎">&lt;strong>1. Hash 索引特点（多用于 Memory 引擎）&lt;/strong>
&lt;/h3>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>特性&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Hash 索引&lt;/strong>&lt;/th>
&lt;th>&lt;strong>B+ 树索引&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>查找效率&lt;/td>
&lt;td>✅ 等值查询最快&lt;/td>
&lt;td>✅ 稍慢但功能更全&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>范围查询&lt;/td>
&lt;td>❌ 不支持&lt;/td>
&lt;td>✅ 支持&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>排序&lt;/td>
&lt;td>❌ 不支持&lt;/td>
&lt;td>✅ 支持（叶子链表）&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>支持引擎&lt;/td>
&lt;td>仅 Memory，或自适应哈希&lt;/td>
&lt;td>InnoDB、MyISAM、Memory 等&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="2-innodb-的自适应哈希索引ahi">&lt;strong>2. InnoDB 的自适应哈希索引（AHI）&lt;/strong>
&lt;/h3>&lt;p>InnoDB 会自动监控某些 B+ 树热点页，自动为其建立 Hash 索引以优化等值查询，这对开发者透明、不可控制。&lt;/p>
&lt;hr>
&lt;h3 id="五innodb-无主键表时会如何查询">&lt;strong>五、InnoDB 无主键表时会如何查询&lt;/strong>
&lt;/h3>&lt;ol>
&lt;li>
&lt;p>&lt;strong>自动生成隐藏主键&lt;/strong>：&lt;/p>
&lt;p>若表无显式主键或唯一非空索引，InnoDB 会自动添加一个 &lt;strong>6字节隐藏 RowID&lt;/strong>，作为聚簇索引的 key。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>二级索引指向 RowID&lt;/strong>：&lt;/p>
&lt;p>所有二级索引将指向这个隐藏 RowID，而不是显式主键。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>查询过程与回表&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>查询时先通过二级索引查出 RowID；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后根据 RowID 去聚簇索引中“回表”获取整行数据；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回所需字段。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>性能与维护影响&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>无法控制 RowID 排序与结构；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>查询效率和调优难度高于有主键表；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>不利于数据管理和故障排查。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;p>六、Mysql 深分页的查询优化总结&lt;/p>
&lt;h2 id="五总结与优化建议">&lt;strong>五、总结与优化建议&lt;/strong>
&lt;/h2>&lt;ul>
&lt;li>
&lt;p>✅ B+ 树索引是数据库查询的核心结构，范围查、排序查都依赖它；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ 联合索引需注意“最左前缀”匹配，字段顺序设计极关键；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ ICP（索引下推）可减少回表成本，提高查询效率；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ 覆盖索引是查询最优形态，能避免访问主键页；&lt;/p>
&lt;/li>
&lt;li>
&lt;p>✅ Hash 索引虽快，但仅适合极简等值查找场景。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>📌 &lt;strong>优化索引设计的核心策略：&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>通过合理设计联合索引顺序 + 使用覆盖索引 + 启用 ICP&lt;/p>
&lt;/blockquote>
&lt;p>从根源上减少回表次数，才是提升 MySQL 查询性能的核心。&lt;/p></description></item><item><title>MVCC总结</title><link>https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 24 Aug 2023 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/</guid><description>&lt;p>&lt;strong>MVCC（多版本并发控制）&lt;/strong>
MVCC（Multi-Version Concurrency Control，多版本并发控制）是一种用于解决数据库中并发事务问题的机制。它通过为每个事务提供数据库中数据的一个快照（Snapshot），允许多个事务同时读取和写入数据，从而实现高效的并发控制和事务隔离。&lt;/p>
&lt;p>事务是由 MySQL 的引擎来实现的，我们常见的 InnoDB 引擎它是支持事务的。&lt;/p>
&lt;p>不过并不是所有的引擎都能支持事务，比如 MySQL 原生的 MyISAM 引擎就不支持事务，也正是这样，所以大多数 MySQL 的引擎都是用 InnoDB。&lt;/p>
&lt;p>事务看起来感觉简单，但是要实现事务必须要遵守 4 个特性，分别如下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>原子性（Atomicity）&lt;/strong>：一个事务中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节，而且事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样，就好比买一件商品，购买成功时，则给商家付了钱，商品到手；购买失败时，则商品在商家手中，消费者的钱也没花出去。&lt;/li>
&lt;li>&lt;strong>一致性（Consistency）&lt;/strong>：是指事务操作前和操作后，数据满足完整性约束，数据库保持一致性状态。&lt;/li>
&lt;li>&lt;strong>隔离性（Isolation）&lt;/strong>：数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致，因为多个事务同时使用相同的数据时，不会相互干扰，每个事务都有一个完整的数据空间，对其他并发事务是隔离的。也就是说，消费者购买商品这个事务，是不影响其他消费者购买的。&lt;/li>
&lt;li>&lt;strong>持久性（Durability）&lt;/strong>：事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。&lt;/li>
&lt;/ul>
&lt;p>InnoDB 引擎通过以下技术来保证事务的这四个特性&lt;/p>
&lt;ul>
&lt;li>持久性是通过 &lt;code>redo log&lt;/code> （重做日志）来保证的；&lt;/li>
&lt;li>原子性是通过 &lt;code>undo log&lt;/code>（回滚日志） 来保证的；&lt;/li>
&lt;li>隔离性是通过 &lt;code>MVCC&lt;/code>（多版本并发控制） 或锁机制来保证的；&lt;/li>
&lt;li>一致性则是通过持久性+原子性+隔离性来保证；&lt;/li>
&lt;/ul>
&lt;h2 id="数据库的四种隔离级别">数据库的四种隔离级别
&lt;/h2>&lt;table>
&lt;thead>
&lt;tr>
&lt;th>隔离级别&lt;/th>
&lt;th>脏读&lt;/th>
&lt;th>不可重复读&lt;/th>
&lt;th>幻读&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>READ UNCOMMITTED&lt;/strong>：未提交读&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>READ COMMITTED&lt;/strong>：已提交读&lt;/td>
&lt;td>解决&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>REPEATABLE READ&lt;/strong>：可重复读&lt;/td>
&lt;td>解决&lt;/td>
&lt;td>解决&lt;/td>
&lt;td>可能发生&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SERIALIZABLE&lt;/strong>：可串行化&lt;/td>
&lt;td>解决&lt;/td>
&lt;td>解决&lt;/td>
&lt;td>解决&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>为什么没有脏写？&lt;/strong>&lt;br>
四种问题按照严重性排序：脏写 &amp;gt; 脏读 &amp;gt; 不可重复读 &amp;gt; 幻读&lt;br>
脏写这个问题太严重了，不论是哪种隔离级别，都不允许脏写的情况发生。&lt;/p>
&lt;p>SQL 标准提出了四种隔离级别来规避这些现象，隔离级别越高，性能效率就越低，这四个隔离级别如下：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>读未提交（&lt;em>read uncommitted&lt;/em>）&lt;/strong>，指一个事务还没提交时，它做的变更就能被其他事务看到；&lt;/li>
&lt;li>&lt;strong>读提交（&lt;em>read committed&lt;/em>）&lt;/strong>，指一个事务提交之后，它做的变更才能被其他事务看到；&lt;/li>
&lt;li>&lt;strong>可重复读（&lt;em>repeatable read&lt;/em>）&lt;/strong>，指一个事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，&lt;strong>MySQL InnoDB 引擎的默认隔离级别&lt;/strong>；&lt;/li>
&lt;li>&lt;strong>串行化（&lt;em>serializable&lt;/em> ）&lt;/strong>；会对记录加上读写锁，在多个事务对这条记录进行读写操作时，如果发生了读写冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行；&lt;/li>
&lt;/ul>
&lt;p>所以，要解决脏读现象，就要升级到「读提交」以上的隔离级别；要解决不可重复读现象，就要升级到「可重复读」的隔离级别，要解决幻读现象不建议将隔离级别升级到「串行化」。&lt;/p>
&lt;p>不同的数据库厂商对 SQL 标准中规定的 4 种隔离级别的支持不一样，有的数据库只实现了其中几种隔离级别，&lt;strong>我们讨论的 MySQL 虽然支持 4 种隔离级别，但是与SQL 标准中规定的各级隔离级别允许发生的现象却有些出入&lt;/strong>。&lt;/p>
&lt;p>MySQL 在「可重复读」隔离级别下，可以很大程度上避免幻读现象的发生（注意是很大程度避免，并不是彻底避免），所以 MySQL 并不会使用「串行化」隔离级别来避免幻读现象的发生，因为使用「串行化」隔离级别会影响性能。&lt;/p>
&lt;p>&lt;strong>MySQL InnoDB 引擎的默认隔离级别虽然是「可重复读」，但是它很大程度上避免幻读现象（并不是完全解决了&lt;/strong>。解决的方案有两种：&lt;/p>
&lt;ul>
&lt;li>针对&lt;strong>快照读&lt;/strong>（普通 select 语句），是&lt;strong>通过 MVCC 方式解决了幻读&lt;/strong>，因为可重复读隔离级别下，事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，即使中途有其他事务插入了一条数据，是查询不出来这条数据的，所以就很好了避免幻读问题。&lt;/li>
&lt;li>针对&lt;strong>当前读&lt;/strong>（select &amp;hellip; for update 等语句），是&lt;strong>通过 next-key lock（记录锁+间隙锁）方式解决了幻读&lt;/strong>，因为当执行 select &amp;hellip; for update 语句的时候，会加上 next-key lock，如果有其他事务在 next-key lock 锁范围内插入了一条记录，那么这个插入语句就会被阻塞，无法成功插入，所以就很好了避免幻读问题。&lt;/li>
&lt;/ul>
&lt;h3 id="隔离级别实现方式">隔离级别实现方式
&lt;/h3>&lt;ul>
&lt;li>对于「读未提交」隔离级别的事务来说，因为可以读到未提交事务修改的数据，所以直接读取最新的数据就好了；&lt;/li>
&lt;li>对于「串行化」隔离级别的事务来说，通过加读写锁的方式来避免并行访问；&lt;/li>
&lt;li>对于「读提交」和「可重复读」隔离级别的事务来说，它们是通过 &lt;strong>Read View 来实现的，它们的区别在于创建 Read View 的时机不同，大家可以把 Read View 理解成一个数据快照，就像相机拍照那样，定格某一时刻的风景。&lt;/strong>「读提交」隔离级别是在「每个语句执行前」都会重新生成一个 Read View，而「可重复读」隔离级别是「启动事务时」生成一个 Read View，然后整个事务期间都在用这个 Read View**。&lt;/li>
&lt;/ul>
&lt;h2 id="read-view">Read View
&lt;/h2>&lt;p>Read View 主要有以下两部分组成：&lt;/p>
&lt;ul>
&lt;li>Read View 中四个字段作用；&lt;/li>
&lt;li>聚簇索引记录中两个跟事务有关的隐藏列；&lt;/li>
&lt;/ul>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/readview%E7%BB%93%E6%9E%84.drawio.webp"
width="900"
height="437"
srcset="https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/readview%E7%BB%93%E6%9E%84.drawio_hu9031801013325448962.webp 480w, https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/readview%E7%BB%93%E6%9E%84.drawio_hu14455649638736036759.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="205"
data-flex-basis="494px"
>&lt;/p>
&lt;p>Read View 有四个重要的字段：&lt;/p>
&lt;ul>
&lt;li>m_ids ：指的是在创建 Read View 时，当前数据库中「活跃事务」的&lt;strong>事务 id 列表&lt;/strong>，注意是一个列表，&lt;strong>“活跃事务”指的就是，启动了但还没提交的事务&lt;/strong>。&lt;/li>
&lt;li>min_trx_id ：指的是在创建 Read View 时，当前数据库中「活跃事务」中事务 &lt;strong>id 最小的事务&lt;/strong>，也就是 m_ids 的最小值。&lt;/li>
&lt;li>max_trx_id ：这个并不是 m_ids 的最大值，而是&lt;strong>创建 Read View 时当前数据库中应该给下一个事务的 id 值&lt;/strong>，也就是全局事务中最大的事务 id 值 + 1；&lt;/li>
&lt;li>creator_trx_id ：指的是&lt;strong>创建该 Read View 的事务的事务 id&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;p>对于使用 InnoDB 存储引擎的数据库表，它的聚簇索引记录中都包含下面两个隐藏列：&lt;/p>
&lt;ul>
&lt;li>trx_id，当一个事务对某条聚簇索引记录进行改动时，就会&lt;strong>把该事务的事务 id 记录在 trx_id 隐藏列里&lt;/strong>；&lt;/li>
&lt;li>roll_pointer，每次对某条聚簇索引记录进行改动时，都会把旧版本的记录写入到 undo 日志中，然后&lt;strong>这个隐藏列是个指针，指向每一个旧版本记录&lt;/strong>，于是就可以通过它找到修改前的记录。&lt;/li>
&lt;li>row_id，行ID，唯一标识一条记录（如果定义主键，它就没有啦）&lt;/li>
&lt;/ul>
&lt;p>在创建 Read View 后，我们可以将记录中的 trx_id 划分这三种情况：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/ReadView.drawio.webp"
width="707"
height="332"
srcset="https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/ReadView.drawio_hu4707241512921782630.webp 480w, https://cyber-blog.github.io/p/mvcc%E6%80%BB%E7%BB%93/ReadView.drawio_hu12158190206219245288.webp 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="212"
data-flex-basis="511px"
>&lt;/p>
&lt;p>一个事务去访问记录的时候，除了自己的更新记录总是可见之外，还有这几种情况：&lt;/p>
&lt;ul>
&lt;li>如果记录的 trx_id 值小于 Read View 中的 &lt;code>min_trx_id&lt;/code> 值，表示这个版本的记录是在创建 Read View &lt;strong>前&lt;/strong>已经提交的事务生成的，所以该版本的记录对当前事务&lt;strong>可见&lt;/strong>。&lt;/li>
&lt;li>如果记录的 trx_id 值大于等于 Read View 中的 &lt;code>max_trx_id&lt;/code> 值，表示这个版本的记录是在创建 Read View &lt;strong>后&lt;/strong>才启动的事务生成的，所以该版本的记录对当前事务&lt;strong>不可见&lt;/strong>。&lt;/li>
&lt;li>如果记录的 trx_id 值在 Read View 的 &lt;code>min_trx_id&lt;/code> 和 &lt;code>max_trx_id&lt;/code> 之间，需要判断 trx_id 是否在 m_ids 列表中：
&lt;ul>
&lt;li>如果记录的 trx_id &lt;strong>在&lt;/strong> &lt;code>m_ids&lt;/code> 列表中，表示生成该版本记录的活跃事务依然活跃着（还没提交事务），所以该版本的记录对当前事务&lt;strong>不可见&lt;/strong>。&lt;/li>
&lt;li>如果记录的 trx_id &lt;strong>不在&lt;/strong> &lt;code>m_ids&lt;/code>列表中，表示生成该版本记录的活跃事务已经被提交，所以该版本的记录对当前事务&lt;strong>可见&lt;/strong>。&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>这种通过「版本链」来控制并发事务访问同一个记录时的行为就叫 MVCC（多版本并发控制）。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>对于可重复读&lt;/strong>
&lt;strong>可重复读隔离级别是启动事务时生成一个 Read View，然后整个事务期间都在用这个 Read View&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>对于读已提交&lt;/strong>
&lt;strong>读提交隔离级别是在每次读取数据时，都会生成一个新的 Read View&lt;/strong>。&lt;/p></description></item><item><title>MacOS自行编译JDK</title><link>https://cyber-blog.github.io/p/macos-compile-jdk/</link><pubDate>Thu, 01 Dec 2022 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/macos-compile-jdk/</guid><description>&lt;img src="https://cyber-blog.github.io/p/macos-compile-jdk/cover.png" alt="Featured image of post MacOS自行编译JDK" />&lt;p>M1 macOS Monterey 12.6 (21G115)
Xcode版本14.0.1&lt;/p>
&lt;p>JDK版本17&lt;/p>
&lt;ol>
&lt;li>
&lt;p>初始化配置&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">bash configure --enable-debug --with-jvm-variants&lt;span class="o">=&lt;/span>client,server --disable-warnings-as-errors
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>编译&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">make
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>遇到的坑
&lt;a class="link" href="https://bugs.openjdk.org/browse/JDK-8272700" target="_blank" rel="noopener"
>https://bugs.openjdk.org/browse/JDK-8272700&lt;/a>
&lt;a class="link" href="https://github.com/tarantool/tarantool/issues/6576" target="_blank" rel="noopener"
>https://github.com/tarantool/tarantool/issues/6576&lt;/a>
切换为jdk17u-dev之后的问题
&lt;a class="link" href="https://bugs.openjdk.org/browse/JDK-8283221" target="_blank" rel="noopener"
>https://bugs.openjdk.org/browse/JDK-8283221&lt;/a>&lt;/p>
&lt;p>详细配置和步骤参考&lt;a class="link" href="https://openjdk.org/groups/build/" target="_blank" rel="noopener"
>官网&lt;/a>&lt;/p>
&lt;p>Xcode版本过新参考&lt;/p>
&lt;blockquote>
&lt;p>Problems with the Build Environment
Make sure your configuration is correct. Re-run configure, and look for any warnings. Warnings that appear in the middle of the configure output is also repeated at the end, after the summary. The entire log is stored in $BUILD/configure.log.&lt;/p>
&lt;p>Verify that the summary at the end looks correct. Are you indeed using the Boot JDK and native toolchain that you expect?&lt;/p>
&lt;p>By default, the JDK has a strict approach where warnings from the compiler is considered errors which fail the build. For very new or very old compiler versions, this can trigger new classes of warnings, which thus fails the build. Run configure with &amp;ndash;disable-warnings-as-errors to turn of this behavior. (The warnings will still show, but not make the build fail.)&lt;/p>
&lt;/blockquote></description></item><item><title>JVM自动内存管理和垃圾回收</title><link>https://cyber-blog.github.io/p/jvm-gc/</link><pubDate>Thu, 24 Nov 2022 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/jvm-gc/</guid><description>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/cover.png" alt="Featured image of post JVM自动内存管理和垃圾回收" />&lt;p>Java 与 C++之间有一堵由内存动态分配和垃圾收集技术所围成的高墙，墙外面的人 想进去，墙里面的人却想出来。&lt;/p>
&lt;p>对于从事 C、C++程序开发的开发人员来说，在内存管理领域，他们既是拥有最高 权力的“皇帝”，又是从事最基础工作的劳动人民——既拥有每一个对象的“所有权”，又 担负着每一个对象生命从开始到终结的维护责任。&lt;/p>
&lt;p>对于 Java 程序员来说，在虚拟机自动内存管理机制的帮助下，不再需要为每一个 new 操作去写配对的 delete/free 代码，不容易出现内存泄漏和内存溢出问题，看起来由 虚拟机管理内存一切都很美好。不过，也正是因为 Java 程序员把控制内存的权力交给了 Java 虚拟机，一旦出现内存泄漏和溢出方面的问题，如果不了解虚拟机是怎样使用内存 的，那排查错误、修正问题将会成为一项异常艰难的工作。&lt;/p>
&lt;h2 id="java内存区域及相关异常">Java内存区域及相关异常
&lt;/h2>&lt;p>Java 虚拟机在执行 Java 程序的过程中会把它所管理的内存划分为若干个不同的数据 区域。这些区域有各自的用途，以及创建和销毁的时间，有的区域随着虚拟机 进程的启 动而一直存在，有些区域则是依赖用户线程的启动和结束而建立和销毁。根据《Java虚拟机规范》的规定，Java 虚拟机所管理的内存将会包括以下几个运行时数据区域，如图&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA.png"
width="537"
height="437"
srcset="https://cyber-blog.github.io/p/jvm-gc/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA_hu17737948876212090813.png 480w, https://cyber-blog.github.io/p/jvm-gc/%E8%BF%90%E8%A1%8C%E6%97%B6%E6%95%B0%E6%8D%AE%E5%8C%BA_hu5916409478959816616.png 1024w"
loading="lazy"
alt="企业微信截图_36d574f4-a689-4a83-8f5a-bb16cdb72165"
class="gallery-image"
data-flex-grow="122"
data-flex-basis="294px"
>&lt;/p>
&lt;h4 id="程序计数器">程序计数器
&lt;/h4>&lt;p>程序计数器（Program Counter Register）是一块较小的内存空间，它可以看作是当 前线程所执行的字节码的行号指示器。在 Java 虚拟机的概念模型里 ，字节码解释器工 作时就是通过改变这个计数器的值来选取下一条需要执行的字节码指令，它是程序控制流的指示器，分支、循环、跳转、异常处理、线程恢复等基础功能都需要依赖这个计数 器来完成。&lt;/p>
&lt;p>由于 Java 虚拟机的多线程是通过线程轮流切换、分配处理器执行时间的方式来实现的，在任何一个确定的时刻，一个处理器（对于多核处理器来说是一个内核）都只会执行一条线程中的指令。因此，为了线程切换后能恢复到正确的执行位置，每条线程都需 要有一个独立的程序计数器，各条线程之间计数器互不影响，独立存储，我们称这类内 存区域为“线程私有”的内存。&lt;/p>
&lt;p>如果线程正在执行的是一个 Java 方法，这个计数器记录的是正在执行的虚拟机字节码指令的地址；如果正在执行的是本地（Native）方法，这个计数器值则应为空（Undefined）。此内存区域是唯一一个在《Java虚拟机规范》中没有规定任何 OutOfMemoryError 情况的区域。&lt;/p>
&lt;h4 id="java虚拟机栈">Java虚拟机栈
&lt;/h4>&lt;p>与程序计数器一样，Java 虚拟机栈（Java Virtual Machine Stack）也是线程私有的， 它的生命周期与线程相同。虚拟机栈描述的是 Java 方法执行的线程内存模型：每个方法被执行的时候，Java 虚拟机都会同步创建一个&lt;strong>栈帧（Stack Frame）用于存储局部变量表、操作数栈、动态连接、方法出口等信息&lt;/strong>。每一个方法被调用直至执行完毕的过程， 就对应着一个栈帧在虚拟机栈中从入栈到出栈的过程。也就是说， &lt;strong>栈帧随着方法调用而创建，随着方法结束而销毁。无论方法正常完成还是异常完成都算作方法结束。&lt;/strong>&lt;/p>
&lt;p>经常有人把 Java 内存区域笼统地划分为堆内存（Heap）和栈内存（Stack），虽然这种在 Java 语言里就显得有些粗糙了，实际的内存区域划分要比这更复杂。不过这种划分方式的流行也间接说明了程序员最关注的、与对象内存分配关系最密切的区域是“堆”和“栈”两块。其中，“堆”在稍后会讲述，而“栈”通常就是指这里讲的虚拟机栈，或者更多的情况下只是指虚拟机栈中局部变量表部分。&lt;/p>
&lt;p>&lt;strong>局部变量表存放了编译期可知的各种 Java 虚拟机基本数据类型（&lt;code>boolean&lt;/code>、&lt;code>byte&lt;/code>、 &lt;code>char&lt;/code>、&lt;code>short&lt;/code>、&lt;code>int&lt;/code>、 &lt;code>float&lt;/code>、&lt;code>long&lt;/code>、&lt;code>double&lt;/code>）、对象引用（&lt;code>reference&lt;/code> 类型，它并不等同于对象 本身，可能是一个指向对象起始地址的引用指针，也可能是指向一个代表对象的句柄或者其他与此对象相关的位置）和 &lt;code>returnAddress&lt;/code>类型&lt;/strong>（指向了一条字节码指令的地址）。&lt;/p>
&lt;p>这些数据类型在局部变量表中的存储空间以局部变量槽（Slot）来表示，其中 64 位 长度的 long 和 double 类型的数据会占用两个变量槽，其余的数据类型只占用一个。局 部变量表所需的内存空间在编译期间完成分配，当进入一个方法时，这个方法需要在栈帧中分配多大的局部变量空间是完全确定的，在方法运行期间不会改变局部变量表的变量槽数量。请注意，实际上虚拟机真正使用多大的内存空间 （譬如按照 1 个变量槽占用 32 个比特、64 个比特，或者更多）来实现一个变量槽，这是完全由具体的虚拟机实现自行决定，不同的虚拟机或不同虚拟机版本都有可能不一致（也可通过&lt;code>-Xss&lt;/code>参数手动设置）。&lt;/p>
&lt;p>在《Java虚拟机规范》中，对这个内存区域规定了两类异常状况：如果线程请求的栈深度大于虚拟机所允许的深度，将抛出 &lt;code>StackOverflowError&lt;/code> 异常；当线程无法申请到足够的栈空间会抛出&lt;code>OutOfMemoryError&lt;/code> 异常。&lt;/p>
&lt;h4 id="本地方法栈">本地方法栈
&lt;/h4>&lt;p>本地方法栈（Native Method Stacks）与虚拟机栈所发挥的作用是非常相似的，其&lt;strong>区别只是虚拟机栈为虚拟机执行 Java 方法（也就是字节码）服务，而本地方法栈则是为虚拟机使用到的本地（Native）方法服务&lt;/strong>。&lt;/p>
&lt;p>本地方法被执行的时候，在本地方法栈也会创建一个栈帧，用于存放该本地方法的局部变量表、操作数栈、动态链接、出口信息。&lt;/p>
&lt;p>与虚拟机栈一样，本地方法栈也会在栈深度溢出或者栈扩展失败时分别抛出 &lt;code>StackOverflowError&lt;/code> 和 &lt;code>OutOfMemoryError&lt;/code> 异常。&lt;/p>
&lt;h4 id="java-堆">Java 堆
&lt;/h4>&lt;p>对于 Java 应用程序来说，Java 堆（Java Heap）是虚拟机所管理的内存中最大的一块。Java 堆是被所有线程共享的一块内存区域，在虚拟机启动时创建。&lt;strong>此内存区域的唯 一目的就是存放对象实例&lt;/strong>，Java 世界里“几乎”所有的对象实例都在这里分配内存。在 《Java 虚拟机规范》中对 Java 堆的描述是：“所有的对象实例以及数组都应当在堆上分配”。&lt;/p>
&lt;p>Java 堆是垃圾收集器管理的内存区域，因此一些资料中它也被称作“GC 堆” （Garbage Collected Heap）。&lt;/p>
&lt;p>在 JDK 7 版本及 JDK 7 版本之前，堆内存被通常分为下面三部分&lt;/p>
&lt;ol>
&lt;li>新生代内存(Young Generation)&lt;/li>
&lt;li>老生代(Old Generation)&lt;/li>
&lt;li>永久代(Permanent Generation)&lt;/li>
&lt;/ol>
&lt;p>下图所示的 Eden 区、两个 Survivor 区 S0 和 S1 都属于新生代，中间一层属于老年代，最下面一层属于永久代。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/hotspot-heap-structure.png"
width="871"
height="415"
srcset="https://cyber-blog.github.io/p/jvm-gc/hotspot-heap-structure_hu17137517858372991979.png 480w, https://cyber-blog.github.io/p/jvm-gc/hotspot-heap-structure_hu4299545695031397653.png 1024w"
loading="lazy"
alt="hotspot-heap-structure"
class="gallery-image"
data-flex-grow="209"
data-flex-basis="503px"
>&lt;/p>
&lt;p>&lt;strong>JDK 8 版本之后 PermGen(永久) 已被 Metaspace(元空间) 取代，元空间使用的是直接内存&lt;/strong>&lt;/p>
&lt;p>大部分情况，对象都会首先在 Eden 区域分配，在一次新生代垃圾回收后，如果对象还存活，则会进入 S0 或者 S1，并且对象的年龄还会加 1(Eden 区-&amp;gt;Survivor 区后对象的初始年龄变为 1)，当它的年龄增加到一定程度（默认为 15 岁），就会被晋升到老年代中。对象晋升到老年代的年龄阈值，可以通过参数 &lt;code>-XX:MaxTenuringThreshold&lt;/code> 来设置。&lt;/p>
&lt;blockquote>
&lt;p>在十年之前（以 G1 收集器的出现为分界），作为业界绝对主 流的 HotSpot 虚拟机，它内部的垃圾收集器全部都基于“经典分代”来设计，需要新生代、老年代收集器搭配才能工作，在这种背景下，上述说法还算是不会产生太大歧义。 但是到了今天，垃圾收集器技术与十年前已不可同日而语，HotSpot 里面也出现了不采用分代设计的新垃圾收集器，再按照上面的提法就有很多需要商榷的地方了。&lt;/p>
&lt;/blockquote>
&lt;p>堆这里最容易出现的就是 &lt;code>OutOfMemoryError&lt;/code> 错误，并且出现这种错误之后的表现形式还会有几种，比如：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>&lt;code>java.lang.OutOfMemoryError: GC Overhead Limit Exceeded&lt;/code>&lt;/strong> ： 当 JVM 花太多时间执行垃圾回收并且只能回收很少的堆空间时，就会发生此错误。&lt;/li>
&lt;li>&lt;strong>&lt;code>java.lang.OutOfMemoryError: Java heap space&lt;/code>&lt;/strong> :假如在创建新的对象时, 堆内存中的空间不足以存放新创建的对象, 就会引发此错误。(和配置的最大堆内存有关，且受制于物理内存大小。最大堆内存可通过&lt;code>-Xmx&lt;/code>参数配置，若没有特别配置，将会使用默认值，详见：&lt;a class="link" href="https://stackoverflow.com/questions/28272923/default-xmxsize-in-java-8-max-heap-size" target="_blank" rel="noopener"
>Default Java 8 max heap sizeopen in new window&lt;/a>)&lt;/li>
&lt;/ol>
&lt;h4 id="方法区">方法区
&lt;/h4>&lt;p>方法区（Method Area）与 Java 堆一样，属于是 JVM 运行时数据区域的一块逻辑区域，是各个线程共享的内存区域。&lt;/p>
&lt;p>虽然《Java 虚拟机规范》中把方法区描述为堆的一个逻辑部分，但是它却有一个别名叫作“非堆”（Non-Heap），目的是与 Java 堆区分开来。&lt;/p>
&lt;p>《Java 虚拟机规范》只是规定了有方法区这么个概念和它的作用，方法区到底要如何实现那就是虚拟机自己要考虑的事情了。也就是说，在不同的虚拟机实现上，方法区的实现是不同的。&lt;/p>
&lt;p>当虚拟机要使用一个类时，它需要读取并解析 Class 文件获取相关信息，再将信息存入到方法区。方法区会存储已被虚拟机加载的 &lt;strong>类信息、字段信息、方法信息、常量、静态变量、即时编译器编译后的代码缓存等数据&lt;/strong>。&lt;/p>
&lt;p>说到方法区，不得不提一下“永久代”这个概念，尤其是在 JDK 8 以前，许多 Java 程序员都习惯在 HotSpot 虚拟机上开发、部署程序，很多人都更愿意把方法区称呼为“永久 代”（Permanent Generation），或将两者混为一谈。本质上这两者并不是等价的，因为仅 仅是当时的 HotSpot 虚拟机设计团队选择把收集器的分代设计扩展至方法区，或者说使 用永久代来实现方法区而已，这样使得 HotSpot 的垃圾收集器能够像管理 Java 堆一样管 理这部分内存，省去专门为方法区编写内存管理代码的工作。但是对于其他虚拟机实 现，譬如 BEA JRockit、IBM J9 等来说，是不存在永久代的概念的。原则上如何实现方 法区属于虚拟机实现细节，不受《Java 虚拟机规范》管束，并不要求统一。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/method-area-implementation.png"
width="522"
height="241"
srcset="https://cyber-blog.github.io/p/jvm-gc/method-area-implementation_hu10537174668298361964.png 480w, https://cyber-blog.github.io/p/jvm-gc/method-area-implementation_hu16144775523291582240.png 1024w"
loading="lazy"
alt="HotSpot 虚拟机方法区的两种实现"
class="gallery-image"
data-flex-grow="216"
data-flex-basis="519px"
>&lt;/p>
&lt;p>但现在回头来看，当年使用永久代来实现方法区的决定并不是一个好主意。&lt;/p>
&lt;ol>
&lt;li>这种设计导致了 Java 应 用更容易遇到内存溢出的问题（永久代有-XX：MaxPermSize 的上限，即使不设置也有 默认大小，而 J9 和 JRockit 只要没有触碰到进程可用内存的上限，例如 32 位系统中的 4GB 限制，就不会出问题）。&lt;/li>
&lt;li>当 Oracle 收购 BEA 获得了 JRockit （JRockit 从来没有一个叫永久代的东西）的所有权后， 准备把 JRockit 中的优秀功能，譬如 Java Mission Control 管理工具，移植到 HotSpot 虚拟机时，但因为两者对方法区实现的差异导致两者的代码合并起来较为困难。&lt;/li>
&lt;li>考虑到 HotSpot 未来的发 展，在 JDK 6 的时候 HotSpot 开发团队就有放弃永久代，逐步改为采用本地内存 （Native Memory）来实现方法区的计划了(&lt;a class="link" href="http://openjdk.java.net/jeps/122" target="_blank" rel="noopener"
>JEP 122-Remove the Permanent Generation&lt;/a>) ，到了 JDK 7 的 HotSpot，已经把原本放在 永久代的字符串常量池、静态变量等移出，而到了 JDK 8，终于完全废弃了永久代的概念，改用与 JRockit、J9 一样在本地内存中实现的元空间（Metaspace）来代替，把 JDK 7 中永久代还剩余的内容（主要是类型信息）全部移到元空间中。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>造成以上问题的原因是&lt;/strong>：&lt;/p>
&lt;p>《Java 虚拟机规范》对方法区的约束是非常宽松的，除了和 Java 堆一样不需要连续 的内存和可以选择固定大小或者可扩展外，甚至还可以选择不实现垃圾收集。相对而言，垃圾收集行为在这个区域的确是比较少出现的，但并非数据进入了方法区就如永久代的名字一样“永久”存在了。这区域的内存回收目标主要是针对常量池的回收和对类型的卸载，一般来说这个区域的回收效果比较难令人满意，尤其是类型的卸载，条件相当苛刻，但是这部分区域的回收有时又确实是必要的。以前 Sun 公司的 Bug 列表中，曾出现过的若干个严重的 Bug 就是由于低版本的 HotSpot 虚拟机对此区域未完全回收而导致内存泄漏。&lt;/p>
&lt;p>&lt;strong>方法区常用参数有哪些？&lt;/strong>&lt;/p>
&lt;p>JDK 1.8 之前永久代还没被彻底移除的时候通常通过下面这些参数来调节方法区大小。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="n">XX&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">PermSize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//方法区 (永久代) 初始大小&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">XX&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">MaxPermSize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//方法区 (永久代) 最大大小,超过这个值将会抛出 OutOfMemoryError 异常:java.lang.OutOfMemoryError: PermGen&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>相对而言，垃圾收集行为在这个区域是比较少出现的，但并非数据进入方法区后就“永久存在”了。&lt;/p>
&lt;p>JDK 1.8 的时候，方法区（HotSpot 的永久代）被彻底移除了，取而代之是元空间，元空间使用的是直接内存。下面是一些常用参数：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="o">-&lt;/span>&lt;span class="n">XX&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">MetaspaceSize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//设置 Metaspace 的初始（和最小大小）&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">XX&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">MaxMetaspaceSize&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">N&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c1">//设置 Metaspace 的最大大小&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>与永久代很大的不同就是，如果不指定大小的话，随着更多类的创建，虚拟机会耗尽所有可用的系统内存。&lt;/p>
&lt;p>根据《Java 虚拟机规范》的规定，如果方法区无法满足新的内存分配需求时，将抛出 OutOfMemoryError 异常。&lt;/p>
&lt;h4 id="运行时常量池">运行时常量池
&lt;/h4>&lt;p>运行时常量池（Runtime Constant Pool）是方法区的一部分。&lt;/p>
&lt;p>Class 文件中除了有类的版本、字段、方法、接口等描述信息外，还有用于存放编译期生成的各种字面量（Literal）和符号引用（Symbolic Reference）的&lt;strong>常量池表(Constant Pool Table)&lt;/strong>，这部分内容将在类加载后存放到方法区的运行时常量池中。&lt;/p>
&lt;p>字面量是源代码中的固定值的表示法，即通过字面我们就能知道其值的含义。字面量包括整数、浮点数和字符串字面量，符号引用包括类符号引用、字段符号引用、方法符号引用和接口方法符号引用。&lt;/p>
&lt;p>既然运行时常量池是方法区的一部分，自然受到方法区内存的限制，当常量池无法再申请到内存时会抛出 &lt;code>OutOfMemoryError&lt;/code> 异常。&lt;/p>
&lt;h4 id="字符串常量池">字符串常量池
&lt;/h4>&lt;p>&lt;strong>字符串常量池&lt;/strong> 是 JVM 为了提升性能和减少内存消耗针对字符串（String 类）专门开辟的一块区域，主要目的是为了避免字符串的重复创建。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 在堆中创建字符串对象”ab“&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 将字符串对象”ab“的引用保存在字符串常量池中&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">aa&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ab&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 直接返回字符串常量池中字符串对象”ab“的引用&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bb&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;ab&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">aa&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="n">bb&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="c1">// true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>HotSpot 虚拟机中字符串常量池的实现是 &lt;code>src/hotspot/share/classfile/stringTable.cpp&lt;/code> ,&lt;code>StringTable&lt;/code> 本质上就是一个&lt;code>HashSet&amp;lt;String&amp;gt;&lt;/code> ,容量为 &lt;code>StringTableSize&lt;/code>（可以通过 &lt;code>-XX:StringTableSize&lt;/code> 参数来设置）。&lt;/p>
&lt;p>&lt;strong>&lt;code>StringTable&lt;/code> 中保存的是字符串对象的引用，字符串对象的引用指向堆中的字符串对象。&lt;/strong>&lt;/p>
&lt;p>JDK1.7 之前，字符串常量池存放在永久代。JDK1.7 字符串常量池和静态变量从永久代移动了 Java 堆中。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.6.png"
width="751"
height="491"
srcset="https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.6_hu10068178214214736040.png 480w, https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.6_hu5631155658110574559.png 1024w"
loading="lazy"
alt="method-area-jdk1.7"
class="gallery-image"
data-flex-grow="152"
data-flex-basis="367px"
>&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.7.png"
width="751"
height="411"
srcset="https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.7_hu9515209095007396169.png 480w, https://cyber-blog.github.io/p/jvm-gc/method-area-jdk1.7_hu4541549841776974281.png 1024w"
loading="lazy"
alt="method-area-jdk1.7"
class="gallery-image"
data-flex-grow="182"
data-flex-basis="438px"
>&lt;/p>
&lt;p>&lt;strong>JDK 1.7 为什么要将字符串常量池移动到堆中？&lt;/strong>&lt;/p>
&lt;p>主要是因为永久代（方法区实现）的 GC 回收效率太低，只有在整堆收集 (Full GC)的时候才会被执行 GC。Java 程序中通常会有大量的被创建的字符串等待回收，将字符串常量池放到堆中，能够更高效及时地回收字符串内存。&lt;/p>
&lt;p>相关问题：&lt;a class="link" href="https://www.zhihu.com/question/57109429/answer/151717241" target="_blank" rel="noopener"
>JVM 常量池中存储的是对象还是引用呢？ - RednaxelaFX - 知乎open in new window&lt;/a>&lt;/p>
&lt;p>最后再来分享一段周志明老师在&lt;a class="link" href="https://github.com/fenixsoft/jvm_book" target="_blank" rel="noopener"
>《深入理解 Java 虚拟机（第 3 版）》样例代码&amp;amp;勘误open in new window&lt;/a> Github 仓库的 &lt;a class="link" href="https://github.com/fenixsoft/jvm_book/issues/112" target="_blank" rel="noopener"
>issue#112open in new window&lt;/a> 中说过的话：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>运行时常量池、方法区、字符串常量池这些都是不随虚拟机实现而改变的逻辑概念，是公共且抽象的，Metaspace、Heap 是与具体某种虚拟机实现相关的物理概念，是私有且具体的。&lt;/strong>&lt;/p>
&lt;/blockquote>
&lt;h4 id="直接内存">直接内存
&lt;/h4>&lt;p>直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是《Java 虚 拟机规范》中定义的内存区域。但是这部分内存也被频繁地使用，而且也可能导致 OutOfMemoryError 异常出现，&lt;/p>
&lt;p>JDK1.4 中新加入的 &lt;strong>NIO(New Input/Output) 类&lt;/strong>，引入了一种基于&lt;strong>通道（Channel）与缓存区（Buffer）&lt;strong>的 I/O 方式，它可以直接使用 Native 函数库直接分配堆外内存，然后通过一个存储在 Java 堆中的 DirectByteBuffer 对象作为这块内存的引用进行操作。这样就能在一些场景中显著提高性能，因为&lt;/strong>避免了在 Java 堆和 Native 堆之间来回复制数据&lt;/strong>。&lt;/p>
&lt;p>本机直接内存的分配不会受到 Java 堆的限制，但是，既然是内存就会受到本机总内存大小以及处理器寻址空间的限制。&lt;/p>
&lt;h2 id="hotspot-虚拟机对象探秘">HotSpot 虚拟机对象探秘
&lt;/h2>&lt;p>通过上面的介绍我们大概知道了虚拟机的内存情况，下面我们来详细的了解一下 HotSpot 虚拟机在 Java 堆中对象分配、布局和访问的全过程。&lt;/p>
&lt;h3 id="对象的创建">对象的创建
&lt;/h3>&lt;p>Java 对象的创建过程我建议最好是能默写出来，并且要掌握每一步在做什么。&lt;/p>
&lt;h5 id="step1类加载检查">Step1:类加载检查
&lt;/h5>&lt;p>虚拟机遇到一条 new 指令时，首先将去检查这个指令的参数是否能在常量池中定位到这个类的符号引用，并且检查这个符号引用代表的类是否已被加载过、解析和初始化过。如果没有，那必须先执行相应的类加载过程。&lt;/p>
&lt;h5 id="step2分配内存">Step2:分配内存
&lt;/h5>&lt;p>在&lt;strong>类加载检查&lt;/strong>通过后，接下来虚拟机将为新生对象&lt;strong>分配内存&lt;/strong>。对象所需的内存大小在类加载完成后便可确定，为对象分配空间的任务等同于把一块确定大小的内存从 Java 堆中划分出来。&lt;strong>分配方式&lt;/strong>有 &lt;strong>“指针碰撞”&lt;/strong> 和 &lt;strong>“空闲列表”&lt;/strong> 两种，&lt;strong>选择哪种分配方式由 Java 堆是否规整决定，而 Java 堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定（压缩功能取决于收集算法是&amp;quot;标记-清除&amp;quot;，还是&amp;quot;标记-整理&amp;quot;，值得注意的是，复制算法内存也是规整的）&lt;/strong>。&lt;/p>
&lt;p>&lt;strong>内存分配的两种方式&lt;/strong> （补充内容，需要掌握）：&lt;/p>
&lt;ul>
&lt;li>指针碰撞 ：
&lt;ul>
&lt;li>适用场合 ：堆内存规整（即没有内存碎片）的情况下。&lt;/li>
&lt;li>原理 ：用过的内存全部整合到一边，没有用过的内存放在另一边，中间有一个分界指针，只需要向着没用过的内存方向将该指针移动对象内存大小位置即可。&lt;/li>
&lt;li>使用该分配方式的 GC 收集器：Serial, ParNew&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>空闲列表 ：
&lt;ul>
&lt;li>适用场合 ： 堆内存不规整的情况下。&lt;/li>
&lt;li>原理 ：虚拟机会维护一个列表，该列表中会记录哪些内存块是可用的，在分配的时候，找一块儿足够大的内存块儿来划分给对象实例，最后更新列表记录。&lt;/li>
&lt;li>使用该分配方式的 GC 收集器：CMS&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>内存分配并发问题&lt;/strong>&lt;/p>
&lt;p>在创建对象的时候有一个很重要的问题，就是线程安全，因为在实际开发过程中，创建对象是很频繁的事情，即使仅仅修改一个指针所指向的位置，在并发情况下也并不是线程安 全的，可能出现正在给对象 A 分配内存，指针还没来得及修改，对象 B 又同时使用了 原来的指针来分配内存的情况，作为虚拟机来说，必须要保证线程是安全的，通常来讲，虚拟机采用两种方式来保证线程安全：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>CAS+失败重试：&lt;/strong> CAS 是乐观锁的一种实现方式。所谓乐观锁就是，每次不加锁而是假设没有冲突而去完成某项操作，如果因为冲突失败就重试，直到成功为止。&lt;strong>虚拟机采用 CAS 配上失败重试的方式保证更新操作的原子性。&lt;/strong>&lt;/li>
&lt;li>&lt;strong>TLAB：&lt;/strong> 为每一个线程预先在 Eden 区分配一块儿内存，JVM 在给线程中的对象分配内存时，首先在 TLAB 分配，当对象大于 TLAB 中的剩余内存或 TLAB 的内存已用尽时，再采用上述的 CAS 进行内存分配（虚拟机是否使用 TLAB，可以通过&lt;code>XX：+/-UseTLAB&lt;/code> 参数来设定）&lt;/li>
&lt;/ul>
&lt;h5 id="step3初始化零值">Step3:初始化零值
&lt;/h5>&lt;p>内存分配完成后，虚拟机需要将分配到的内存空间都初始化为零值（不包括对象头），这一步操作保证了对象的实例字段在 Java 代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。&lt;/p>
&lt;h5 id="step4设置对象头">Step4:设置对象头
&lt;/h5>&lt;p>初始化零值完成之后，&lt;strong>虚拟机要对对象进行必要的设置&lt;/strong>，例如这个对象是哪个类的实例、如何才能找到类的元数据信息、对象的哈希码、对象的 GC 分代年龄等信息。 &lt;strong>这些信息存放在对象头中。&lt;/strong> 另外，根据虚拟机当前运行状态的不同，如是否启用偏向锁等，对象头会有不同的设置方式。&lt;/p>
&lt;h5 id="step5执行-init-方法">Step5:执行 init 方法
&lt;/h5>&lt;p>在上面工作都完成之后，从虚拟机的视角来看，一个新的对象已经产生了，但从 Java 程序的视角来看，对象创建才刚开始，&lt;code>&amp;lt;init&amp;gt;&lt;/code> 方法还没有执行，所有的字段都还为零。所以一般来说，执行 new 指令之后会接着执行 &lt;code>&amp;lt;init&amp;gt;&lt;/code> 方法，把对象按照程序员的意愿进行初始化，这样一个真正可用的对象才算完全产生出来。&lt;/p>
&lt;h3 id="对象的内存布局">对象的内存布局
&lt;/h3>&lt;p>在 HotSpot 虚拟机里，对象在堆内存中的存储布局可以划分为三个部分：对象头 （Header）、实例数据（Instance Data）和对齐填充（Padding）。&lt;/p>
&lt;p>&lt;strong>对象头 （Header）&lt;/strong>&lt;/p>
&lt;p>HotSpot 虚拟机对象的对象头部分包括两类信息。&lt;/p>
&lt;ol>
&lt;li>用于存储对象自身的运 行时数据，如哈希码（HashCode）、GC 分代年龄、锁状态标志、线程持有的锁、偏向 线程 ID、偏向时间戳等，这部分数据的长度在 32 位和 64 位的虚拟机（未开启压缩指针）中分别为 32 个比特和 64 个比特，官方称它为“Mark Word”。在 32 位的 HotSpot 虚拟机中，如对象未 被同步锁锁定的状态下，Mark Word 的 32 个比特存储空间中的 25 个比特用于存储对象 哈希码，4 个比特用于存储对象分代年龄，2 个比特用于存储锁标志位，1 个比特固定为 0。&lt;/li>
&lt;li>对象头的另外一部分是类型指针，即对象指向它的类型元数据的指针，Java 虚拟机通过这个指针来确定该对象是哪个类的实例。此外，如果对象是一个 Java 数组，那在对象头中还必须有一 块用于记录数组长度的数据，因为虚拟机可以通过普通 Java 对象的元数据信息确定 Java 对象的大小，但是如果数组的长度是不确定的，将无法通过元数据中的信息推断出数组的大小。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>实例数据（Instance Data）&lt;/strong>&lt;/p>
&lt;p>&lt;strong>实例数据部分是对象真正存储的有效信息&lt;/strong>，也是在程序中所定义的各种类型的字段内容。&lt;/p>
&lt;p>HotSpot 虚拟机默认的分配顺序为 longs/doubles、ints、shorts/chars、 bytes/booleans、oops（Ordinary Object Pointers，OOPs），从以上默认的分配策略中可以 看到，相同宽度的字段总是被分配到一起存放，在满足这个前提条件的情况下，在父类 中定义的变量会出现在子类之前。如果 HotSpot 虚拟机的+XX：CompactFields 参数值为 true（默认就为 true），那子类之中较窄的变量也允许插入父类变量的空隙之中，以节省出一点点空间。&lt;/p>
&lt;p>&lt;strong>对齐填充（Padding）&lt;/strong>&lt;/p>
&lt;p>&lt;strong>这部分不是必然存在的，也没有什么特别的含义，仅仅起占位作用。&lt;/strong> 因为 Hotspot 虚拟机的自动内存管理系统要求对象起始地址必须是 8 字节的整数倍，换句话说就是对象的大小必须是 8 字节的整数倍。而对象头部分正好是 8 字节的倍数（1 倍或 2 倍），因此，当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。&lt;/p>
&lt;h3 id="对象的访问定位">对象的访问定位
&lt;/h3>&lt;p>创建对象自然是为了后续使用该对象。由于 reference 类型在《Java 虚拟机规范》里面只规定了它是 一个指向对象的引用，并没有定义这个引用应该通过什么方式去定位、访问到堆中对象 的具体位置，所以对象访问方式也是由虚拟机实现而定的，主流的访问方式主要有两种：&lt;strong>使用句柄&lt;/strong>、&lt;strong>直接指针&lt;/strong>。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>句柄&lt;/p>
&lt;p>如果使用句柄的话，那么 Java 堆中将会划分出一块内存来作为句柄池，reference 中存储的就是对象的句柄地址，而句柄中包含了对象实例数据与对象类型数据各自的具体地址信息&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle.png"
width="761"
height="491"
srcset="https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle_hu7525033304901205049.png 480w, https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle_hu8148368361119128895.png 1024w"
loading="lazy"
alt="对象的访问定位-使用句柄"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>直接指针&lt;/p>
&lt;p>如果使用直接指针访问，reference 中存储的直接就是对象的地址。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle-direct-pointer.png"
width="761"
height="491"
srcset="https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle-direct-pointer_hu5742003125535822660.png 480w, https://cyber-blog.github.io/p/jvm-gc/access-location-of-object-handle-direct-pointer_hu17489681019770444546.png 1024w"
loading="lazy"
alt="access-location-of-object-handle-direct-pointer"
class="gallery-image"
data-flex-grow="154"
data-flex-basis="371px"
>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>这两种对象访问方式各有优势，使用句柄来访问的最大好处就是 reference 中存储的 是稳定句柄地址，在对象被移动（垃圾收集时移动对象是非常普遍的行为）时只会改变 句柄中的实例数据指针，而 reference 本身不需要被修改。&lt;/p>
&lt;p>使用直接指针来访问最大的好处就是速度更快，它节省了一次指针定位的时间开销，由于对象访问在 Java 中非常频繁，因此这类开销积少成多也是一项极为可观的执行成本，就 HotSpot 虚拟机而言，它主要使用第二种方式进行对象访问，但从整个软件开发的范围来看，在各种语言、框架中使用句柄来访问的情 况也十分常见。&lt;/p>
&lt;h2 id="实战outofmemoryerror-异常">实战：OutOfMemoryError 异常
&lt;/h2>&lt;p>在《Java 虚拟机规范》的规定里，除了程序计数器外，虚拟机内存的其他几个运行 时区域都有发生 OutOfMemoryError（下文称 OOM）异常的可能，接下来将通过若干实例 来验证异常实际发生的代码场景，并且将初步介绍若干最基本的与自动内存管理子系统相关的 HotSpot 虚拟机参数。&lt;/p>
&lt;h3 id="堆溢出">堆溢出
&lt;/h3>&lt;p>Java 堆用于储存对象实例，我们只要不断地创建对象，并且保证 GC Roots 到对象 之间有可达路径来避免垃圾回收机制清除这些对象，那么随着对象数量的增加，总容量 触及最大堆的容量限制后就会产生内存溢出异常。&lt;/p>
&lt;p>以下代码中限制 Java 堆的大小为 20MB，不可扩展（将堆的最小值&lt;code>-Xms&lt;/code> 参数 与最大值&lt;code>-Xmx&lt;/code> 参数设置为一样即可避免堆自动扩展），通过参数 &lt;code>-XX:+HeapDumpOnOutOf-MemoryError&lt;/code> 可以让虚拟机在出现内存溢出异常的时候 Dump 出当前的内存堆转储快照以便进行事后分析 。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：-Xms20m -Xmx20m -XX:+HeapDumpOnOutOfMemoryError *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">HeapOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">OOMObject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">OOMObject&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ArrayList&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">OOMObject&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">list&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">OOMObject&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行结果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">OutOfMemoryError&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Java&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">heap&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Dumping&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">heap&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java_pid38436&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hprof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Heap&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">created&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">27710387&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">093&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secs&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Java 堆内存的 OutOfMemoryError 异常是实际应用中最常见的内存溢出异常情况。 出现 Java 堆内存溢出时，异常堆栈信息“java.lang.OutOfMemoryError”会跟随进一步提示 “Java heap space”。&lt;/p>
&lt;p>要解决这个内存区域的异常，常规的处理方法是首先通过内存映像分析工具（如 Eclipse Memory Analyzer）对 Dump 出来的堆转储快照进行分析。第一步首先应确认内 存中导致 OOM 的对象是否是必要的，也就是要先分清楚到底是出现了内存泄漏 （Memory Leak）还是内存溢出（Memory Overflow）。&lt;/p>
&lt;p>如果是内存泄漏，可进一步通过工具查看泄漏对象到 GC Roots 的引用链，找到泄 漏对象是通过怎样的引用路径、与哪些 GC Roots 相关联，才导致垃圾收集器无法回收 它们，根据泄漏对象的类型信息以及它到 GC Roots 引用链的信息，一般可以比较准确 地定位到这些对象创建的位置，进而找出产生内存泄漏的代码的具体位置。&lt;/p>
&lt;p>如果不是内存泄漏，换句话说就是内存中的对象确实都是必须存活的，那就应当检 查 Java 虚拟机的堆参数（&lt;code>-Xmx&lt;/code> 与&lt;code>-Xms&lt;/code>）设置，与机器的内存对比，看看是否还有向上调整的空间。再从代码上检查是否存在某些对象生命周期过长、持有状态时间过长、存储结构设计不合理等情况，尽量减少程序运行期的内存消耗。&lt;/p>
&lt;h3 id="虚拟机栈和本地方法栈溢出">虚拟机栈和本地方法栈溢出
&lt;/h3>&lt;p>《Java 虚拟机规范》明确允许 Java 虚拟机实现自行选择是否支持栈的动态扩展，而 HotSpot 虚拟机的选择是不支持扩展，因此对于 HotSpot 来说，&lt;code>-Xoss&lt;/code> 参数（设置本地方法栈大小）虽然存在，但实际上是没有任何效果的，栈容量只能由 &lt;code>-Xss&lt;/code> 参数来设定。&lt;/p>
&lt;p>关于虚拟机栈和本地方法栈。在《Java 虚拟机规范》中描述了两种异常&lt;/p>
&lt;ol>
&lt;li>如果线程请求的栈深度大于虚拟机所允许的最大深度，将抛出 &lt;code>StackOverflowError&lt;/code> 异常。&lt;/li>
&lt;li>如果虚拟机的栈内存允许动态扩展，当扩展栈容量无法申请到足够的内存时， 将抛出 &lt;code>OutOfMemoryError&lt;/code> 异常。&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>HotSpot虚拟机是不支持扩展&lt;/strong>，所以除非在创建线程申请内存时就因无法获得足够内存而出现 &lt;code>OutOfMemoryError&lt;/code> 异常，否则在线程运行时是不会因为扩展而导致内存溢出的，只会因为栈容量无法容纳新的栈帧而导致 &lt;code>StackOverflowError&lt;/code> 异常。&lt;/p>
&lt;p>为了验证这点，我们可以做两个实验，先将实验范围限制在单线程中操作。&lt;/p>
&lt;p>尝试下面两种行为是否能让 HotSpot 虚拟机产生 &lt;code>OutOfMemoryError&lt;/code> 异常：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>使用&lt;code>-Xss&lt;/code>参数减少 栈内存容量&lt;/strong>&lt;/p>
&lt;p>&lt;strong>结果&lt;/strong>：抛出 &lt;code>StackOverflowError&lt;/code> 异常，异常出现时输出的堆栈深度相应缩小。&lt;/p>
&lt;p>首先，对第一种情况进行测试，具体如代码如下所示。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：-Xss128k * * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JavaVMStackSOF1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stackLength&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">stackLeak&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">stackLength&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">stackLeak&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oom&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLeak&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;stack length:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLength&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>运行结果&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">10830&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">StackOverflowError&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLeak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">12&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLeak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLeak&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">13&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>对于不同版本的 Java 虚拟机和不同的操作系统，&lt;strong>栈容量最小值会有所限制&lt;/strong>，这主要取决于操作系统内存分页大小。譬如上述方法中的参数&lt;code>-Xss128k&lt;/code> 可以正常用于 32 位 Windows 系统下的 JDK 6，但是如果用于 64 位 Windows 系统下的 JDK 11，则会提示 栈容量最小不能低于 180K，而在 Linux 下这个值则可能是 228K，如果低于这个最小限 制，HotSpot 虚拟器启动时会给出如下提示：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">The&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stack&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">size&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">specified&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">is&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">too&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">small&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Specify&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">least&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">160k&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>定义了大量的本地变量，增大此方法帧中本地变量表的长度&lt;/strong>&lt;/p>
&lt;p>&lt;strong>结果&lt;/strong>：抛出 &lt;code>StackOverflowError&lt;/code> 异常，异常出现时输出的堆栈深度相应缩小。&lt;/p>
&lt;p>为了多占局部变量表空间，不得不定义一长串变量，具体如代码如下所示。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JavaVMStackSOF2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stackLength&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">test&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">long&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused1&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused2&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused3&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused4&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused5&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused6&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused7&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused8&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused9&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused10&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused11&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused12&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused13&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused14&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused15&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused16&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused17&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused18&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused19&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused20&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused21&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused22&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused23&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused24&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused25&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused26&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused27&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused28&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused29&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused30&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused31&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused32&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused33&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused34&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused35&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused36&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused37&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused38&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused39&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused40&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused41&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused42&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused43&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused44&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused45&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused46&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused47&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused48&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused49&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused50&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused51&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused52&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused53&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused54&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused55&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused56&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused57&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused58&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused59&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused60&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused61&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused62&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused63&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused64&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused65&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused66&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused67&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused68&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused69&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused70&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused71&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused72&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused73&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused74&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused75&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused76&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused77&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused78&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused79&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused80&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused81&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused82&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused83&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused84&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused85&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused86&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused87&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused88&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused89&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused90&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused91&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused92&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused93&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused94&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused95&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused96&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused97&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused98&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused99&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused100&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">stackLength&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unused1&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused2&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused4&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused5&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused6&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused7&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused8&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused9&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused10&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused11&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused12&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused13&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused14&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused15&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused16&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused17&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused18&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused19&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused20&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused21&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused22&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused23&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused24&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused25&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused26&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused27&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused28&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused29&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused30&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused31&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused32&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused33&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused34&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused35&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused36&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused37&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused38&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused39&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused40&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused41&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused42&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused43&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused44&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused45&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused46&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused47&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused48&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused49&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused50&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused51&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused52&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused53&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused54&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused55&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused56&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused57&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused58&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused59&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused60&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused61&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused62&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused63&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused64&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused65&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused66&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused67&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused68&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused69&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused70&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused71&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused72&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused73&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused74&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused75&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused76&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused77&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused78&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused79&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused80&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused81&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused82&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused83&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused84&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused85&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused86&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused87&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused88&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused89&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused90&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused91&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused92&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused93&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused94&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused95&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused96&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused97&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused98&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused99&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unused100&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">try&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">test&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">catch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Error&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;stack length:&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">+&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">stackLength&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">throw&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">e&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>运行结果&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">7334&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">StackOverflowError&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">com&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">mj&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">jvmpractice&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">test&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF2&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">14&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>实验结果表明&lt;/strong>：&lt;/p>
&lt;p>无论是由于栈帧太大还是虚拟机栈容量太小，当新的栈帧内存无法分配的时候， HotSpot 虚拟机抛出的都是 &lt;code>StackOverflowError&lt;/code> 异常。可是如果在允许动态扩展栈容量大小的虚拟机上，相同代码则会导致不一样的情况。譬如远古时代的 Classic 虚拟机，这款虚拟机可以支持动态扩展栈内存的容量，在 Windows 上的 JDK 1.0.2 运行代码 &lt;code>JavaVMStackSOF2&lt;/code> 的话（如果这时候要调整栈容量就应该改用&lt;code>-oss&lt;/code> 参数了），得到的结果是：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">stack&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">length&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">3716&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">OutOfMemoryError&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fenixsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">leak&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">27&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fenixsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">leak&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fenixsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">leak&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">JavaVMStackSOF&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">28&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>&lt;strong>额外情况：通过不断建立线程的方式，产生内存溢出&lt;/strong>&lt;/p>
&lt;p>结果：在栈空间不可扩展的 HotSpot 上产生内存溢出异常&lt;/p>
&lt;p>但是这样产生的内存溢出异常和栈空间是否足够并不存在任何直接的关系，主要取决于操作系统本身的内存使用状态。甚至可以说，在这种情况下，给每个线程的栈分配的内存越大，反而越 容易产生内存溢出异常。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：-Xss2M （这时候不妨设大些，请在 32 位系统下运行）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JavaVMStackOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">dontStop&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">stackLeakByThread&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Thread&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Runnable&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">run&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">dontStop&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">start&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">JavaVMStackOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">oom&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JavaVMStackOOM&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stackLeakByThread&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>运行结果&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">OutOfMemoryError&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">native&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>原因其实不难理解：操作系统分配给每个进程的内存是有限制的，那虚拟机栈和本地方法栈可用内存为总内存即为减去最大堆容量，再减去最大方法区容量，减去直接内存和虚拟机进程本身耗费的内存，剩下的内存就由虚拟机栈和本地方法栈来分配了。因此为每个线程分配到的栈内存越大，可以建立的线程数量自然就越少，建立线程时就越容易把剩下的内存耗尽，以下代码演示了这种情况&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>当出现 &lt;code>StackOverflowError&lt;/code> 异常时，会有明确错误堆栈可供分析，相对而言比较容易 定位到问题所在。&lt;/p>
&lt;p>&lt;strong>如果使用 HotSpot 虚拟机默认参数，栈深度在大多数情况下（因为每 个方法压入栈的帧大小并不是一样的，所以只能说大多数情况下）到达 1000~2000 的深度是完全没有问题&lt;/strong>，对于正常的方法调用（包括不能做尾递归优化的递归调用），这个深度应该完全够用了。&lt;/p>
&lt;p>但是，&lt;strong>如果是建立过多线程导致的内存溢出，在不能减少线程数量或者更换 64 位虚拟机的情况下，就只能通过减少最大堆和减少栈容量来换取更多的线程&lt;/strong>。 这种通过“减少内存”的手段来解决内存溢出的方式，如果没有这方面处理经验，一般比较难以想到，这一点读者需要在开发 32 位系统的多线程应用时注意。也是由于这种问 题较为隐蔽，从 JDK 7 起，以上提示信息中“unable to create native thread”后面，虚拟机会特别注明原因可能是“possibly out of memory or process/resource limits reached” 。&lt;/p>
&lt;h3 id="运行时常量池溢出">运行时常量池溢出
&lt;/h3>&lt;p>&lt;code>String::intern()&lt;/code>是一个本地方法，它的作用是如果字符串常量池中已经包含一个等于 此 String 对象的字符串，则返回代表池中这个字符串的 String 对象的引用；否则，会将 此 String 对象包含的字符串添加到常量池中，并且返回此 String 对象的引用。&lt;/p>
&lt;p>&lt;strong>以下代码在 JDK 6 或更早之前的 HotSpot 虚拟机中，常量池都是分配在永久代中&lt;/strong>，我们可以通过&lt;code>-XX： PermSize&lt;/code> 和&lt;code>-XX：MaxPermSize&lt;/code> 限制永久代的大小，即可间接限制其中常量池的容量。&lt;/p>
&lt;p>而使用 JDK 7 或更高版本的 JDK 来运行这段程序并不会得到相同的结果，因为自 JDK 7 起，&lt;strong>原本存放在永久代的字符串常量池被移至 Java 堆之中&lt;/strong>，所以在 JDK 7 及以上版本，限制方法区的容量对该测试用例来说是毫无意义的。这时候使用 &lt;code>-Xmx&lt;/code> 参数限制最大堆到 6MB 就会出现&lt;code>Exception in thread &amp;quot;main&amp;quot; java.lang.OutOfMemoryError: Java heap space&lt;/code>异常&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：-XX:PermSize=6M -XX:MaxPermSize=6M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">RuntimeConstantPoolOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 使用 Set 保持着常量池引用，避免 Full GC 回收常量池行为&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Set&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashSet&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c1">// 在 short 范围内足以让 6MB 的 PermSize 产生 OOM 了&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kt">short&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">set&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">add&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">valueOf&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">intern&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="方法区溢出">方法区溢出
&lt;/h3>&lt;p>&lt;strong>方法区的主要职责是用于存放类型的相关信息，如类名、访问修饰符、常量池、字段描述、方法描述等。对于这部分区域的测试，基本的思路是运行时产生大量的类去填满方法区，直到溢出为止&lt;/strong>。虽然直接使用 Java SE API 也可以动态产生类（如反射时的 &lt;code>GeneratedConstructorAccessor&lt;/code> 和动态代理等），但在本次实验中操作起来比较麻烦。在以下代码里借助了 &lt;code>CGLib&lt;/code> 直接操 作字节码运行时生成了大量的动态类。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：-XX:PermSize=10M -XX:MaxPermSize=10M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">JavaMethodAreaOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Enhancer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">enhancer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Enhancer&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enhancer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setSuperclass&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">OOMObject&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enhancer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setUseCache&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enhancer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setCallback&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MethodInterceptor&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">intercept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">method&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">MethodProxy&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxy&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">proxy&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">invokeSuper&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">obj&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">});&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">enhancer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">create&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">OOMObject&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>值得特别注意的是，当前的很多主流框架，如 &lt;code>Spring&lt;/code>、&lt;code>Hibernate&lt;/code> 对类进行增强时，都会使用到 CGLib 这类字节码技术，当增强的类越多，就需要越大的方法区以保证动态生成的新类型可以载入内存。另外，很多运行于 Java 虚拟机上的动态语言 （例如 Groovy 等）通常都会持续创建新类型来支撑语言的动态性，一个类如果要被垃圾收集器回收，要达成的条件是比较苛刻的。在经常运行时生成大量动态类的应用场景里，就应该特别关注这些类的回收状况。&lt;/p>
&lt;p>&lt;strong>JDK7的运行结果:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">OutOfMemoryError&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">PermGen&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">space&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Dumping&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">heap&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">to&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java_pid46662&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">hprof&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Heap&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">dump&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">file&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">created&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">5386258&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">bytes&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">029&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">secs&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>在 JDK 8 以后，永久代便完全退出了历史舞台，元空间作为其替代者登场。在 默认 设置下，前面列举的那些正常的动态创建新类型的测试用例已经很难再迫使虚拟机产生 方法区的溢出异常了。不过为了让使用者有预防实际应用里出现类似于上述代码那样的破坏性的操作，HotSpot 还是提供了一些参数作为元空间的防御措施，主要包括：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>-XX:MaxMetaspaceSize&lt;/code>&lt;/strong>：设置元空间最大值，默认是-1，即不限制，或者说只受 限于本地内存大小。&lt;/li>
&lt;li>&lt;strong>&lt;code>-XX:MetaspaceSize&lt;/code>&lt;/strong>：指定元空间的初始空间大小，以字节为单位，达到该值就会触发垃圾收集进行类型卸载，同时收集器会对该值进行调整：如果释放了大量的空间， 就适当降低该值；如果释放了很少的空间，那么在不超过&lt;code>-XX:MaxMetaspaceSize&lt;/code>（如 果设置了的话）的情况下，适当提高该值。&lt;/li>
&lt;li>&lt;strong>&lt;code>-XX:MinMetaspaceFreeRatio&lt;/code>&lt;/strong>：作用是在垃圾收集之后控制最小的元空间剩余容量 的百分比，可减少因为元空间不足导致的垃圾收集的频率。类似的还有&lt;code>-XX:MaxMetaspaceFreeRatio&lt;/code>，用于控制最大的元空间剩余容量的百分比。&lt;/li>
&lt;/ul>
&lt;h3 id="本机直接内存溢出">本机直接内存溢出
&lt;/h3>&lt;p>**直接内存（Direct Memory）**的容量大小可通过&lt;code>-XX:MaxDirectMemorySize&lt;/code> 参数来 指定，如果不去指定，则默认与 Java 堆最大值（由&lt;code>-Xmx&lt;/code> 指定）一致，以下代码越过了 &lt;code>DirectByteBuffer&lt;/code> 类直接通过反射获取 &lt;code>Unsafe&lt;/code> 实例进行内存分配（&lt;code>Unsafe&lt;/code> 类的 &lt;code>getUnsafe()&lt;/code>方法指定只有引导类加载器才会返回实例，体现了设计者希望只有虚拟机标准类库里面的类才能使用 Unsafe 的功能，在 JDK 10 时才将 &lt;code>Unsafe&lt;/code> 的部分功能通过 &lt;code>VarHandle&lt;/code> 开放给外部使用），因为虽然使用 DirectByteBuffer 分配内存也会抛出内存溢 出异常，但它抛出异常时并没有真正向操作系统申请分配内存，而是通过计算得知内存无法分配就会在代码里手动抛出溢出异常，真正申请分配内存的方法是 &lt;code>Unsafe::allocateMemory()&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * VM Args：
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * -Xmx20M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * -XX:MaxDirectMemorySize=10M
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> *
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * @author zzm
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DirectMemoryOOM&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">int&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">_1MB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1024&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">*&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">1024&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Field&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unsafeField&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">class&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDeclaredFields&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">[&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unsafeField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">setAccessible&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Unsafe&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Unsafe&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">unsafeField&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">while&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">allocateMemory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">_1MB&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>运行结果：&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Exception&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">in&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">thread&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;main&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">java&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">lang&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">OutOfMemoryError&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">sun&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">misc&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">Unsafe&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">allocateMemory&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Native&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Method&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">at&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">org&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">fenixsoft&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">oom&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">DMOOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DMOOM&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">java&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">20&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>由直接内存导致的内存溢出，一个明显的特征是在 Heap Dump 文件中不会看见有 什么明显的异常情况，如果发现内存溢出之后产生的 Dump 文件很小，而程序中又直接或间接使用了 DirectMemory（典型的间接使用就是 NIO），那就可以考虑重点检查一下直接内存方面的原因了。&lt;/p>
&lt;h2 id="jvm垃圾收集子系统详解">JVM垃圾收集子系统详解
&lt;/h2>&lt;p>Java内存模型的各部分当中的程序计数器、虚拟机栈、本地方法栈 3 个区域和线程绑定，栈中的栈帧随着方法的进入和退出而有条不紊地执行着出栈和入栈操作。每一个栈帧中分配多少内存基本上是在类结构确定下来时就已知的，因此这几个区域的内存分配和回收都具备确定性，在这几个区域内就不需要过多考虑如何回收的问题，当方法结束或者线程结束时，内存自然就跟随着回收了。&lt;/p>
&lt;p>而 Java 堆和方法区这两个区域则有着很显著的不确定性，只有处于运行期间，我们才能知道程序究竟会创建哪些对象，创建多少个对象，这部分内存的分配和回收是动态的。垃圾收集器所关注的正是这部分内存该如何管理。&lt;/p>
&lt;h3 id="死亡对象判断方法">死亡对象判断方法
&lt;/h3>&lt;p>堆中几乎放着所有的对象实例，对堆垃圾回收前的第一步就是要判断哪些对象已经死亡（即不能再被任何途径使用的对象）。&lt;/p>
&lt;h4 id="引用计数法">引用计数法
&lt;/h4>&lt;p>给对象中添加一个引用计数器：&lt;/p>
&lt;ul>
&lt;li>每当有一个地方引用它，计数器就加 1；&lt;/li>
&lt;li>当引用失效，计数器就减 1；&lt;/li>
&lt;li>任何时候计数器为 0 的对象就是不可能再被使用的。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>这个方法实现简单，效率高，也有很多使用这种方式进行内存管理的技术(如Python)、但是目前主流的虚拟机中并没有选择这个算法来管理内存，其最主要的原因是它很难解决对象之间相互循环引用的问题。&lt;/strong>&lt;/p>
&lt;p>所谓对象之间的相互引用问题，如下面代码所示：除了对象 &lt;code>objA&lt;/code> 和 &lt;code>objB&lt;/code> 相互引用着对方之外，这两个对象之间再无任何引用。但是他们因为互相引用对方，导致它们的引用计数器都不为 0，于是引用计数算法无法通知 GC 回收器回收他们。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">ReferenceCountingGc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">instance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ReferenceCountingGc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">objA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReferenceCountingGc&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">ReferenceCountingGc&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">objB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ReferenceCountingGc&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">objA&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">instance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">objB&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">objB&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">instance&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">objA&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">objA&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">objB&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="可达性分析算法">可达性分析算法
&lt;/h4>&lt;p>当前主流的商用程序语言（Java、C#，上溯至前面提到的古老的 Lisp）的内存管理子系统，都是通过可达性分析（Reachability Analysis）算法来判定对象是否存活的。这个算法的基本思想就是通过一系列的称为 &lt;strong>“GC Roots”&lt;/strong> 的对象作为起点，从这些节点开始向下搜索，节点所走过的路径称为引用链，当一个对象到 GC Roots 没有任何引用链相连的话，则证明此对象是不可用的，需要被回收。&lt;/p>
&lt;p>下图中的 &lt;code>Object 6 ~ Object 10&lt;/code> 之间虽有引用关系，但它们到 GC Roots 不可达，因此为需要被回收的对象。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/jvm-gc-roots.png"
width="812"
height="542"
srcset="https://cyber-blog.github.io/p/jvm-gc/jvm-gc-roots_hu7387869850895995300.png 480w, https://cyber-blog.github.io/p/jvm-gc/jvm-gc-roots_hu11468326864149135117.png 1024w"
loading="lazy"
alt="jvm-gc-roots"
class="gallery-image"
data-flex-grow="149"
data-flex-basis="359px"
>&lt;/p>
&lt;p>&lt;strong>固定可作为 GC Roots 的对象包括以下几种&lt;/strong>：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>在虚拟机栈（栈帧中的本地变量表）中引用的对象，譬如各个线程被调用的方法堆栈中使用到的参数、局部变量、临时变量等。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在方法区中类静态属性引用的对象，譬如 Java 类的引用类型静态变量。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在方法区中常量引用的对象，譬如字符串常量池（String Table）里的引用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>在本地方法栈中 JNI（即通常所说的 Native 方法）引用的对象。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Java 虚拟机内部的引用，如基本数据类型对应的 Class 对象，一些常驻的异常对象 （比如 &lt;code>NullPointExcepiton&lt;/code>、&lt;code>OutOfMemoryError&lt;/code>）等，还有系统类加载器。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>所有被同步锁（&lt;code>synchronized&lt;/code> 关键字）持有的对象。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h5 id="引用类型">引用类型
&lt;/h5>&lt;p>无论是通过引用计数法判断对象引用数量，还是通过可达性分析法判断对象的引用链是否可达，判定对象的存活都与“引用”有关。&lt;/p>
&lt;p>JDK1.2 之前，Java 中引用的定义很传统：如果 reference 类型的数据存储的数值代表的是另一块内存的起始地址，就称这块内存代表一个引用。&lt;/p>
&lt;p>JDK1.2 以后，Java 对引用的概念进行了扩充，将引用分为强引用、软引用、弱引用、虚引用四种（引用强度逐渐减弱）&lt;/p>
&lt;ol>
&lt;li>
&lt;p>强引用（StrongReference）&lt;/p>
&lt;p>以前我们使用的大部分引用实际上都是强引用，这是使用最普遍的引用。如果一个对象具有强引用，那就类似于&lt;strong>必不可少的生活用品&lt;/strong>，垃圾回收器绝不会回收它。当内存空间不足，Java 虚拟机宁愿抛出 OutOfMemoryError 错误，使程序异常终止，也不会靠随意回收具有强引用的对象来解决内存不足问题。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>软引用（SoftReference）&lt;/p>
&lt;p>如果一个对象只具有软引用，那就类似于&lt;strong>可有可无的生活用品&lt;/strong>。如果内存空间足够，垃圾回收器就不会回收它，如果内存空间不足了，就会回收这些对象的内存。只要垃圾回收器没有回收它，该对象就可以被程序使用。软引用可用来实现内存敏感的高速缓存。&lt;/p>
&lt;p>软引用可以和一个引用队列（ReferenceQueue）联合使用，如果软引用所引用的对象被垃圾回收，JAVA 虚拟机就会把这个软引用加入到与之关联的引用队列中。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>弱引用（WeakReference）&lt;/p>
&lt;p>&lt;strong>弱引用也用来描述那些非必须得对象，但是它的强度比软引用更弱一些&lt;/strong>。被弱引用关联的对象只能生存到下一次垃圾收集发生为止。在进行垃圾回收是，不管当前内存空间足够与否，都会回收它的内存。在 JDK 1.2 版之后提供了 &lt;code>WeakReference&lt;/code> 类来实现弱引用。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>虚引用（PhantomReference）&lt;/p>
&lt;p>&amp;ldquo;虚引用&amp;quot;顾名思义，就是形同虚设，与其他几种引用都不同，虚引用并不会决定对象的生命周期。如果一个对象仅持有虚引用，那么它就和没有任何引用一样，在任何时候都可能被垃圾回收。&lt;/p>
&lt;p>&lt;strong>为一个对象设置虚引用关联的唯一目的只是为了能在这个对象被收集器回收时 收到一个系统通知。&lt;/strong>&lt;/p>
&lt;p>在 JDK 1.2 版之后提供了 &lt;code>PhantomReference&lt;/code> 类来实现虚引用。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h3 id="方法区回收">方法区回收
&lt;/h3>&lt;p>实际上《Java 虚拟机规范》中提到过可以不要求虚拟机在方法区中实现垃圾收集，事实上也确实有未实现或未能完整实现方法区类型卸载的收集器存在（如 JDK 11 时期的 ZGC 收集器就不支持类卸载）。这也侧面反应了方法区的回收相对于堆来说不频繁，并且回收条件苛刻。&lt;/p>
&lt;p>&lt;strong>方法区的垃圾收集主要回收两部分内容：废弃的常量和不再使用的类型。&lt;/strong>&lt;/p>
&lt;h4 id="如何判断一个常量是废弃常量">如何判断一个常量是废弃常量？
&lt;/h4>&lt;p>运行时常量池主要回收的是废弃的常量。那么，我们如何判断一个常量是废弃常量呢？&lt;/p>
&lt;p>假如在字符串常量池中存在字符串 &amp;ldquo;abc&amp;rdquo;，如果当前没有任何 String 对象引用该字符串常量的话，就说明常量 &amp;ldquo;abc&amp;rdquo; 就是废弃常量，如果这时发生内存回收的话而且有必要的话，&amp;ldquo;abc&amp;rdquo; 就会被系统清理出常量池了。&lt;/p>
&lt;h4 id="如何判断一个类是无用的类">如何判断一个类是无用的类
&lt;/h4>&lt;p>方法区主要回收的是无用的类，那么如何判断一个类是无用的类的呢？&lt;/p>
&lt;p>判定一个常量是否是“废弃常量”比较简单，而要判定一个类是否是“无用的类”的条件则相对苛刻许多。类需要同时满足下面 3 个条件才能算是 &lt;strong>“无用的类”&lt;/strong> ：&lt;/p>
&lt;ul>
&lt;li>该类所有的实例都已经被回收，也就是 Java 堆中不存在该类的任何实例。&lt;/li>
&lt;li>加载该类的 &lt;code>ClassLoader&lt;/code> 已经被回收，这个条件除非是经过精心设计的可替换类加载器的场景，否则通常是很难达成的。&lt;/li>
&lt;li>该类对应的 &lt;code>java.lang.Class&lt;/code> 对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。&lt;/li>
&lt;/ul>
&lt;p>虚拟机可以对满足上述 3 个条件的无用类进行回收，这里说的仅仅是“可以”，而并不是和对象一样不使用了就会必然被回收。关于是否要对类型进行回收， HotSpot 虚拟机提供了&lt;code>-Xnoclassgc&lt;/code> 参数进行控制&lt;/p>
&lt;h3 id="垃圾收集算法">垃圾收集算法
&lt;/h3>&lt;h4 id="分代收集理论">分代收集理论
&lt;/h4>&lt;p>当前商业虚拟机的垃圾收集器，大多数都遵循了“分代收集”（Generational Collection）的理论进行设计，分代收集名为理论，实质是一套符合大多数程序运行实 际情况的经验法则，它建立在两个分代假说之上：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>弱分代假说（Weak Generational Hypothesis）：绝大多数对象都是朝生夕灭的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>强分代假说（Strong Generational Hypothesis）：熬过越多次垃圾收集过程的对象就越难以消亡。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>这也就延伸出了多款垃圾收集器的统一原则：&lt;strong>收集器应该将 Java 堆划分出不同的区域，然后将回收对象依据其年龄（年龄即对象熬过垃圾收集过 程的次数）分配到不同的区域之中存储。&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>显而易见，如果一个区域中大多数对象都是朝生夕灭，难以熬过垃圾收集过程的话，那么把它们集中放在一起，每次回收时只关注如 何保留少量存活而不是去标记那些大量将要被回收的对象，就能以较低代价回收到大量的空间；如果剩下的都是难以消亡的对象，那把它们集中放在一块，虚拟机便可以使用较低的频率来回收这个区域，这就同时兼顾了垃圾收集的时间开销和内存的空间有效利 用。&lt;/p>
&lt;/blockquote>
&lt;p>所以 Java 堆被划分为了几个不同的区域，垃圾收集器才可以每次些部分的区域，因此才有了下面针对于各分代区域的相关术语。&lt;/p>
&lt;p>部分收集 (Partial GC)：&lt;/p>
&lt;ul>
&lt;li>新生代收集（Minor GC / Young GC）：只对新生代进行垃圾收集；&lt;/li>
&lt;li>老年代收集（Major GC / Old GC）：只对老年代进行垃圾收集。需要注意的是 Major GC 在有的语境中也用于指代整堆收集；&lt;/li>
&lt;li>混合收集（Mixed GC）：对整个新生代和部分老年代进行垃圾收集。&lt;/li>
&lt;/ul>
&lt;p>整堆收集 (Full GC)：收集整个 Java 堆和方法区。&lt;/p>
&lt;p>继续衍化发展出了“标记-复制算法”“标记-清除算法”“标记-整理算法”等针对性的垃圾收集算法。&lt;/p>
&lt;h4 id="标记-清除算法">标记-清除算法
&lt;/h4>&lt;p>该算法分为“标记”和“清除”阶段：：首先标记出所有需要回收的对象，在标记完成后，统一回收掉所有被标记的对象，也可以反过来，标记存活的对象，统一回收所有未被标记的对象。它是最基础的收集算法，后续的算法都是对其不足进行改进得到。这种垃圾收集算法会带来两个明显的问题：&lt;/p>
&lt;ol>
&lt;li>&lt;strong>对象分配时的效率问题&lt;/strong>&lt;/li>
&lt;li>&lt;strong>空间问题（标记清除后会产生大量不连续的碎片）&lt;/strong>&lt;/li>
&lt;/ol>
&lt;img src="标记-清除算法.jpeg" alt="标记-清除算法" style="zoom: 50%;" />
&lt;h4 id="标记-复制算法">标记-复制算法
&lt;/h4>&lt;p>为了解决效率问题，“标记-复制”收集算法出现了。它可以将内存分为大小相同的两块，每次使用其中的一块。当这一块的内存使用完后，就将还存活的对象复制到另一块去，然后再把使用的空间一次清理掉。这样就使每次的内存回收都是对内存区间的一半进行回收。&lt;/p>
&lt;img src="标记复制.png" alt="标记复制" style="zoom:50%;" />
&lt;p>&lt;strong>现在的商用 Java 虚拟机大多都优先采用了这种收集算法去回收新生代&lt;/strong>，新生代中的对象有 98%熬不过第一轮收集。因此并不需要按照 1∶1 的比例来划分新生代的内存空间。在此思想上提出了一种更优化的半区复制分代策略，现在称为“Appel 式回收”。&lt;/p>
&lt;p>Appel 式回收的具体做法是把 新生代分为一块较大的 Eden 空间和两块较小的 Survivor 空间，每次分配内存只使用 Eden 和其中一块 Survivor。发生垃圾搜集时，将 Eden 和 Survivor 中仍然存活的对象一 次性复制到另外一块 Survivor 空间上，然后直接清理掉 Eden 和已用过的那块 Survivor 空间。HotSpot 虚拟机默认 Eden 和 Survivor 的大小比例是 8∶1，也即每次新生代中可 用内存空间为整个新生代容量的 90%（Eden 的 80%加上一个 Survivor 的 10%），只有一 个 Survivor 空间，即 10%的新生代是会被“浪费”的。当然，任何人都没有办法百分百保证每次回收都只有不多于 10%的 对象存活，当 Survivor 空间不足以容纳一次 Minor GC 之后存活的对象时，这些对象将通过分配担保（Handle Promotion）机制直接进入老年代。&lt;/p>
&lt;h4 id="标记-整理算法">标记-整理算法
&lt;/h4>&lt;p>根据老年代的特点提出的一种标记算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象回收，而是让所有存活的对象向一端移动，然后直接清理掉边界以外的内存。&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/%e6%a0%87%e8%ae%b0-%e6%95%b4%e7%90%86.png"
loading="lazy"
alt="标记-整理"
>&lt;/p>
&lt;p>是否移动对象是一项优缺点并存的风险决策：&lt;/p>
&lt;ol>
&lt;li>如果移动存活对象，尤其是在老年代这种每次回收都有大量对象存活区域，移动存活对象并更新所有引用这些对象的地方将会是一种极为负重的操作，而且这种对象移动 操作必须全程暂停用户应用程序才能进行（“Stop The World”） 。&lt;/li>
&lt;li>如果完全不移动和整理存活对象的话，弥散于堆中的存活对象导致的空间碎片化问题就只能依赖更为复杂的内存分配器和内存访问器来解决。&lt;/li>
&lt;/ol>
&lt;p>基于以上两点，是否移动对象都存在弊端，&lt;strong>移动则内存回收时会更复杂，不移动则内存分配时会更复杂。从垃圾收集的停顿时间来看，不移动对象停顿时间会更短，甚至可以不需要停顿，但是从整个程序的运行效率来看，移动对象会更划算&lt;/strong>。即使不移动对象会使得收集器的效率提升一些，减少垃圾收集时的用户线程停顿时间，但因内存分配和访问相比垃圾收集频率要高得多，这部分的耗时增加，总吞吐量仍然是下降的。&lt;/p>
&lt;h3 id="经典垃圾收集器">经典垃圾收集器
&lt;/h3>&lt;p>&lt;strong>如果说收集算法是内存回收的方法论，那么垃圾收集器就是内存回收的具体实现。&lt;/strong>&lt;/p>
&lt;p>虽然我们对各个收集器进行比较，但并非要挑选出一个最好的收集器。因为直到现在为止还没有最好的垃圾收集器出现，更加没有万能的垃圾收集器，&lt;strong>我们能做的就是根据具体应用场景选择适合自己的垃圾收集器&lt;/strong>。试想一下：如果有一种四海之内、任何场景下都适用的完美收集器存在，那么我们的 HotSpot 虚拟机就不会实现那么多不同的垃圾收集器了。&lt;/p>
&lt;img src="垃圾收集器.png" alt="垃圾收集器" style="zoom:50%;" />
&lt;h4 id="serial收集器">Serial收集器
&lt;/h4>&lt;p>Serial（串行）收集器是最基本、历史最悠久的垃圾收集器了。大家看名字就知道这个收集器是一个单线程收集器了。它的 &lt;strong>“单线程”&lt;/strong> 的意义不仅仅意味着它只会使用一条垃圾收集线程去完成垃圾收集工作，更重要的是它在进行垃圾收集工作的时候必须暂停其他所有的工作线程（ &lt;strong>&amp;ldquo;Stop The World&amp;rdquo;&lt;/strong> ），直到它收集结束。&lt;/p>
&lt;p>&lt;strong>新生代采用标记-复制算法，老年代采用标记-整理算法。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/Serial:SerialOld.png"
width="947"
height="183"
srcset="https://cyber-blog.github.io/p/jvm-gc/Serial:SerialOld_hu12829115943650796854.png 480w, https://cyber-blog.github.io/p/jvm-gc/Serial:SerialOld_hu13473017132807510316.png 1024w"
loading="lazy"
alt="Serial:SerialOld"
class="gallery-image"
data-flex-grow="517"
data-flex-basis="1241px"
>&lt;/p>
&lt;p>虚拟机的设计者们当然知道 Stop The World 带来的不良用户体验，所以在后续的垃圾收集器设计中停顿时间在不断缩短（仍然还有停顿，寻找最优秀的垃圾收集器的过程仍然在继续）。&lt;/p>
&lt;p>但是 Serial 收集器有没有优于其他垃圾收集器的地方呢？当然有，它&lt;strong>简单而高效（与其他收集器的单线程相比）&lt;/strong>。Serial 收集器由于没有线程交互的开销，自然可以获得很高的单线程收集效率（桌面端、部分微服务场景）。Serial 收集器对于运行在 Client 模式下的虚拟机来说是个不错的选择。&lt;/p>
&lt;h5 id="serial-old-收集器">Serial Old 收集器
&lt;/h5>&lt;p>&lt;strong>Serial 收集器的老年代版本&lt;/strong>，它同样是一个单线程收集器。它主要有两大用途：一种用途是在 JDK1.5 以及以前的版本中与 Parallel Scavenge 收集器搭配使用，另一种用途是作为 CMS 收集器的后备方案。&lt;/p>
&lt;h4 id="parnew-收集器">ParNew 收集器
&lt;/h4>&lt;p>&lt;strong>ParNew 收集器其实就是 Serial 收集器的多线程版本，除了使用多线程进行垃圾收集外，其余行为包括 Serial 收集器可用的所有控制参数（例如：&lt;code>-XX： SurvivorRatio&lt;/code>、&lt;code>-XX： PretenureSizeThreshold&lt;/code>、&lt;code>-XX：HandlePromotionFailure &lt;/code>等）、控制参数、收集算法、回收策略等等）和 Serial 收集器完全一样。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/ParNew.png"
width="1640"
height="430"
srcset="https://cyber-blog.github.io/p/jvm-gc/ParNew_hu15704673982829257725.png 480w, https://cyber-blog.github.io/p/jvm-gc/ParNew_hu12748736570910000945.png 1024w"
loading="lazy"
alt="ParNew"
class="gallery-image"
data-flex-grow="381"
data-flex-basis="915px"
>&lt;/p>
&lt;p>它是许多运行在 Server 模式下的虚拟机的首要选择，除了 Serial 收集器外，只有它能与 CMS 收集器（真正意义上的并发收集器，后面会介绍到）配合工作。ParNew 收集器在单核心处理器的环境中绝对不会有比 Serial 收集器更好的效果，当然，随着可以被使用的处理器核心数量的增加，ParNew 对于垃圾收集时系统资源的高效利用还是很有好处的。&lt;/p>
&lt;h4 id="parallel-scavenge-收集器">Parallel Scavenge 收集器
&lt;/h4>&lt;p>&lt;strong>Parallel Scavenge 收集器也是一款新生代收集器，同样基于标记复制算法，&lt;/strong>&lt;/p>
&lt;p>&lt;strong>其设计重点是吞吐量（高效率的利用 CPU）。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>CMS 等垃圾收集器的关注点更多的是用户线程的停顿时间（提高用户体验）。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>所谓吞吐量就是 CPU 中用于运行用户代码的时间与 CPU 总消耗时间的比值。&lt;/strong>&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jvm-gc/%E5%90%9E%E5%90%90%E9%87%8F.png"
width="1846"
height="298"
srcset="https://cyber-blog.github.io/p/jvm-gc/%E5%90%9E%E5%90%90%E9%87%8F_hu11581406262064717700.png 480w, https://cyber-blog.github.io/p/jvm-gc/%E5%90%9E%E5%90%90%E9%87%8F_hu2007942259521272936.png 1024w"
loading="lazy"
alt="吞吐量"
class="gallery-image"
data-flex-grow="619"
data-flex-basis="1486px"
>&lt;/p>
&lt;blockquote>
&lt;p>如果虚拟机完成某个任务，用户代码加 上垃圾收集总共耗费了 100 分钟，其中垃圾 收集花掉 1 分钟，那吞吐量就是 99%。&lt;/p>
&lt;/blockquote>
&lt;p>Parallel Scavenge 收集器提供了很多参数供用户找到最合适的停顿时间或最大吞吐量，如果对于收集器运作不太了解，手工优化存在困难的时候，使用 Parallel Scavenge 收集器配合自适应调节策略，把内存管理优化交给虚拟机去完成也是一个不错的选择。&lt;/p>
&lt;p>&lt;strong>这是 JDK1.8 默认收集，默认使用 Parallel Scavenge + Parallel Old&lt;/strong>&lt;/p>
&lt;p>使用 &lt;code>java -XX:+PrintCommandLineFlags -version&lt;/code> 命令查看&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">-XX:InitialHeapSize&lt;span class="o">=&lt;/span>&lt;span class="m">262921408&lt;/span> -XX:MaxHeapSize&lt;span class="o">=&lt;/span>&lt;span class="m">4206742528&lt;/span> -XX:+PrintCommandLineFlags -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseParallelGC
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">java version &lt;span class="s2">&amp;#34;1.8.0_211&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Java&lt;span class="o">(&lt;/span>TM&lt;span class="o">)&lt;/span> SE Runtime Environment &lt;span class="o">(&lt;/span>build 1.8.0_211-b12&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Java HotSpot&lt;span class="o">(&lt;/span>TM&lt;span class="o">)&lt;/span> 64-Bit Server VM &lt;span class="o">(&lt;/span>build 25.211-b12, mixed mode&lt;span class="o">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="parallel-old-收集器">Parallel Old 收集器
&lt;/h5>&lt;p>&lt;strong>Parallel Scavenge 收集器的老年代版本&lt;/strong>。使用多线程和“标记-整理”算法。在注重吞吐量以及 CPU 资源的场合，都可以优先考虑 Parallel Scavenge 收集器和 Parallel Old 收集器。&lt;/p>
&lt;h4 id="cms-收集器">CMS 收集器
&lt;/h4>&lt;p>&lt;strong>CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。它非常符合在注重用户体验的应用上使用。&lt;/strong>&lt;/p>
&lt;p>&lt;strong>CMS（Concurrent Mark Sweep）收集器是 HotSpot 虚拟机第一款真正意义上的并发收集器，它第一次实现了让垃圾收集线程与用户线程（基本上）同时工作。&lt;/strong>&lt;/p>
&lt;p>从名字中的&lt;strong>Mark Sweep&lt;/strong>这两个词可以看出，CMS 收集器是一种 &lt;strong>“标记-清除”算法&lt;/strong>实现的，它的运作过程相比于前面几种垃圾收集器来说更加复杂一些。整个过程分为四个步骤：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>初始标记：&lt;/strong> 暂停所有的其他线程，并记录下直接与 &lt;code>GCRoots&lt;/code> 相连的对象，速度很快 ；&lt;/li>
&lt;li>&lt;strong>并发标记：&lt;/strong> 同时开启 GC 和用户线程，用一个闭包结构去记录可达对象。但在这个阶段结束，这个闭包结构并不能保证包含当前所有的可达对象。因为用户线程可能会不断的更新引用域，所以 GC 线程无法保证可达性分析的实时性。所以这个算法里会跟踪记录这些发生引用更新的地方。&lt;/li>
&lt;li>&lt;strong>重新标记：&lt;/strong> 重新标记阶段就是为了修正并发标记期间因为用户程序继续运行而导致标记产生变动的那一部分对象的标记记录，这个阶段的停顿时间一般会比初始标记阶段的时间稍长，远远比并发标记阶段时间短。&lt;/li>
&lt;li>&lt;strong>并发清除：&lt;/strong> 开启用户线程，同时 GC 线程开始对未标记的区域做清扫。&lt;/li>
&lt;/ul>
&lt;img src="CMS.png" alt="CMS" style="zoom:50%;" />
&lt;p>它是一款优秀的垃圾收集器，主要优点：&lt;strong>并发收集、低停顿&lt;/strong>。但是它有下面三个明显的缺点：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>对 CPU 资源敏感；&lt;/strong>&lt;/li>
&lt;li>&lt;strong>无法处理浮动垃圾；&lt;/strong>&lt;/li>
&lt;li>&lt;strong>它使用的回收算法-“标记-清除”算法会导致收集结束时会有大量空间碎片产生。&lt;/strong>&lt;/li>
&lt;/ul>
&lt;h4 id="garbage-first-收集器">Garbage First 收集器
&lt;/h4>&lt;p>&lt;strong>G1 (Garbage-First) 是一款面向服务器的垃圾收集器,主要针对配备多颗处理器及大容量内存的机器. 以极高概率满足 GC 停顿时间要求的同时,还具备高吞吐量性能特征。&lt;/strong>&lt;/p>
&lt;p>被视为 JDK1.7 中 HotSpot 虚拟机的一个重要进化特征。它具备以下特点：&lt;/p>
&lt;ul>
&lt;li>&lt;strong>并行与并发&lt;/strong>：G1 能充分利用 CPU、多核环境下的硬件优势，使用多个 CPU（CPU 或者 CPU 核心）来缩短 Stop-The-World 停顿时间。部分其他收集器原本需要停顿 Java 线程执行的 GC 动作，G1 收集器仍然可以通过并发的方式让 java 程序继续执行。&lt;/li>
&lt;li>&lt;strong>分代收集&lt;/strong>：虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆，但是还是保留了分代的概念。&lt;/li>
&lt;li>&lt;strong>空间整合&lt;/strong>：与 CMS 的“标记-清理”算法不同，G1 从整体来看是基于“标记-整理”算法实现的收集器；从局部上来看是基于“标记-复制”算法实现的。&lt;/li>
&lt;li>&lt;strong>可预测的停顿&lt;/strong>：这是 G1 相对于 CMS 的另一个大优势，降低停顿时间是 G1 和 CMS 共同的关注点，但 G1 除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为 M 毫秒的时间片段内。&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>G1 收集器在后台维护了一个优先列表，每次根据允许的收集时间，优先选择回收价值最大的 Region(这也就是它的名字 Garbage-First 的由来)&lt;/strong> 。这种使用 Region 划分内存空间以及有优先级的区域回收方式，保证了 G1 收集器在有限时间内可以尽可能高的收集效率（把内存化整为零）。&lt;/p>
&lt;h3 id="新一代的垃圾收集器">新一代的垃圾收集器
&lt;/h3>&lt;h4 id="zgc-收集器">ZGC 收集器
&lt;/h4>&lt;p>&lt;a class="link" href="https://wiki.openjdk.java.net/display/zgc/Main" target="_blank" rel="noopener"
>ZGC&lt;/a>（The Z Garbage Collector）是JDK 11中推出的一款低延迟垃圾回收器。&lt;/p>
&lt;p>它的设计目标包括：&lt;/p>
&lt;ul>
&lt;li>停顿时间不超过10ms；&lt;/li>
&lt;li>停顿时间不会随着堆的大小，或者活跃对象的大小而增加；&lt;/li>
&lt;li>支持8MB~4TB级别的堆（未来支持16TB）。&lt;/li>
&lt;/ul>
&lt;p>在性能方面，尽管目前还处于实验状态，还没有完成所有特性，稳定性打磨和性能 调优也仍在进行，但即使是这种状态下的 ZGC，其性能表现已经相当亮眼，从官方给 出的测试结果来看，用“令人震惊的、革命性的 ZGC”来形容都不为过。&lt;/p>
&lt;p>特点：&lt;/p>
&lt;ol>
&lt;li>与 Shenandoah 和 G1 一样，ZGC 也采用基于 Region 的堆内存布局。&lt;/li>
&lt;li>染色指针技术（Colored Pointer，其他 类似的技术中可能将它称为 Tag Pointer 或者 Version Pointer）。&lt;/li>
&lt;li>ZGC 完全没有使用记忆集，没事分代。&lt;/li>
&lt;/ol>
&lt;h3 id="如何选择垃圾收集器">如何选择垃圾收集器
&lt;/h3>&lt;p>一般来说，收集器的选择就从以上这几点出发来考虑。举个例子，假设某个直接面 向用户提供服务的 B/S 系统准备选择垃圾收集器，一般来说延迟时间 是这类应用的主要 关注点，那么：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>如果你有充足的预算但没有太多调优经验，那么一套带商业技术支持的专有硬件 或者软件解决方案是不错的选择，Azul 公司以前主推的 Vega 系统和现在主推的 Zing VM 是这方面的代表，这样你就可以使用传说中的 C4 收集器了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你虽然没有足够预算去使用商业解决方案，但能够掌控软硬件型号，使用较 新的版本，同时又特别注重延迟，那 ZGC 很值得尝试。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你对还处于实验状态的收集器的稳定性有所顾虑，或者应用必须运行在 Windows 操作系统下，那 ZGC 就无缘了，试试 Shenandoah 吧。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你接手的是遗留系统，软硬件基础设施和 JDK 版本都比较落后，那就根据内 存规模衡量一下，对于大概 4GB 到 6GB 以下的堆内存，CMS 一般能处理得比较好，而对于更大的堆内存，可重点考察一下 G1。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h1 id="参考的一手资料出处">参考的一手资料出处
&lt;/h1>&lt;blockquote>
&lt;p>本教程基本上照搬了周志明老师的深入理解Java虚拟机，相当于本书的读后感或笔记&lt;/p>
&lt;p>&lt;a class="link" href="https://tech.meituan.com/2020/08/06/new-zgc-practice-in-meituan.html" target="_blank" rel="noopener"
>新一代垃圾回收器ZGC的探索与实践&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://javaguide.cn/java/jvm/jvm-garbage-collection.html#g1-%E6%94%B6%E9%9B%86%E5%99%A8" target="_blank" rel="noopener"
>JavaGuide&lt;/a>&lt;/p>
&lt;p>《Java虚拟机规范》&lt;/p>
&lt;p>要学习虚拟机，《Java虚拟机规范》无论如何都是必须读的。这本书的概念和细节描述与 Sun 的早期虚拟机（Sun Classic 虚拟机）高度吻合，随着技术的发展，高性能虚拟机真正的细节实现方式已经渐渐与虚拟机规范所描述的方 式差距越来越大，如果只能选择一本参考书来了解 Java 虚拟机，那必然是这本书。&lt;/p>
&lt;p>《Java 语言规范》&lt;/p>
&lt;p>虽然 Java 虚拟机并不是 Java 语言专有的，但是了解 Java 语言的各种细节规定对虚拟机的行为也是很有帮助的， 它与《Java虚拟机规范》一样都是 Oracle 官方直接出版的书籍，而且这本书还是由 Java 之父 James Gosling 亲自执笔撰写。&lt;/p>
&lt;p>2.网站资源&lt;/p>
&lt;p>高级语言虚拟机圈子：http://hllvm.group.iteye.com/。&lt;/p>
&lt;p>里面有一些关于虚拟机的讨论，并不只限于 Java 虚拟机，包括了所有针对高级语言虚拟机（High-Level Language Virtual Machine）的讨论，不过该网站针对 Java 虚拟机的讨论还是绝对的主流。圈主 RednaxelaFX（莫枢）的博客（http://rednaxelafx.iteye.com/）是另外一个非常有价值的虚拟机及编译原理等资料的分 享园地。&lt;/p>
&lt;p>HotSpot Internals：https://wiki.openjdk.java.net/display/HotSpot/Main。&lt;/p>
&lt;p>这是一个关于 OpenJDK 的 Wiki 网站，许多文章都由 JDK 的开发团队编写，更新很慢，但是有很大的参考价值。&lt;/p>
&lt;p>The HotSpot Group：http://openjdk.java.net/groups/hotspot/。&lt;/p>
&lt;p>HotSpot 组群，里面有关于虚拟机开发、编译器、垃圾收集和运行时四个邮件组，包含了关于 HotSpot 虚拟机最新的讨论。&lt;/p>
&lt;/blockquote></description></item><item><title>Docker 构建 FreeSWITCH 并部署</title><link>https://cyber-blog.github.io/p/fs-install4docker/</link><pubDate>Sun, 09 Oct 2022 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/fs-install4docker/</guid><description>&lt;img src="https://cyber-blog.github.io/p/fs-install4docker/cover.jpg" alt="Featured image of post Docker 构建 FreeSWITCH 并部署" />&lt;p>随着生产环境ubuntu系统的更新。&lt;code>FreeSWITC&lt;/code>1.6版本的安装和部署所依赖的一些库已经不兼容或不存在，导致安装会出现一些问题。为解决这些问题&lt;code>FreeSWITC&lt;/code>的版本也需要升级。并且使用Docker的方式部署和安装。&lt;/p>
&lt;h2 id="构建镜像">构建镜像
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>clone freeswitch repository&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">git clone https://github.com/signalwire/freeswitch.git
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>进入&lt;code>freeswitch&lt;/code>官网申请账号并获取自己账号的&lt;code>TOKEN&lt;/code>。参考&lt;a class="link" href="https://freeswitch.org/confluence/display/FREESWITCH/HOWTO&amp;#43;Create&amp;#43;a&amp;#43;SignalWire&amp;#43;Personal&amp;#43;Access&amp;#43;Token" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改&lt;code>Dockerfile&lt;/code>。包括修改&lt;code>TOKEN&lt;/code>和添加&lt;code>apt-get&lt;/code>国内源等。参考如下&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># vim:set ft=dockerfile:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> &lt;span class="nv">DEBIAN_VERSION&lt;/span>&lt;span class="o">=&lt;/span>buster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> debian:${DEBIAN_VERSION}&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ARG&lt;/span> &lt;span class="nv">TOKEN&lt;/span>&lt;span class="o">=&lt;/span>YOU_TOKEN
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"># Source Dockerfile:&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># https://github.com/docker-library/postgres/blob/master/9.4/Dockerfile&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># explicitly set user/group IDs&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> groupadd -r freeswitch --gid&lt;span class="o">=&lt;/span>&lt;span class="m">999&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> useradd -r -g freeswitch --uid&lt;span class="o">=&lt;/span>&lt;span class="m">999&lt;/span> freeswitch&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y ca-certificates &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> sed -i &lt;span class="s1">&amp;#39;s#http://deb.debian.org#https://mirrors.163.com#g&amp;#39;&lt;/span> /etc/apt/sources.list &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get clean&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># grab gosu for easy step-down from root&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y --no-install-recommends dirmngr gnupg2 wget &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> gpg2 --keyserver hkp://keyserver.ubuntu.com --recv-keys B42F6819007F00F88E364FD4036A9C25BF357DD4 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> gpg2 --keyserver hkp://keyserver.ubuntu.com --recv-keys 655DA1341B5207915210AFE936B4249FA7B0FB03 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> gpg2 --output /usr/share/keyrings/signalwire-freeswitch-repo.gpg --export 655DA1341B5207915210AFE936B4249FA7B0FB03 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -rf /var/lib/apt/lists/* &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget -O /usr/local/bin/gosu &lt;span class="s2">&amp;#34;https://github.com/tianon/gosu/releases/download/1.2/gosu-&lt;/span>&lt;span class="k">$(&lt;/span>dpkg --print-architecture&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> wget -O /usr/local/bin/gosu.asc &lt;span class="s2">&amp;#34;https://github.com/tianon/gosu/releases/download/1.2/gosu-&lt;/span>&lt;span class="k">$(&lt;/span>dpkg --print-architecture&lt;span class="k">)&lt;/span>&lt;span class="s2">.asc&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> gpg --verify /usr/local/bin/gosu.asc &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm /usr/local/bin/gosu.asc &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> chmod +x /usr/local/bin/gosu &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get purge -y --auto-remove wget dirmngr gnupg2&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># make the &amp;#34;en_US.UTF-8&amp;#34; locale so freeswitch will be utf-8 enabled by default&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y locales &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -rf /var/lib/apt/lists/* &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> localedef -i en_US -c -f UTF-8 -A /usr/share/locale/locale.alias en_US.UTF-8&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENV&lt;/span> LANG en_US.utf8&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># https://freeswitch.org/confluence/display/FREESWITCH/Debian&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">RUN&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install lsb-release -y --no-install-recommends &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;machine freeswitch.signalwire.com login signalwire password &lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">TOKEN&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> &amp;gt; /etc/apt/auth.conf &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;deb [signed-by=/usr/share/keyrings/signalwire-freeswitch-repo.gpg] https://freeswitch.signalwire.com/repo/deb/debian-release/ `lsb_release -sc` main&amp;#34;&lt;/span> &amp;gt; /etc/apt/sources.list.d/freeswitch.list &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y freeswitch-all &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get purge -y --auto-remove ca-certificates lsb-release &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get clean &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> rm -rf /var/lib/apt/lists/*&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> docker-entrypoint.sh /&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Add anything else here&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## Ports&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Open the container up to the world.&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">### 8021 fs_cli, 5060 5061 5080 5081 sip and sips, 64535-65535 rtp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 8021/tcp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 5060/tcp 5060/udp 5080/tcp 5080/udp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 5061/tcp 5061/udp 5081/tcp 5081/udp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 7443/tcp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 5070/udp 5070/tcp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 64535-65535/udp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 16384-32768/udp&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Volumes&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## Freeswitch Configuration&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">VOLUME&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/etc/freeswitch&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c">## Tmp so we can get core dumps out&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">VOLUME&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/tmp&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Limits Configuration&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> build/freeswitch.limits.conf /etc/security/limits.d/&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="c"># Healthcheck to make sure the service is running&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">SHELL&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/bin/bash&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">HEALTHCHECK --interval=15s --timeout=5s \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err"> &lt;/span>&lt;span class="k">CMD&lt;/span> fs_cli -x status &lt;span class="p">|&lt;/span> grep -q ^UP &lt;span class="o">||&lt;/span> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">ENTRYPOINT&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;/docker-entrypoint.sh&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;freeswitch&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>进入&lt;code>docker/master&lt;/code>目录执行构建命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">docker build -t freeswitch .
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="配置文件修改">配置文件修改
&lt;/h2>&lt;ol>
&lt;li>
&lt;p>修改启动映射的端口号&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改日志输出位置&lt;/p>
&lt;/li>
&lt;li>
&lt;p>修改ESL监听映射配置&lt;/p>
&lt;p>修改&lt;code>event_socket.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;configuration&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;event_socket.conf&amp;#34;&lt;/span> &lt;span class="na">description=&lt;/span>&lt;span class="s">&amp;#34;Socket Client&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;nat-map&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;false&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 配置为0.0.0.0代表指定IPV4的所有IP地址链接 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;listen-ip&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;0.0.0.0&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;listen-port&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;8021&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;ClueCon&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- 表示使用acl名称为lan的集合进行IP校验 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;param&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;apply-inbound-acl&amp;#34;&lt;/span> &lt;span class="na">value=&lt;/span>&lt;span class="s">&amp;#34;lan&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!--&amp;lt;param name=&amp;#34;stop-on-bind-error&amp;#34; value=&amp;#34;true&amp;#34;/&amp;gt;--&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>修改&lt;code>acl.conf.xml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;configuration&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;acl.conf&amp;#34;&lt;/span> &lt;span class="na">description=&lt;/span>&lt;span class="s">&amp;#34;Network Lists&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;network-lists&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!--
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> These ACL&amp;#39;s are automatically created on startup.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> rfc1918.auto - RFC1918 Space
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> nat.auto - RFC1918 Excluding your local lan.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> localnet.auto - ACL for your local lan.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> loopback.auto - ACL for your local lan.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;list&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;lan&amp;#34;&lt;/span> &lt;span class="na">default=&lt;/span>&lt;span class="s">&amp;#34;allow&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;node&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;deny&amp;#34;&lt;/span> &lt;span class="na">cidr=&lt;/span>&lt;span class="s">&amp;#34;192.168.42.0/24&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;node&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;allow&amp;#34;&lt;/span> &lt;span class="na">cidr=&lt;/span>&lt;span class="s">&amp;#34;192.168.42.42/32&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;node&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;allow&amp;#34;&lt;/span> &lt;span class="na">cidr=&lt;/span>&lt;span class="s">&amp;#34;121.28.78.50/32&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!--
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> This will traverse the directory adding all users
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> with the cidr= tag to this ACL, when this ACL matches
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> the users variables and params apply as if they
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> digest authenticated.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c"> --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;list&lt;/span> &lt;span class="na">name=&lt;/span>&lt;span class="s">&amp;#34;domains&amp;#34;&lt;/span> &lt;span class="na">default=&lt;/span>&lt;span class="s">&amp;#34;deny&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- domain= is special it scans the domain from the directory to build the ACL --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;node&lt;/span> &lt;span class="na">type=&lt;/span>&lt;span class="s">&amp;#34;allow&amp;#34;&lt;/span> &lt;span class="na">domain=&lt;/span>&lt;span class="s">&amp;#34;$${domain}&amp;#34;&lt;/span>&lt;span class="nt">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- use cidr= if you wish to allow ip ranges to this domains acl. --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- &amp;lt;node type=&amp;#34;allow&amp;#34; cidr=&amp;#34;192.168.0.0/24&amp;#34;/&amp;gt; --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/list&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/network-lists&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/configuration&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h2 id="启动容器">启动容器
&lt;/h2>&lt;p>运行命令。注意端口和数据卷的映射&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 一部分RTP端口的映射需要占用大量的启动时间。直接使用--net=host参数&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run -it --name freeswitch &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /data/freeswitch/configuration:/etc/freeswitch &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /data/freeswitch/tmp:/tmp &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -v /data/freeswitch/log:/log &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --net host &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> majiang213/freeswitch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description></item><item><title>已有Rancher集群添加节点</title><link>https://cyber-blog.github.io/p/rancher-add-node/</link><pubDate>Fri, 04 Dec 2020 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/rancher-add-node/</guid><description>&lt;ol>
&lt;li>
&lt;p>新增节点如果有磁盘则需要挂载磁盘&lt;/p>
&lt;/li>
&lt;li>
&lt;p>将k8s的master节点的公钥复制出来在新增的节点&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查看公钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat /root/.ssh/id_rsa.pub
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 以下命令在新增节点执行&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 rancher 用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ useradd rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加到 docker 组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ usermod -aG docker rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 切换到前面创建的用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ su rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入自己的 home 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 .ssh 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mkdir .ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 写入3个服务的公钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;master节点公钥&amp;#34;&lt;/span> &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">700&lt;/span> .ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">644&lt;/span> .ssh/authorized_keys
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>执行完以上操作后可以用master节点连接进行测试&lt;/p>
&lt;/li>
&lt;li>
&lt;p>安装集群相同版本的docker&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 预先设置环境变量VERSION可以指定版本的前缀，如VERSION=18.06 将下载18.06.*的最新版本&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">VERSION&lt;/span>&lt;span class="o">=&lt;/span>18.06
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl -fsSL https://get.docker.com &lt;span class="p">|&lt;/span> bash -s docker --mirror Aliyun
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>没有启动过 docker 的情况下，配置目录还不存在，先创建 &lt;code>mkdir -p /etc/docker &lt;/code>，然后在 &lt;code>/data&lt;/code>
下面创建一个 docker 目录（命令：&lt;code>mkdir /data/docker&lt;/code>），然后编辑配置文件 &lt;code>vi /etc/docker/daemon.json&lt;/code> 添加如下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;#34;registry-mirrors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;https://dockerhub.azk8s.cn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;https://reg-mirror.qiniu.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;#34;graph&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/data/docker&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>然后启动 docker&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开机启动&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在master节点当中导出rancher相关镜像&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 导出镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker save &lt;span class="k">$(&lt;/span>docker images &lt;span class="p">|&lt;/span> grep rancher &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{print $1&amp;#34;:&amp;#34;$2}&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> &amp;gt; rancher20201204.tar
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 导入镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker load -i rancher20201204.tar
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol start="5">
&lt;li>
&lt;p>编辑rancher-cluster.yml文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">nodes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">165.227.114.63&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">controlplane,worker,etcd]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">165.227.116.167&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">worker]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">165.227.127.226&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">worker]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">新节点ip&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">worker]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">etcd&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">snapshot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">creation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">6h&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">retention&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">24h&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>在master节点运行&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">rke up --update-only --config ./rancher-cluster.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>GitLab CI/CD 简介文档</title><link>https://cyber-blog.github.io/p/gitlab-cicd/</link><pubDate>Tue, 24 Nov 2020 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/gitlab-cicd/</guid><description>&lt;img src="https://cyber-blog.github.io/p/gitlab-cicd/cover.png" alt="Featured image of post GitLab CI/CD 简介文档" />&lt;p>GitLab CI/CD 是一个内置在GitLab中的工具，用于通过持续方法进行软件开发：&lt;/p>
&lt;ul>
&lt;li>Continuous Integration (CI) 持续集成&lt;/li>
&lt;li>Continuous Delivery (CD) 持续交付&lt;/li>
&lt;li>Continuous Deployment (CD) 持续部署&lt;/li>
&lt;/ul>
&lt;p>持续集成的工作原理是将小的代码块推送到Git仓库中托管的应用程序代码库中，并且每次推送时，都要运行一系列脚本来构建、测试和验证代码更改，然后再将其合并到主分支中。&lt;/p>
&lt;p>持续交付和部署相当于更进一步的CI，可以在每次推送到仓库默认分支的同时将应用程序部署到生产环境。&lt;/p>
&lt;p>这些方法使得可以在开发周期的早期发现bugs和errors，从而确保部署到生产环境的所有代码都符合为应用程序建立的代码标准。&lt;/p>
&lt;p>GitLab CI/CD 由一个名为 .gitlab-ci.yml 的文件进行配置，改文件位于仓库的根目录下。文件中指定的脚本由GitLab Runner执行。&lt;/p>
&lt;p>它涉及到在每次小的迭代中就不断地构建、测试和部署代码更改，从而减少了基于已经存在bug或失败的先前版本开发新代码的机会。&lt;/p>
&lt;h6 id="continuous-integration持续集成">Continuous Integration（持续集成）
&lt;/h6>&lt;p>假设一个应用程序，其代码存储在GitLab的Git仓库中。开发人员每天都要多次推送代码更改。对于每次向仓库的推送，你都可以创建一组脚本来自动构建和测试你的应用程序，从而减少了向应用程序引入错误的机会。这种做法称为持续集成，对于提交给应用程序（甚至是开发分支）的每项更改，它都会自动连续进行构建和测试，以确保所引入的更改通过你为应用程序建立的所有测试，准则和代码合规性标准。&lt;/p>
&lt;h6 id="continuous-delivery持续交付">Continuous Delivery（持续交付）
&lt;/h6>&lt;p>持续交付是超越持续集成的更进一步的操作。应用程序不仅会在推送到代码库的每次代码更改时进行构建和测试，而且，尽管部署是手动触发的，但作为一个附加步骤，它也可以连续部署。此方法可确保自动检查代码，但需要人工干预才能从策略上手动触发以必输此次变更。&lt;/p>
&lt;h6 id="continuous-deployment持续部署">Continuous Deployment（持续部署）
&lt;/h6>&lt;p>与持续交付类似，但不同之处在于，你无需将其手动部署，而是将其设置为自动部署。完全不需要人工干预即可部署你的应用程序。&lt;/p>
&lt;h2 id="基本-cicd-工作流程">基本 CI/CD 工作流程
&lt;/h2>&lt;p>一旦你将提交推送到远程仓库的分支上，那么你为该项目设置的CI/CD管道将会被触发。GitLab CI/CD 的执行步骤如下图所示：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203190921731-1402877301.png"
width="3420"
height="1894"
srcset="https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203190921731-1402877301_hu12168210532367399422.png 480w, https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203190921731-1402877301_hu5430032919100052470.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="180"
data-flex-basis="433px"
>&lt;/p>
&lt;p>通过GitLab UI所有的步骤都是可视化的。&lt;/p>
&lt;p>深入研究基本工作流程，则可以在DevOps生命周期的每个阶段看到GitLab中可用的功能，如下图所示：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203191024392-1340530589.png"
width="1692"
height="1068"
srcset="https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203191024392-1340530589_hu3260952447508086692.png 480w, https://cyber-blog.github.io/p/gitlab-cicd/874963-20200203191024392-1340530589_hu11559031171706186631.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="158"
data-flex-basis="380px"
>&lt;/p>
&lt;ol>
&lt;li>Verify&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>通过持续集成自动构建和测试你的应用程序&lt;/li>
&lt;li>使用GitLab代码质量（GitLab Code Quality）分析你的源代码质量&lt;/li>
&lt;li>通过浏览器性能测试（Browser Performance Testing）确定代码更改对性能的影响&lt;/li>
&lt;li>执行一系列测试，比如Container Scanning , Dependency Scanning , JUnit tests&lt;/li>
&lt;li>用Review Apps部署更改，以预览每个分支上的应用程序更改&lt;/li>
&lt;/ul>
&lt;ol start="2">
&lt;li>Package&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>用Container Registry存储Docker镜像&lt;/li>
&lt;li>用NPM Registry存储NPM包&lt;/li>
&lt;li>用Maven Repository存储Maven artifacts&lt;/li>
&lt;li>用Conan Repository存储Conan包&lt;/li>
&lt;/ul>
&lt;ol start="3">
&lt;li>Release&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>持续部署，自动将你的应用程序部署到生产环境&lt;/li>
&lt;li>持续交付，手动点击以将你的应用程序部署到生产环境&lt;/li>
&lt;li>用GitLab Pages部署静态网站&lt;/li>
&lt;li>仅将功能部署到一个Pod上，并让一定比例的用户群通过Canary Deployments访问临时部署的功能（PS：即灰度发布）&lt;/li>
&lt;li>在Feature Flags之后部署功能&lt;/li>
&lt;li>用GitLab Releases将发布说明添加到任意Git tag&lt;/li>
&lt;li>使用Deploy Boards查看在Kubernetes上运行的每个CI环境的当前运行状况和状态&lt;/li>
&lt;li>使用Auto Deploy将应用程序部署到Kubernetes集群中的生产环境&lt;/li>
&lt;/ul>
&lt;p>使用GitLab CI/CD，还可以：&lt;/p>
&lt;ul>
&lt;li>通过Auto DevOps轻松设置应用的整个生命周期&lt;/li>
&lt;li>将应用程序部署到不同的环境&lt;/li>
&lt;li>安装你自己的GitLab Runner&lt;/li>
&lt;li>Schedule pipelines&lt;/li>
&lt;li>使用安全测试报告（Security Test reports）检查应用程序漏洞&lt;/li>
&lt;/ul>
&lt;h1 id="gitlab-runner">GitLab Runner
&lt;/h1>&lt;ol>
&lt;li>GitLab-CI
 GitLab-CI就是一套配合GitLab使用的持续集成系统（当然，还有其它的持续集成系统，同样可以配合GitLab使用，比如Jenkins）。而且GitLab8.0以后的版本是默认集成了GitLab-CI并且默认启用的。&lt;/li>
&lt;li>GitLab-Runner
 GitLab-Runner是配合GitLab-CI进行使用的。GitLab里面的每一个工程都会定义一个属于这个工程的软件集成脚本，用来自动化地完成一些软件集成工作。当这个工程的仓库代码发生变动时，比如有人push了代码，GitLab就会将这个变动通知GitLab-CI。这时GitLab-CI会找出与这个工程相关联的Runner，并通知这些Runner把代码更新到本地并执行预定义好的执行脚本。
 所以，GitLab-Runner就是一个用来执行软件集成脚本的东西。你可以想象一下：Runner就像一个个的工人，而GitLab-CI就是这些工人的一个管理中心，所有工人都要在GitLab-CI里面登记注册，并且表明自己是为哪个工程服务的。当相应的工程发生变化时，GitLab-CI就会通知相应的工人执行软件集成脚本。如下图所示：&lt;/li>
&lt;/ol>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/gitlab-cicd/20190325191119620.png"
width="773"
height="606"
srcset="https://cyber-blog.github.io/p/gitlab-cicd/20190325191119620_hu9327950469716357547.png 480w, https://cyber-blog.github.io/p/gitlab-cicd/20190325191119620_hu11881963875153611974.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="127"
data-flex-basis="306px"
>&lt;/p>
&lt;p>​ GitLab-Runner可以分类三种类型：Shared （共享）、Group（组私有）、Specific （库私有）。
   Shared：这种Runner是所有工程都能够用的。只有系统管理员能够创建Shared类型的Runner。&lt;/p>
&lt;p>​ Group：指定组私有的runner，需要有组对应的权限。&lt;/p>
&lt;p>   Specific：这种Runner只能为指定的工程服务。拥有该工程访问权限的人都能够为该工程创建Shared类型的runner。&lt;/p>
&lt;h2 id="gitlab-runner安装">GitLab Runner安装
&lt;/h2>&lt;p>一般来说，构建任务都会占用很多的系统资源 (如编译代码)，而 GitLab CI 又是 GitLab 的一部分，如果由 GitLab CI 来运行构建任务的话，在执行构建任务的时候，GitLab 的性能会大幅下降。&lt;/p>
&lt;p>所以GitLab Runner可以安装到不同的机器上，所以在构建任务运行期间并不会影响到 GitLab 的性能。&lt;/p>
&lt;p>关于GitLab Runner的安装基本上分为三种方式:&lt;/p>
&lt;ul>
&lt;li>直接安装在物理机当中&lt;/li>
&lt;li>安装在Docker容器当中&lt;/li>
&lt;li>通过Helm安装在Kubernetes集群当中&lt;/li>
&lt;/ul>
&lt;h3 id="helm安装gitlab-runner">Helm安装GitLab Runner
&lt;/h3>&lt;p>添加 GitLab Helm 存储库:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">helm repo add gitlab https://charts.gitlab.io
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果使用 Helm 2，你必须初始化 Helm:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">helm init
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;p>配置GitLab Runner安装所需的配置文件&lt;code>values.yaml &lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt"> 10
&lt;/span>&lt;span class="lnt"> 11
&lt;/span>&lt;span class="lnt"> 12
&lt;/span>&lt;span class="lnt"> 13
&lt;/span>&lt;span class="lnt"> 14
&lt;/span>&lt;span class="lnt"> 15
&lt;/span>&lt;span class="lnt"> 16
&lt;/span>&lt;span class="lnt"> 17
&lt;/span>&lt;span class="lnt"> 18
&lt;/span>&lt;span class="lnt"> 19
&lt;/span>&lt;span class="lnt"> 20
&lt;/span>&lt;span class="lnt"> 21
&lt;/span>&lt;span class="lnt"> 22
&lt;/span>&lt;span class="lnt"> 23
&lt;/span>&lt;span class="lnt"> 24
&lt;/span>&lt;span class="lnt"> 25
&lt;/span>&lt;span class="lnt"> 26
&lt;/span>&lt;span class="lnt"> 27
&lt;/span>&lt;span class="lnt"> 28
&lt;/span>&lt;span class="lnt"> 29
&lt;/span>&lt;span class="lnt"> 30
&lt;/span>&lt;span class="lnt"> 31
&lt;/span>&lt;span class="lnt"> 32
&lt;/span>&lt;span class="lnt"> 33
&lt;/span>&lt;span class="lnt"> 34
&lt;/span>&lt;span class="lnt"> 35
&lt;/span>&lt;span class="lnt"> 36
&lt;/span>&lt;span class="lnt"> 37
&lt;/span>&lt;span class="lnt"> 38
&lt;/span>&lt;span class="lnt"> 39
&lt;/span>&lt;span class="lnt"> 40
&lt;/span>&lt;span class="lnt"> 41
&lt;/span>&lt;span class="lnt"> 42
&lt;/span>&lt;span class="lnt"> 43
&lt;/span>&lt;span class="lnt"> 44
&lt;/span>&lt;span class="lnt"> 45
&lt;/span>&lt;span class="lnt"> 46
&lt;/span>&lt;span class="lnt"> 47
&lt;/span>&lt;span class="lnt"> 48
&lt;/span>&lt;span class="lnt"> 49
&lt;/span>&lt;span class="lnt"> 50
&lt;/span>&lt;span class="lnt"> 51
&lt;/span>&lt;span class="lnt"> 52
&lt;/span>&lt;span class="lnt"> 53
&lt;/span>&lt;span class="lnt"> 54
&lt;/span>&lt;span class="lnt"> 55
&lt;/span>&lt;span class="lnt"> 56
&lt;/span>&lt;span class="lnt"> 57
&lt;/span>&lt;span class="lnt"> 58
&lt;/span>&lt;span class="lnt"> 59
&lt;/span>&lt;span class="lnt"> 60
&lt;/span>&lt;span class="lnt"> 61
&lt;/span>&lt;span class="lnt"> 62
&lt;/span>&lt;span class="lnt"> 63
&lt;/span>&lt;span class="lnt"> 64
&lt;/span>&lt;span class="lnt"> 65
&lt;/span>&lt;span class="lnt"> 66
&lt;/span>&lt;span class="lnt"> 67
&lt;/span>&lt;span class="lnt"> 68
&lt;/span>&lt;span class="lnt"> 69
&lt;/span>&lt;span class="lnt"> 70
&lt;/span>&lt;span class="lnt"> 71
&lt;/span>&lt;span class="lnt"> 72
&lt;/span>&lt;span class="lnt"> 73
&lt;/span>&lt;span class="lnt"> 74
&lt;/span>&lt;span class="lnt"> 75
&lt;/span>&lt;span class="lnt"> 76
&lt;/span>&lt;span class="lnt"> 77
&lt;/span>&lt;span class="lnt"> 78
&lt;/span>&lt;span class="lnt"> 79
&lt;/span>&lt;span class="lnt"> 80
&lt;/span>&lt;span class="lnt"> 81
&lt;/span>&lt;span class="lnt"> 82
&lt;/span>&lt;span class="lnt"> 83
&lt;/span>&lt;span class="lnt"> 84
&lt;/span>&lt;span class="lnt"> 85
&lt;/span>&lt;span class="lnt"> 86
&lt;/span>&lt;span class="lnt"> 87
&lt;/span>&lt;span class="lnt"> 88
&lt;/span>&lt;span class="lnt"> 89
&lt;/span>&lt;span class="lnt"> 90
&lt;/span>&lt;span class="lnt"> 91
&lt;/span>&lt;span class="lnt"> 92
&lt;/span>&lt;span class="lnt"> 93
&lt;/span>&lt;span class="lnt"> 94
&lt;/span>&lt;span class="lnt"> 95
&lt;/span>&lt;span class="lnt"> 96
&lt;/span>&lt;span class="lnt"> 97
&lt;/span>&lt;span class="lnt"> 98
&lt;/span>&lt;span class="lnt"> 99
&lt;/span>&lt;span class="lnt">100
&lt;/span>&lt;span class="lnt">101
&lt;/span>&lt;span class="lnt">102
&lt;/span>&lt;span class="lnt">103
&lt;/span>&lt;span class="lnt">104
&lt;/span>&lt;span class="lnt">105
&lt;/span>&lt;span class="lnt">106
&lt;/span>&lt;span class="lnt">107
&lt;/span>&lt;span class="lnt">108
&lt;/span>&lt;span class="lnt">109
&lt;/span>&lt;span class="lnt">110
&lt;/span>&lt;span class="lnt">111
&lt;/span>&lt;span class="lnt">112
&lt;/span>&lt;span class="lnt">113
&lt;/span>&lt;span class="lnt">114
&lt;/span>&lt;span class="lnt">115
&lt;/span>&lt;span class="lnt">116
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">## Specify a imagePullPolicy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">imagePullPolicy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">IfNotPresent&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## The GitLab Server URL (with protocol) that want to register the runner against&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/commands/README.html#gitlab-runner-register&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">gitlabUrl&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">https://gitlab.example.com/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## The registration token for adding new Runners to the GitLab server. This must&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## be retrieved from your GitLab instance.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/ee/ci/runners/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">runnerRegistrationToken&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Set the certsSecretName in order to pass custom certificates for GitLab Runner to use&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Provide resource name for a Kubernetes Secret Object in the same namespace,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## this is used to populate the /etc/gitlab-runner/certs directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/configuration/tls-self-signed.html#supported-options-for-self-signed-certificates&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## 如果GitLab使用了自签名的ssl证书则需要指定secret，详情见下一小节&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">#certsSecretName:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Configure the maximum number of concurrent jobs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-global-section&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">concurrent&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Defines in seconds how often to check GitLab for a new builds&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/configuration/advanced-configuration.html#the-global-section&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">checkInterval&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## For RBAC support:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## create 为false则不默认创建账户，推荐自动创建&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rbac&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">create&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">serviceAccountName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">your-service-account&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Run the gitlab-bastion container with the ability to deploy/manage containers of jobs&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## cluster-wide or only within namespace&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">clusterWideAccess&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## If RBAC is disabled in this Helm chart, use the following Kubernetes Service Account name.&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># serviceAccountName: default&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Configuration for the Pods that the runner launches for each new job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">runners&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Default container image to use for builds when none is specified&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ubuntu:20.04&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Configuration for the Pods that that the runner launches for each new job&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">config&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> [[runners]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> pre_clone_script = &amp;#34;echo &amp;#39;10.10.10.224 git.netstar.com&amp;#39; &amp;gt;&amp;gt; /etc/hosts&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> [runners.kubernetes]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> helper_image = &amp;#34;harbor.wangxingcloud.com/system/gitlab-runner-helper:x86_64-e95f89a0&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> image = &amp;#34;ubuntu:20.04&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> privileged = true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> [[runners.kubernetes.volumes.empty_dir]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> name = &amp;#34;docker-certs&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> mount_path = &amp;#34;/certs/client&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> medium = &amp;#34;Memory&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> [[runners.kubernetes.volumes.host_path]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> name = &amp;#34;docker&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> mount_path = &amp;#34;/var/run/docker.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> read_only = true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> host_path = &amp;#34;/var/run/docker.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Run all containers with the privileged flag enabled&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## This will allow the docker:stable-dind image to run if you need to run Docker&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## commands. Please read the docs before turning this on:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/executors/kubernetes.html#using-docker-dind&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">privileged&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Namespace to run Kubernetes jobs in (defaults to &amp;#39;default&amp;#39;)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># namespace:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Build Container specific configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">builds&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># cpuLimit: 200m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># memoryLimit: 256Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpuRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">100m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">memoryRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">128Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Service Container specific configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># cpuLimit: 200m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># memoryLimit: 256Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpuRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">100m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">memoryRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">128Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">## Helper Container specific configuration&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">helpers&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># cpuLimit: 200m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># memoryLimit: 256Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cpuRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">100m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">memoryRequests&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">128Mi&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Affinity for pod assignment&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## 主机调度-亲和性&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">affinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeAffinity&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">requiredDuringSchedulingIgnoredDuringExecution&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">nodeSelectorTerms&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">matchExpressions&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">kubernetes.io/os&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">operator&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">In&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">values&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">linux&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>values.yaml全部配置参数详情查看:&lt;/p>
&lt;p>&lt;a class="link" href="https://gitlab.com/gitlab-org/charts/gitlab-runner/blob/master/values.yaml" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/charts/gitlab-runner/blob/master/values.yaml&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>配置文件保存后输入如下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For Helm 2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install --namespace &amp;lt;NAMESPACE&amp;gt; --name gitlab-runner -f &amp;lt;CONFIG_VALUES_FILE&amp;gt; gitlab/gitlab-runner
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># For Helm 3&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install --namespace &amp;lt;NAMESPACE&amp;gt; gitlab-runner -f &amp;lt;CONFIG_VALUES_FILE&amp;gt; gitlab/gitlab-runner
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;code>&amp;lt;NAMESPACE&amp;gt;&lt;/code> 是你想要安装 GitLab Runner 的 Kubernetes 名称空间&lt;/p>
&lt;ul>
&lt;li>运行&lt;code>kubectl create namespace &amp;lt;NAMESPACE&amp;gt;&lt;/code> 创建新的命名空间&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;CONFIG_VALUES_FILE&amp;gt;&lt;/code> 是包含自定义配置的值文件的路径。参见&lt;a class="link" href="https://docs.gitlab.com/runner/install/kubernetes.html#configuring-gitlab-runner-using-the-helm-chart" target="_blank" rel="noopener"
> 使用 Helm Chart 配置 GitLab Runner&lt;/a> 来创建它&lt;/p>
&lt;/li>
&lt;li>
&lt;p>值得注意的是配置文件的第三项，如果GitLab使用的是自生成的证书则需要配置&lt;code>certsSecretName&lt;/code>的值，配置值为同一命名空间的Kubernetes secret的值&lt;/p>
&lt;/li>
&lt;li>
&lt;p>运行runner的时候报错&lt;code>ERROR: Job failed (system failure): secrets is forbidden: User &amp;quot;system:serviceaccount:gitlab:default&amp;quot; cannot create resource &amp;quot;secrets&amp;quot; in API group &amp;quot;&amp;quot; in the namespace &amp;quot;gitlab&amp;quot;&lt;/code>原因是没有特别指定serviceaccount 那么将使用默认账户 system:serviceaccount:&lt;NAMESPACE>:default
最终的原因就是没有创建 对应 namespaces 的 集群角色绑定&lt;code>clusterrolebinding&lt;/code>
执行命令，创建&lt;code>clusterrolebinding&lt;/code>解决&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">kubectl create clusterrolebinding gitlab-cluster-admin --clusterrole&lt;span class="o">=&lt;/span>cluster-admin --group&lt;span class="o">=&lt;/span>system:serviceaccounts --namespace&lt;span class="o">=&lt;/span>&amp;lt;NAMESPACE&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4 id="向gitlab-runner提供访问gitlab的自生成证书">向gitLab Runner提供访问gitLab的自生成证书
&lt;/h4>&lt;p>需要向 GitLab Runner Helm Chart 配置文件提供一个 Kubernetes Secret，它将会挂载在容器的 &lt;code>/etc/GitLab-Runner/certs&lt;/code>目录。&lt;/p>
&lt;p>运行如下命令创建Kubernetes secret&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">kubectl
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --namespace &amp;lt;NAMESPACE&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> create secret generic &amp;lt;SECRET_NAME&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --from-file&lt;span class="o">=&lt;/span>&amp;lt;CERTIFICATE_FILENAME&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>使用&lt;code>.crt&lt;/code>结尾的文件必须为&lt;code>gitlab.your-domain.com.crt&lt;/code>的固定格式&lt;/li>
&lt;li>&lt;code>SECRET_NAME&lt;/code> Kubernetes 的资源名称(例如:&lt;code>gitlab-domain-cert&lt;/code>)&lt;/li>
&lt;li>&lt;code>&amp;lt;CERTIFICATE_FILENAME&amp;gt;&lt;/code>.crt结尾的证书文件&lt;/li>
&lt;li>如果源文件&lt;code> &amp;lt;CERTIFICATE_FILENAME&amp;gt;&lt;/code> 不遵循 &lt;code>&amp;lt;gitlab-hostname.crt&amp;gt;&lt;/code> 格式，那么有必要指定在目标文件中使用的文件名:&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>最后在&lt;code>values.yaml&lt;/code>配置文件中配置secret的名称&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="c">## Set the certsSecretName in order to pass custom certificates for GitLab Runner to use&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## Provide resource name for a Kubernetes Secret Object in the same namespace,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## this is used to populate the /etc/gitlab-runner/certs directory&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">## ref: https://docs.gitlab.com/runner/configuration/tls-self-signed.html#supported-options-for-self-signed-certificates&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c">##&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">certsSecretName&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;SECRET NAME&amp;gt;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.gitlab.com/runner/install/kubernetes.html#providing-a-custom-certificate-for-accessing-gitlab" target="_blank" rel="noopener"
>https://docs.gitlab.com/runner/install/kubernetes.html#providing-a-custom-certificate-for-accessing-gitlab&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="使用helm-chart更新gitlab-runner">使用Helm Chart更新GitLab Runner
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">helm upgrade --namespace &amp;lt;NAMESPACE&amp;gt; -f &amp;lt;CONFIG_VALUES_FILE&amp;gt; &amp;lt;RELEASE-NAME&amp;gt; gitlab/gitlab-runner
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>&lt;code>&amp;lt;RELEASE-NAME&amp;gt;&lt;/code>是你在安装GitLab Runner时给出的名字，参考&lt;a class="link" href="https://docs.gitlab.com/runner/install/kubernetes.html#installing-gitlab-runner-using-the-helm-chart" target="_blank" rel="noopener"
> 使用Helm安装 GitLab Runner&lt;/a> 时使用的是&lt;code>gitlab-runner&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>如果你想更新到 GitLab Runner Helm Chart 的特定版本而不是最新的版本，在你的 Helm upgrade 命令中添加参数&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">-version &amp;lt; Runner Helm Chart version &amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h3 id="使用helm-chart删除gitlab-runner">使用Helm Chart删除GitLab Runner
&lt;/h3>&lt;p>要卸载 GitLab Runner Chart，请运行以下命令:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">helm delete --namespace &amp;lt;NAMESPACE&amp;gt; &amp;lt;RELEASE-NAME&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.gitlab.com/runner/install/kubernetes.html#required-configuration" target="_blank" rel="noopener"
>https://docs.gitlab.com/runner/install/kubernetes.html#required-configuration&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="离线安装gitlab-runner">离线安装Gitlab-runner
&lt;/h2>&lt;p>离线环境使用helm安装gitlab-runner。需要先将所需的docker镜像导入到离线环境的harbor中。&lt;/p>
&lt;p>在有网络的环境，运行下面命令生成k8s资源的yml文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">helm template --namespace &amp;lt;NAMESPACE&amp;gt; gitlab-runner -f &amp;lt;CONFIG_VALUES_FILE&amp;gt; gitlab/gitlab-runner &amp;gt; values.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>讲生成的yml文件复制到要离线安装的k8s环境后，运行&lt;code>kubectl apply -f values.yaml&lt;/code>命令&lt;/p>
&lt;blockquote>
&lt;ul>
&lt;li>
&lt;p>目前生成的&lt;code>template.yaml&lt;/code>文件中的所有资源没有命名空间的相关配置，需要手动添加&lt;/p>
&lt;/li>
&lt;li>
&lt;p>离线方式运行gitlab-runner需要重新指定执行器的gitlab-runner-helper镜像的位置 &lt;code>image: gitlab/gitlab-runner:alpine-v13.4.1&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>serviceAccountName: your-service-account&lt;/code> 需要修改&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">bash&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">(&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">executor&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docker&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">kubernetes&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">(&lt;/span>&lt;span class="p">...&lt;/span>&lt;span class="err">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">helper_image&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;my.registry.local/gitlab/gitlab-runner-helper:tag&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参考https://www.cnblogs.com/wu-wu/p/13269950.html&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h2 id="gitlab-runner安装当中需要注意的问题">gitlab-runner安装当中需要注意的问题
&lt;/h2>&lt;p>本章节记录介绍安装当中的坑以及解决办法&lt;/p>
&lt;h3 id="kubernetes集群有污点导致执行器无法启动的问题及解决办法">kubernetes集群有污点导致执行器无法启动的问题及解决办法
&lt;/h3>&lt;p>因为本次使用的kubernetes的机器中有污点&lt;code>taint&lt;/code>并且无法删除。在无法删除的情况下，需要给执行器启动的pos添加默认配置的污点容忍。这个问题只能通过修改gitlab-runner的&lt;code>config.toml&lt;/code>文件来解决,helm安装gitlab-runner的配置文件&lt;code>values.yaml&lt;/code>无法进行相关配置，并且因为使用helm安装的gitlab-runner的配置文件&lt;code>config.toml&lt;/code>是通过&lt;code>values.yaml&lt;/code>自动生成的，导致无法挂载数据卷进行配置。&lt;/p>
&lt;h4 id="解决方案">解决方案
&lt;/h4>&lt;p>gitlab-runner 容器启动时会运行脚本&lt;code>/bin/bash /scripts/entrypoint&lt;/code>。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>&lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /home/gitlab-runner/.gitlab-runner/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cp /scripts/config.toml /home/gitlab-runner/.gitlab-runner/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Register the runner&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 中间部分省略......&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Run pre-entrypoint-script&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> ! bash /scripts/pre-entrypoint-script&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">exit&lt;/span> &lt;span class="m">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 增加hosts域名解析&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;9r /scripts/hosts&amp;#39;&lt;/span> /home/gitlab-runner/.gitlab-runner/config.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 固定主机调度&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sed -i &lt;span class="s1">&amp;#39;38r /scripts/affinity.txt&amp;#39;&lt;/span> /home/gitlab-runner/.gitlab-runner/config.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt;&amp;gt;/home/gitlab-runner/.gitlab-runner/config.toml &lt;span class="s">&amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> [[runners.kubernetes.volumes.host_path]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name = &amp;#34;gitlab-runner-cache&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> mount_path = &amp;#34;/opt/cache&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> read_only = false
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> host_path = &amp;#34;/data/gitlab-runner/cache&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> [[runners.kubernetes.volumes.host_path]]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> name = &amp;#34;docker&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> mount_path = &amp;#34;/var/run/docker.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> read_only = true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> host_path = &amp;#34;/var/run/docker.sock&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> [runners.kubernetes.node_tolerations]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s"> &amp;#34;cattle.io/os=linux&amp;#34; = &amp;#34;NoSchedule&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Start the runner&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">exec&lt;/span> /entrypoint run --user&lt;span class="o">=&lt;/span>gitlab-runner &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --working-directory&lt;span class="o">=&lt;/span>/home/gitlab-runner
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>该脚本在gitlab-runner绑定的配置映射中进行配置。在该脚本的末尾追加以下内容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">node_tolerations&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s2">&amp;#34;cattle.io/os=linux&amp;#34;&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;NoSchedule&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.gitlab.com/runner/executors/kubernetes.html#define-keywords-in-the-configuration-toml" target="_blank" rel="noopener"
>https://docs.gitlab.com/runner/executors/kubernetes.html#define-keywords-in-the-configuration-toml&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2578" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/gitlab-runner/-/issues/2578&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="关于helm安装的gitlab-runner所启动的执行器经常因为could-not-resolve-hostgitdomaincom报错的问题">关于Helm安装的gitlab-runner所启动的执行器经常因为Could not resolve host:git.domain.com报错的问题
&lt;/h3>&lt;p>helm安装的gitlab-runner所启动的执行器为k8s中的pod。会有pod容器内无法解析gitlab所dns的域名的问题，并且是间歇性的，80%左右是会解析不到的。并且这些配置需要修改&lt;code>config.toml&lt;/code>。helm安装的gitlab-runner目前无法修改配置文件。&lt;/p>
&lt;p>目前解决办法同上，在配置映射的&lt;code>entrypoint&lt;/code>脚本的末尾添加命令&lt;code>sed -i '9r /scripts/hosts' /home/gitlab-runner/.gitlab-runner/config.toml&lt;/code>&lt;/p>
&lt;p>hosts的内容为&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">pre_clone_script&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;echo &amp;#39;10.10.0.18 git.wx.com&amp;#39; &amp;gt;&amp;gt; /etc/hosts&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4129" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/gitlab-runner/-/issues/4129&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://gitlab.com/gitlab-org/charts/gitlab-runner/-/merge_requests/265" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/charts/gitlab-runner/-/merge_requests/265&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="在容器中构建时使用docker">在容器中构建时使用docker
&lt;/h3>&lt;p>在容器中进行构建时如果需要用到docker时，目前采用的是操纵宿主机docker的方式，需要给runner启动的执行器挂载数据卷，&lt;code>config.toml&lt;/code>配置文件，在配置映射的&lt;code>entrypoint&lt;/code>脚本的末尾追加&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host_path&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;docker&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mount_path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/var/run/docker.sock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">read_only&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host_path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/var/run/docker.sock&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://docs.gitlab.com/runner/executors/kubernetes.html#using-docker-in-your-builds" target="_blank" rel="noopener"
>https://docs.gitlab.com/runner/executors/kubernetes.html#using-docker-in-your-builds&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="缓存相关配置">缓存相关配置
&lt;/h3>&lt;p>GitLab Runner对缓存方案的支持有限，目前采用挂载Volume的方式做缓存。安装GitLab Runner时默认使用&lt;code>/opt/cache&lt;/code>目录作为缓存空间。挂载数据卷并且，配置主机调度至固定节点（以上操作需要修改配置映射中的&lt;code>entrypoint&lt;/code>文件，&lt;code>entrypoint&lt;/code>文件详情见上面）&lt;/p>
&lt;p>配置固定主机节点&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="l">runners.kubernetes.affinity.node_affinity]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="l">runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution]]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">weight = 100&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">[[&lt;/span>&lt;span class="l">runners.kubernetes.affinity.node_affinity.preferred_during_scheduling_ignored_during_execution.preference.match_expressions]]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">key = &amp;#34;kubernetes.io/hostname&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">operator = &amp;#34;In&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">values = [&amp;#34;rancher-node2&amp;#34;]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>挂载数据卷&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-toml" data-lang="toml">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[[&lt;/span>&lt;span class="nx">runners&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">kubernetes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">volumes&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">host_path&lt;/span>&lt;span class="p">]]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;gitlab-runner-cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">mount_path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/opt/cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">read_only&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="kc">false&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">host_path&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;/data/gitlab-runner/cache&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://help.aliyun.com/document_detail/106968.html?aly_as=b8lTvr8V" target="_blank" rel="noopener"
>https://help.aliyun.com/document_detail/106968.html?aly_as=b8lTvr8V&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/xichenguan/article/details/101439395" target="_blank" rel="noopener"
>https://blog.csdn.net/xichenguan/article/details/101439395&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/5bug/p/12733755.html" target="_blank" rel="noopener"
>https://www.cnblogs.com/5bug/p/12733755.html&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="gitlab-runner-部署到k8s时报错deploymentextensions-demo-is-forbidden-user-systemserviceaccountgitlabdefault-cannot-get-resource-deployments-in-api-group-extensions-in-the-namespace-default">gitlab-runner 部署到k8s时报错:deployment.extensions demo is forbidden: user &amp;ldquo;system:serviceaccount:gitlab:default&amp;rdquo; cannot get resource deployments in api group extensions in the namespace default
&lt;/h3>&lt;p>原因为：k8s使用的RBAC权限访问控制，当前对namespace default 没有操作权限。默认对每一个命名空间有一个默认的serviceaccount ：default
&lt;img src="https://img-blog.csdnimg.cn/2019092511311630.png"
loading="lazy"
alt="在这里插入图片描述"
>
如果在CI里面没有特别指定serviceaccount 那么将使用默认账户 system:serviceaccount:gitlab:default
最终的原因就是没有创建 对应 namespaces 的 集群角色绑定clusterrolebinding
解决办法：
执行一下命令，创建clusterrolebinding即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">kubectl create clusterrolebinding gitlab-cluster-admin --clusterrole&lt;span class="o">=&lt;/span>cluster-admin --group&lt;span class="o">=&lt;/span>system:serviceaccounts --namespace&lt;span class="o">=&lt;/span>default
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="gitlab-cicd-的使用文档">GitLab CI/CD 的使用文档
&lt;/h2>&lt;p>为了使用GitLab CI/CD，你需要一个托管在GitLab上的应用程序代码库，并且在根目录中的&lt;code>.gitlab-ci.yml&lt;/code>文件中指定构建、测试和部署的脚本。&lt;/p>
&lt;p>在这个文件中，你可以定义要运行的脚本，定义包含的依赖项，选择要按顺序运行的命令和要并行运行的命令，定义要在何处部署应用程序，以及指定是否 要自动运行脚本或手动触发脚本。&lt;/p>
&lt;p>为了可视化处理过程，假设添加到配置文件中的所有脚本与在计算机的终端上运行的命令相同。&lt;/p>
&lt;p>一旦你已经添加了&lt;code>.gitlab-ci.yml&lt;/code>到仓库中，GitLab将检测到该文件，并使用名为GitLab Runner的工具运行你的脚本。该工具的操作与终端类似。&lt;/p>
&lt;p>这些脚本被分组到作业（jobs），它们共同组成一个流水线（pipeline）。流水线就是一次构建的完整的执行流程。&lt;/p>
&lt;h3 id="gitlab-ciyml">.gitlab-ci.yml
&lt;/h3>&lt;p>该文件规定了一个流水线(pipeline)，流水线中可以有多个作业（job），每个作业必须具有唯一的名称（不能使用关键字），每个作业时独立执行的。每个作业至少包含一个&lt;code>script&lt;/code>。&lt;/p>
&lt;h4 id="job">job
&lt;/h4>&lt;h5 id="before_script">before_script
&lt;/h5>&lt;p>定义shell脚本，该脚本在每个作业之前运行。该关键字也可以定义在文件的开头，作为全局默认执行。该关键字定义的脚本和&lt;code>script&lt;/code>定义的脚本在一个shell当中串联执行，如果失败导致整个作业的失败，其他作业将不再执行。但是作业失败不会影响&lt;code>after_script&lt;/code>运行。&lt;/p>
&lt;h5 id="script">script
&lt;/h5>&lt;p>指定运行的shell脚本，每个作业至少包含一个&lt;code>script&lt;/code>。可以是一条命令也可以是多条命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">job&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">unname -a&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">bundle exec rspec&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;code>script&lt;/code>命令将需要用单引号和双引号引起来。例如，包含冒号命令&lt;code>:&lt;/code>需要加引号，以便被YAML解析器当作字符串来解析。而不是一个&lt;code>key: value&lt;/code>。需要注意的特殊字符有:&lt;code>:&lt;/code>,&lt;code>{ }&lt;/code>,&lt;code>[ ]&lt;/code>,&lt;code>,&lt;/code>,&lt;code>&amp;amp;&lt;/code>,&lt;code>*&lt;/code>,&lt;code>#&lt;/code>,&lt;code>?&lt;/code>,&lt;code>|&lt;/code>,&lt;code>-&lt;/code>,&lt;code>&amp;lt; &amp;gt;&lt;/code>,&lt;code>=&lt;/code>,&lt;code>!&lt;/code>,&lt;code>%&lt;/code>,&lt;code>@&lt;/code>&lt;/p>
&lt;h5 id="after_script">after_script
&lt;/h5>&lt;p>定义作业之后运行的命令（包括失败的作业），指定脚本在新的shell中执行，与&lt;code>before_script&lt;/code>和&lt;code>script&lt;/code>分开。&lt;/p>
&lt;h5 id="tags">tags
&lt;/h5>&lt;p>用于指定作业所运行的runner。（结合runner配置的标签来使用）&lt;/p>
&lt;h5 id="allow_failure">allow_failure
&lt;/h5>&lt;p>允许作业失败，默认值为&lt;code>false&lt;/code>。&lt;/p>
&lt;h5 id="when">when
&lt;/h5>&lt;p>控制作业运行。&lt;/p>
&lt;ul>
&lt;li>&lt;code>on_success&lt;/code> 前面阶段中的所有作业都成功时才执行，默认值。&lt;/li>
&lt;li>&lt;code>on_failure&lt;/code>前面的阶段出现失败时运行。&lt;/li>
&lt;li>&lt;code>always&lt;/code>总是执行。&lt;/li>
&lt;li>&lt;code>manual&lt;/code>手动执行。&lt;/li>
&lt;li>&lt;code>delayed&lt;/code>延迟执行作业。&lt;code>start_in&lt;/code>指定延迟时间（秒）。&lt;/li>
&lt;/ul>
&lt;h5 id="timeout">timeout
&lt;/h5>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build.sh&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">timeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">3&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">hours 30 minutes&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">test&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rspec&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">timeout&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">3h 30m&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>作业级别的超时可以覆盖项目级别的超时，但不能超过runner特定的超时。&lt;/p>
&lt;h5 id="onlyexcept">only&amp;amp;except
&lt;/h5>&lt;p>该关键字逐渐被&lt;code>rules&lt;/code>替代&lt;/p>
&lt;ul>
&lt;li>&lt;code>only&lt;/code>定义构建哪些分支或标签的时会执行的作业。&lt;/li>
&lt;li>&lt;code>except&lt;/code>定义构建哪些分支或标签的时不会执行的作业。&lt;/li>
&lt;/ul>
&lt;h5 id="rules">rules
&lt;/h5>&lt;p>构建规则，rules不能和&lt;code>only&lt;/code>&amp;amp;&lt;code>except&lt;/code>组合使用&lt;/p>
&lt;p>可用规则&lt;/p>
&lt;ul>
&lt;li>
&lt;p>if&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">domain&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">condescan&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">codescan&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;codescan&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sleep 5;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;$domain == &amp;#39;example.com&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">manual&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">on_success&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">## 默认执行&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果domain的值匹配，则需要手动运行。&lt;/p>
&lt;p>不匹配on_sucess。&lt;/p>
&lt;p>条件判断从上到下，匹配成功则不会判断接下来的if。&lt;/p>
&lt;p>多条件匹配可以使用 &lt;code>&amp;amp;&amp;amp;&lt;/code> &lt;code>||&lt;/code>。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>changes （指定文件发生变化）&lt;/p>
&lt;p>接收一个文件路径的数组（指定代码库根路径的相对路径）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">changes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">Jenkinsfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>exists (指定文件存在)&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h5 id="artifacts">artifacts
&lt;/h5>&lt;p>编译时生成的文件统称为gitlab的制品，作业完成后制品将被发送到gitlab，可在gitlab ui中下载。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">release&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mvn package -U&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">artifacts&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 用于再和并请求 UI中公开作业制品，每个合并请求最多公开10个作业制品&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expose_as&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;artifact 1&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 通过name指定所创建的制品的名称。默认名称为artifacts&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># name: &amp;#34;$CI_JOB_NAME&amp;#34; # 作业名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;$CI_COMMIT_REF_NAME&amp;#34;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 分支名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 保存时间，默认30天&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">expire_in&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;10&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 10秒&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># expire_in: &amp;#39;3 week&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">target/*.jar&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">## 可以是文件也可以是目录。也可以是通配符&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="dependencies">dependencies
&lt;/h5>&lt;p>获取制品，定义要获取制品的列表，只能从当前阶段之前的阶段获取。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">unittest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">dependencies&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 定义作业名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h5 id="extends">extends
&lt;/h5>&lt;p>继承引入配置文件的作业&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">project&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;cidevops/cddevops-gitlabci-service&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;job/build.yml&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">extends&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">.build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>.build 的内容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">tags&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">$BUILD_SHELL&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">ls&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="stages">stages
&lt;/h4>&lt;p>用于定义作业可以使用的阶段，并且是全局定义。同一阶段的作业并行运行，不同阶段的作业顺序执行。&lt;/p>
&lt;h5 id="prepost">&lt;code>.pre&lt;/code>&amp;amp;&lt;code>.post&lt;/code>
&lt;/h5>&lt;p>&lt;code>.pre&lt;/code>和&lt;code>.post&lt;/code>无需定义默认存在的阶段，&lt;code>.pre&lt;/code>始终是整个流水线的第一个运行阶段。&lt;code>.post&lt;/code>始终是最后一个运行阶段。用户定义的阶段都在两者之间运行。&lt;/p>
&lt;h4 id="stage">stage
&lt;/h4>&lt;p>指定job所运行的阶段。依赖于全局定义的&lt;code>stages&lt;/code>。并且同一个&lt;code>stage&lt;/code>的作业可以并行执行。（同时运行需要注意runner配置的最大同时运行数）&lt;/p>
&lt;h4 id="variables">variables
&lt;/h4>&lt;p>定义变量，可以在全局定义。也可以在作业中定义。&lt;/p>
&lt;blockquote>
&lt;p>.gitlab-ci.yml 预设变量参考&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/github_35631540/article/details/107864258" target="_blank" rel="noopener"
>https://blog.csdn.net/github_35631540/article/details/107864258&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>关于变量方面的坑和问题 &lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab/-/issues/233289" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/gitlab/-/issues/233289&lt;/a>&lt;/p>
&lt;h4 id="workflow">workflow
&lt;/h4>&lt;p>顶级关键字用于是否创建整个流水线&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">domain&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">example.com&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">workflow&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;$domain == &amp;#39;example.com&amp;#39;&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c">## 可以设置为always或never，默认值为always。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">never&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="cache">cache
&lt;/h4>&lt;p>存储编译项目所需的运行时依赖项，指定项目工作空间中需要在作业之间缓存的文或目录。&lt;/p>
&lt;p>全局cache定义在作业之外，针对所有作业生效，作业中定义的cache优先级更高。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">my/files&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">echo &amp;#34;hello&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cache&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 可以配置特定分支的缓存，为每个不同的作业配置cache:key时，会为每个作业分配独立的cache。key可以使用任何预定义的变量，默认为default。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">key&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">paths&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">target/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># 缓存策略，默认在执行作业开始时下载文件，并在结束时重新上传文件。&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">policy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">pull&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 跳过下载步骤&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># policy: push # 跳过上传步骤&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="include">include
&lt;/h4>&lt;ul>
&lt;li>
&lt;p>local&lt;/p>
&lt;p>引入外部yaml或yml文件。引入同一代码库的文件，使用相对于根目录的路径进行引入，需要与配置文件在同一分支上。 （如果引入的配置文件和原文件有重复的部分则重复的部分不会生效）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">local&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;ci/localci.yml&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>file&lt;/p>
&lt;p>引入其他项目某一分支的文件&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">project&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">demo/demo-java-service&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">ref&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 分支&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;.gitlab-ci.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>template&lt;/p>
&lt;p>引入官方提供的&lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab/tree/master/lib/gitlab/ci/templates" target="_blank" rel="noopener"
>模板&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">include&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">template:Auto-DevOps.gitlab-ci.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>remote&lt;/p>
&lt;p>引入远程配置，通过http/https引入。引入的文件必须可以通过get请求公开访问，不支持身份验证&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">include：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">remote&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;https://gitlab.com/awesome-project/raw/master.gitlab-ci-template.yml&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ul>
&lt;blockquote>
&lt;p>自定义CI配置文件路径&lt;/p>
&lt;p>默认情况下会在项目的根目录查找&lt;code>.gitlab-ci.yml&lt;/code>文件，可以指定目录，也包括项目外的位置&lt;/p>
&lt;ul>
&lt;li>.gitlab-ci.yml #default&lt;/li>
&lt;li>.my/path/.gitlab-ci.yml&lt;/li>
&lt;li>&lt;a class="link" href="http://example.com/generate/ci/config.yml" target="_blank" rel="noopener"
>http://example.com/generate/ci/config.yml&lt;/a>&lt;/li>
&lt;li>.gitlab-ci.yml@mygroup/another-project # 文件名@项目名称&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;h4 id="image">image
&lt;/h4>&lt;p>执行器为docker或k8s时，默认在注册runner的时候需要填写一个基础镜像。如果指定了全局image则所有作业使用此image创建容器并在其中运行。如果全局未指定，则会查看作业中是否有指定，如果有则此job按照指定镜像创建容器并运行，没有则使用默认镜像。&lt;/p>
&lt;h4 id="services">services
&lt;/h4>&lt;p>工作期间启动另一个docker容器，并link到image定义的docker容器。这样两个镜像会互通，服务镜像可以运行任何应用程序，但是最常见的是运行数据库，如mysql。&lt;/p>
&lt;p>如果在运行单元测试时需要数据库则可以指定。&lt;/p>
&lt;h4 id="trigger">trigger
&lt;/h4>&lt;p>触发器。定义当前job执行完成后触发其他项目的流水线&lt;/p>
&lt;p>注意，触发器不能使用变量&lt;/p>
&lt;h4 id="environment">environment
&lt;/h4>&lt;p>如果在作业中定义环境，则gitlab可以去追踪。可以在gitlab ui的运维-》环境中去查看，如果environment指定且不存在该名称下的环境，则将自动创建一个新环境。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="l">deploy：&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">stage： deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo &amp;#34;deploy&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">environment&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">production&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 环境名称&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">http://example.com 环境地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="实战gitlab-cicd-自动化部署推送到harbor">实战:GitLab CI/CD 自动化部署推送到Harbor
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">package&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker_build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># maven打包&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">package&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">maven:3.6.3-openjdk-11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">package&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">${PACKAGE}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">cp target/demo-0.0.1-SNAPSHOT.jar /opt/cache/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 将jar包build为新的镜像并更新到k8s集群&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">docker_build&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10.10.10.233&lt;/span>&lt;span class="l">/system/docker-kubectl:latest&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">docker_build&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">FULL_IMAGE_NAME=10.10.10.233/test/demo:0.0.1-${CI_PIPELINE_ID}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">mkdir -p ${BUILD_DIR}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo ${FULL_IMAGE_NAME}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">cp /opt/cache/demo-0.0.1-SNAPSHOT.jar ${BUILD_DIR}/app.jar&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">cp Dockerfile ${BUILD_DIR}/Dockerfile&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">echo build $FULL_IMAGE_NAME&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker build -t $FULL_IMAGE_NAME ./${BUILD_DIR}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker login 10.10.10.233 -u${HARBOR_USERNAME} -p${HARBOR_PASSWORD}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">docker push $FULL_IMAGE_NAME&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sh ./apply_deployment.sh ${FULL_IMAGE_NAME}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 定义变量&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">variables&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">PACKAGE&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;mvn clean package -Dmaven.repo.local=/opt/cache/.m2/repository&amp;#39;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 构建命令&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">BUILD_DIR&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;docker_build&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Dockerfile&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-dockerfile" data-lang="dockerfile">&lt;span class="line">&lt;span class="cl">&lt;span class="k">FROM&lt;/span>&lt;span class="s"> 10.10.10.233/system/openjdk:11.0.5-jdk-stretch-tools-arthas&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">COPY&lt;/span> app.jar /opt/dubbo-app/app.jar&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">WORKDIR&lt;/span>&lt;span class="s"> /opt/dubbo-app&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">EXPOSE&lt;/span>&lt;span class="s"> 20880&lt;/span>&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="err">&lt;/span>&lt;span class="k">CMD&lt;/span> java -server &lt;span class="si">${&lt;/span>&lt;span class="nv">JAVA_DEBUG_OPTS&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">JAVA_OPTS&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">JMX_OPTS&lt;/span>&lt;span class="si">}&lt;/span> &lt;span class="si">${&lt;/span>&lt;span class="nv">JAVA_AGENT_OPTS&lt;/span>&lt;span class="si">}&lt;/span> -XX:+DisableExplicitGC -verbose:gc --add-opens&lt;span class="o">=&lt;/span>java.base/java.lang&lt;span class="o">=&lt;/span>ALL-UNNAMED --add-opens&lt;span class="o">=&lt;/span>java.base/java.lang.invoke&lt;span class="o">=&lt;/span>ALL-UNNAMED --add-opens&lt;span class="o">=&lt;/span>java.base/java.math&lt;span class="o">=&lt;/span>ALL-UNNAMED --add-opens&lt;span class="o">=&lt;/span>java.base/java.math&lt;span class="o">=&lt;/span>ALL-UNNAMED -Xlog:gc*:gc.log::filecount&lt;span class="o">=&lt;/span>10,filesize&lt;span class="o">=&lt;/span>&lt;span class="m">1048576&lt;/span> -jar app.jar&lt;span class="err">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>部署到k8s脚本&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/bash
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>mkdir -p /etc/deploy
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">echo&lt;/span> &lt;span class="s1">&amp;#39;YXBpVmV....&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span>base64 -d &amp;gt; /etc/deploy/config &lt;span class="c1"># 字符串内容为kubeconfig文件的base64编码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl -n default get Deployment demo
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">if&lt;/span> &lt;span class="o">[[&lt;/span> &lt;span class="nv">$?&lt;/span> -eq &lt;span class="m">0&lt;/span> &lt;span class="o">]]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;工作负载存在，更新负载镜像&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> kubectl &lt;span class="nb">set&lt;/span> image --record&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> Deployment/demo &lt;span class="nv">demo&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">1&lt;/span>&lt;span class="si">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;工作负载不存在，创建新工作负载&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> kubectl apply -f Service.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> kubectl apply -f Deployment.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>在gitlab-runner的k8s执行器容器内如果要访问k8s集群时，如果直接挂载数据卷的方式指定使用之前安装k8s时生成的config配置文件会存在间歇性访问不到k8s集群的情况，原因未知。&lt;/p>
&lt;p>以上访问方式是将config文件通过base64编码后再解码后访问的方式。&lt;/p>
&lt;p>输入以下命令讲config文件编码&lt;code>echo $(cat ~/.kube/config | base64) | tr -d &amp;quot; &amp;quot;&lt;/code>&lt;/p>
&lt;p>参考https://help.aliyun.com/document_detail/106968.html?aly_as=b8lTvr8V&lt;/p>
&lt;/blockquote>
&lt;h1 id="gitlab-cicd集成-sonarqube质量平台">gitlab CI/CD集成 SonarQube质量平台
&lt;/h1>&lt;p>&lt;strong>SonarQube&lt;/strong>（曾用名&lt;strong>Sonar&lt;/strong>（声纳）[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-1" target="_blank" rel="noopener"
>1]&lt;/a>）是一个&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e5%bc%80%e6%ba%90" target="_blank" rel="noopener"
>开源&lt;/a>的&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e8%bd%af%e4%bb%b6%e8%b4%a8%e9%87%8f" target="_blank" rel="noopener"
>代码质量&lt;/a>管理系统。&lt;/p>
&lt;ul>
&lt;li>支持超过25种编程语言[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-2" target="_blank" rel="noopener"
>2]&lt;/a>：&lt;a class="link" href="https://zh.wikipedia.org/wiki/Java" target="_blank" rel="noopener"
>Java&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/C%e8%af%ad%e8%a8%80" target="_blank" rel="noopener"
>C&lt;/a>/&lt;a class="link" href="https://zh.wikipedia.org/wiki/C%2B%2B" target="_blank" rel="noopener"
>C++&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/C%e2%99%af" target="_blank" rel="noopener"
>C#&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/PHP" target="_blank" rel="noopener"
>PHP&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Apache_Flex" target="_blank" rel="noopener"
>Flex&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Groovy" target="_blank" rel="noopener"
>Groovy&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/JavaScript" target="_blank" rel="noopener"
>JavaScript&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Python" target="_blank" rel="noopener"
>Python&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/PL/SQL" target="_blank" rel="noopener"
>PL/SQL&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/COBOL" target="_blank" rel="noopener"
>COBOL&lt;/a>等。（不过有些是&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e5%95%86%e4%b8%9a%e8%bd%af%e4%bb%b6" target="_blank" rel="noopener"
>商业软件&lt;/a>插件）&lt;/li>
&lt;li>可以在Android开发中使用&lt;/li>
&lt;li>提供&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e9%87%8d%e5%a4%8d%e4%bb%a3%e7%a0%81" target="_blank" rel="noopener"
>重复代码&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e4%bb%a3%e7%a0%81%e9%a3%8e%e6%a0%bc" target="_blank" rel="noopener"
>编码标准&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95" target="_blank" rel="noopener"
>单元测试&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e4%bb%a3%e7%a2%bc%e8%a6%86%e8%93%8b%e7%8e%87" target="_blank" rel="noopener"
>代码覆盖率&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e5%be%aa%e7%92%b0%e8%a4%87%e9%9b%9c%e5%ba%a6" target="_blank" rel="noopener"
>代码复杂度&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e9%98%b2%e5%be%a1%e6%80%a7%e7%bc%96%e7%a8%8b" target="_blank" rel="noopener"
>潜在Bug&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e6%b3%a8%e9%87%8a_%28%e8%ae%a1%e7%ae%97%e6%9c%ba%e8%af%ad%e8%a8%80%29" target="_blank" rel="noopener"
>注释&lt;/a>和&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1" target="_blank" rel="noopener"
>软件设计&lt;/a>报告[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-methodsandtools-3" target="_blank" rel="noopener"
>3]&lt;/a>[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-sonarinaction-4" target="_blank" rel="noopener"
>4]&lt;/a>&lt;/li>
&lt;li>提供了指标历史记录、计划图（“时间机器”）和微分查看&lt;/li>
&lt;li>提供了完全自动化的分析：与&lt;a class="link" href="https://zh.wikipedia.org/wiki/Apache_Maven" target="_blank" rel="noopener"
>Maven&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Apache_Ant" target="_blank" rel="noopener"
>Ant&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Gradle" target="_blank" rel="noopener"
>Gradle&lt;/a>和&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e6%8c%81%e7%bb%ad%e9%9b%86%e6%88%90" target="_blank" rel="noopener"
>持续集成&lt;/a>工具（&lt;a class="link" href="https://zh.wikipedia.org/w/index.php?title=Atlassian_Bamboo&amp;amp;action=edit&amp;amp;redlink=1" target="_blank" rel="noopener"
>Atlassian Bamboo&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Jenkins_%28%e8%bd%af%e4%bb%b6%29" target="_blank" rel="noopener"
>Jenkins&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Hudson_%28%e8%bd%af%e4%bb%b6%29" target="_blank" rel="noopener"
>Hudson&lt;/a>等）[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-jteam-5" target="_blank" rel="noopener"
>5]&lt;/a>[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-g3global-6" target="_blank" rel="noopener"
>6]&lt;/a>[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-slideshare-7" target="_blank" rel="noopener"
>7]&lt;/a>&lt;/li>
&lt;li>与&lt;a class="link" href="https://zh.wikipedia.org/wiki/Eclipse" target="_blank" rel="noopener"
>Eclipse&lt;/a>开发环境集成&lt;/li>
&lt;li>与&lt;a class="link" href="https://zh.wikipedia.org/wiki/JIRA" target="_blank" rel="noopener"
>JIRA&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/Mantis" target="_blank" rel="noopener"
>Mantis&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/wiki/LDAP" target="_blank" rel="noopener"
>LDAP&lt;/a>、&lt;a class="link" href="https://zh.wikipedia.org/w/index.php?title=Fortify&amp;amp;action=edit&amp;amp;redlink=1" target="_blank" rel="noopener"
>Fortify&lt;/a>等外部工具集&lt;/li>
&lt;li>支持扩展插件[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-zauber-8" target="_blank" rel="noopener"
>8]&lt;/a>[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-infoq-9" target="_blank" rel="noopener"
>9]&lt;/a>&lt;/li>
&lt;li>利用&lt;a class="link" href="https://zh.wikipedia.org/w/index.php?title=SQALE&amp;amp;action=edit&amp;amp;redlink=1" target="_blank" rel="noopener"
>SQALE&lt;/a>计算&lt;a class="link" href="https://zh.wikipedia.org/wiki/%e6%8a%80%e6%9c%af%e5%80%ba%e5%8a%a1" target="_blank" rel="noopener"
>技术债务&lt;/a>[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-10" target="_blank" rel="noopener"
>10]&lt;/a>&lt;/li>
&lt;li>支持&lt;a class="link" href="https://zh.wikipedia.org/wiki/Apache_Tomcat" target="_blank" rel="noopener"
>Tomcat&lt;/a>。不过计划从SonarQube 4.1起终止对Tomcat的支持[&lt;a class="link" href="https://zh.wikipedia.org/wiki/SonarQube#cite_note-11" target="_blank" rel="noopener"
>11]&lt;/a>。&lt;/li>
&lt;/ul>
&lt;h2 id="sonarqube的安装">SonarQube的安装
&lt;/h2>&lt;p>SonarQube需要依赖Postgresql数据库，都使用docker进行安装&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建数据卷相关的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/postgresql/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /var/lib/postgresql
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /data/postgresql/data/ /var/lib/postgresql/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name postgresql -p 5432:5432 -e &lt;span class="nv">POSTGRES_USER&lt;/span>&lt;span class="o">=&lt;/span>sonar -e &lt;span class="nv">POSTGRES_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>sonar -e &lt;span class="nv">POSTGRE_DB&lt;/span>&lt;span class="o">=&lt;/span>sonar -v /data/postgresql/data:/var/lib/postgresql/data -d postgres
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建数据卷相关的目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/sonarqube/data
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/sonarqube/extensions
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /data/sonarqube/logs
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /opt/sonarqube/extensions/plugins
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod -R &lt;span class="m">777&lt;/span> /data/sonarqube/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">chmod -R &lt;span class="m">777&lt;/span> /opt/sonarqube/
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ln -s /data/sonarqube /opt/sonarqube
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 运行镜像&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">docker run --name sonarqube &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--link postgresql &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">SONARQUBE_JDBC_URL&lt;/span>&lt;span class="o">=&lt;/span>jdbc:postgresql://postgresql:5432/sonar &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">SONAR_JDBC_USERNAME&lt;/span>&lt;span class="o">=&lt;/span>sonar &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-e &lt;span class="nv">SONAR_JDBC_PASSWORD&lt;/span>&lt;span class="o">=&lt;/span>sonar &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-p 9000:9000 &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-d &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-v /data/sonarqube/data:/opt/sonarqube/data &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-v /data/sonarqube/extensions:/opt/sonarqube/extensions &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>-v /data/sonarqube/logs:/opt/sonarqube/logs &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>sonarqube
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>docker镜像启动报错：Elasticsearch: Max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144]&lt;/p>
&lt;p>在镜像启动的物理机运行如下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sysctl -w vm.max_map_count&lt;span class="o">=&lt;/span>&lt;span class="m">262144&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;a class="link" href="https://stackoverflow.com/questions/51445846/elasticsearch-max-virtual-memory-areas-vm-max-map-count-65530-is-too-low-inc" target="_blank" rel="noopener"
>参考自StackOverflow&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="sonarqube整合gitlab-cicd-分析java代码">SonarQube整合gitlab CI/CD 分析Java代码
&lt;/h2>&lt;p>该分析基于sonar-scanner的maven插件。&lt;/p>
&lt;p>&lt;strong>全局配置&lt;/strong>&lt;/p>
&lt;p>首先修改maven的全局配置文件&lt;code>settings.xml&lt;/code>，添加下图示例内容&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;pluginGroups&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;pluginGroup&amp;gt;&lt;/span>org.sonarsource.scanner.maven&lt;span class="nt">&amp;lt;/pluginGroup&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/pluginGroups&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;profiles&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;profile&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>sonar&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;activation&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;activeByDefault&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/activeByDefault&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/activation&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- Optional URL to server. Default value is http://localhost:9000 --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;sonar.host.url&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> http://myserver:9000
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/sonar.host.url&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/properties&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/profile&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/profiles&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/settings&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>分析&lt;/strong>&lt;/p>
&lt;p>需要在&lt;code>.gitlab-ci.yml&lt;/code>添加如下&lt;code>stage&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">code_analysis&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">maven:3.6.3-openjdk-11&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">code_analysis&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> mvn clean verify sonar:sonar \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> -Dsonar.projectKey=${CI_PROJECT_NAME} \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> -Dsonar.host.url=http://10.10.10.236:31548 \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> -Dsonar.login=username \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> -Dsonar.password=password \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> -Dmaven.repo.local=/opt/cache/.m2/repository \
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> --settings /opt/cache/settings.xml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>参考自&lt;a class="link" href="https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;h2 id="在gitlab-cicd使用当中遇到的问题">在gitlab CI/CD使用当中遇到的问题
&lt;/h2>&lt;h3 id="trigger触发器不能使用变量去定义">trigger触发器不能使用变量去定义
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="c"># 使用变量去填充是不行的，只能直接写死&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">server-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">server-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">${TEST}/${TEST}-server&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 直接写死才能正确触发&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">server-deploy&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">server-deploy&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">trigger&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">ndp/foo-server&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">only&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="l">master&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="在同一个流水线当中的job之间变量无法传递">在同一个流水线当中的job之间变量无法传递
&lt;/h3>&lt;p>解决方法参考如下&lt;/p>
&lt;p>&lt;a class="link" href="https://gitlab.com/gitlab-org/gitlab/-/issues/233289" target="_blank" rel="noopener"
>https://gitlab.com/gitlab-org/gitlab/-/issues/233289&lt;/a>&lt;/p></description></item><item><title>Jenkins REST API介绍</title><link>https://cyber-blog.github.io/p/jenkins-restful-api/</link><pubDate>Mon, 12 Oct 2020 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/jenkins-restful-api/</guid><description>&lt;p>​ Jenkins具有丰富的插件生态，足以满足我们日常工作的需求，但如果我们想通过具体的Jenkins任务直接对外提供服务，而不想将内部的具体实现对外暴露(否则，需添加对应的用户权限，通过页面执行job)；可以对外直接提供接口，第三方直接调用接口（比如提供给开发，提测前回归冒烟用例集），执行相应的Jenkins任务并获取任务结果。&lt;/p>
&lt;p>​ Jenkins API没有统一的入口，而是采用“…/api/” 的REST API样式，其中”…” 表示Jenkins资源的URL。&lt;/p>
&lt;p>​ 常见的Jenkins资源包括：站点（实例）、Job和Build。&lt;/p>
&lt;p>​ Jenkins的Remote API以REST-like的形式进行提供，通过对特定的API执行POST请求即可。&lt;/p>
&lt;p>​ 可以提前提供job的config的ftl模板，然后使用freemarker自动生成对应的job模板。后台调用jenkins RESTApi接口动态创建不同的JOB。&lt;/p>
&lt;blockquote>
&lt;p>官方文档地址&lt;/p>
&lt;p>&lt;a class="link" href="https://wiki.jenkins.io/display/JENKINS/Remote&amp;#43;access&amp;#43;API" target="_blank" rel="noopener"
>https://wiki.jenkins.io/display/JENKINS/Remote+access+API&lt;/a>&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/jenkins-restful-api/jenkins-restful-api.png"
width="1634"
height="695"
srcset="https://cyber-blog.github.io/p/jenkins-restful-api/jenkins-restful-api_hu15039139395672165498.png 480w, https://cyber-blog.github.io/p/jenkins-restful-api/jenkins-restful-api_hu18057476931163360269.png 1024w"
loading="lazy"
class="gallery-image"
data-flex-grow="235"
data-flex-basis="564px"
>&lt;/p>
&lt;/blockquote>
&lt;h2 id="rest-api">REST API
&lt;/h2>&lt;p>站点所有支持的API都可以通过地址http://jenkins.dev.com/api 获取大致描述&lt;/p>
&lt;h4 id="job-api">JOB API
&lt;/h4>&lt;h6 id="获取job的相关信息">获取JOB的相关信息
&lt;/h6>&lt;p>​ 我们通过url直接获取job的相关信息，生成xml格式或者JSON，如获取job的信息，要获取json的地址&lt;/p>
&lt;p>​ &lt;code>http://jenkins.dev.com/job/service-sample/api/json&lt;/code>&lt;/p>
&lt;p>​ 可以获取name，build等的所有信息。将url中的json改为xml则可以获取xml格式的相关信息&lt;/p>
&lt;h6 id="获取build的信息">获取build的信息
&lt;/h6>&lt;p>​ 刚才我们获取的是job所有的相关信息，可能我们还需要获取某一次build的信息&lt;/p>
&lt;pre>&lt;code> 则可以通过地址`http://jenkins.dev.com/job/service-sample/{build_number}/api/json`获取
&lt;/code>&lt;/pre>
&lt;h6 id="执行build">执行build
&lt;/h6>&lt;p>​ 不带参数执行，POST请求&lt;/p>
&lt;p>​ &lt;code>http://jenkins.dev.com/job/service-sample/build&lt;/code>&lt;/p>
&lt;p>​ 带参数执行，POST请求&lt;/p>
&lt;p>​ &lt;code>http://jenkins.dev.com/job/service-sample/buildWithParameters&lt;/code>&lt;/p>
&lt;h6 id="获取configxml">获取config.xml
&lt;/h6>&lt;p>​ JOB的配置信息，通过地址&lt;code>http://jenkins.dev.com/job/service-sample/config.xml&lt;/code>获取到的是一个xml的格式，这个里面包括了详细的配置信息。&lt;/p>
&lt;h6 id="信息过滤">信息过滤
&lt;/h6>&lt;p>​ Jenkins API将Jenkins资源模型抽象为树形结构，可以通过tree来指定返回Jenkins资源的层次。之前获取的所有相关信息，可以通过添加参数tree=XXX[]，来过滤出你所感兴趣的节点，类似于正则表达式 详细的可以参考，http://jenkins.dev.com/api的&amp;quot;Controlling the amount of data you fetch&amp;quot;这一节&lt;/p>
&lt;blockquote>
&lt;p>假设通过&lt;code>http://jenkins.dev.com/job/service-sample/api/json&lt;/code> 会获取所有的信息 ，那么添加 &lt;code>tree=builds[*] &lt;/code>可以获取所有builds下的节点&lt;/p>
&lt;p>直接http get请求 &lt;code>http://192.168.6.224:8080/job/pythontest/api/json?tree=builds[*]&lt;/code>&lt;/p>
&lt;/blockquote>
&lt;h4 id="站点-api">站点 API
&lt;/h4>&lt;h6 id="站点信息查询">站点信息查询
&lt;/h6>&lt;p>&lt;code>http://jenkins.dev.com/api/json&lt;/code>可以查询到站点中所有的job信息&lt;/p>
&lt;blockquote>
&lt;p>查询同样支持，通过tree进行过滤，通过请求&lt;code>http://jenkins.dev.com/api/json?&amp;amp;tree=jobs[name[*]]&lt;/code> 可以过滤出所有jobs的name&lt;/p>
&lt;/blockquote>
&lt;h6 id="创建job">创建JOB
&lt;/h6>&lt;p>​ 要创建一个Job，首先要明白每个Job的配置信息都保存在config.xml中。假设我们要新创建一个job,叫 &lt;code>testjob&lt;/code> 那么第一步，要在Jenkins的安装目录下，找到子目录&lt;code>\jobs&lt;/code>，创建一个名为&lt;code>testjob&lt;/code>的目录。如果不创建这个目录，直接调用API，会失败。&lt;/p>
&lt;p>​ 然后准备config.xml文件，作为job的配置信息，可以从刚才的service-sample配置直接拷贝得到，然后简单修改下name。举例通过Postman进行，访问的API地址，请求方法为POST，需要身份验证。&lt;/p>
&lt;p>&lt;code>http://192.168.6.224:8080/createItem?name=testjob &lt;/code>&lt;/p>
&lt;p>Content-Type值为&lt;code>application/xml &lt;/code>&lt;/p>
&lt;p>请求的Boyd中类型选择为binary。选择config.xml文件。&lt;/p>
&lt;h2 id="安全">安全
&lt;/h2>&lt;p>在调用Jenkins API 时需要以HTTP Basic Auth验证方式提供用户名和密码。&lt;/p>
&lt;p>另外，在Jenkins 2之后默认开启CSRF protection （跨域访问伪造保护），对有些Jenkins API的调用还需要提供Jenkins-Crumb；否则会出现”403 No valid crumb was included in the request“ 的错误。&lt;/p>
&lt;p>&lt;strong>获取Jenkins生成的crumb值&lt;/strong>:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通过浏览器直接打开：http://jenkins.dev.com/crumbIssuer/api/xml&lt;/p>
&lt;/li>
&lt;li>
&lt;p>返回结果类似：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;defaultCrumbIssuer&lt;/span> &lt;span class="na">_class=&lt;/span>&lt;span class="s">&amp;#34;hudson.security.csrf.DefaultCrumbIssuer&amp;#34;&lt;/span>&lt;span class="nt">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;crumb&amp;gt;&lt;/span>068ab0b4e0622b374d8822b22cee8b18&lt;span class="nt">&amp;lt;/crumb&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;crumbRequestField&amp;gt;&lt;/span>Jenkins-Crumb&lt;span class="nt">&amp;lt;/crumbRequestField&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/defaultCrumbIssuer&amp;gt;&lt;/span>1234
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>以通过Postman”执行一次新的build“为例:&lt;/strong>&lt;/p>
&lt;ol>
&lt;li>选择HTTP POST方法&lt;/li>
&lt;li>输入URL: &lt;a class="link" href="http://jenkins.dev.com/job/service-sample/build" target="_blank" rel="noopener"
>http://jenkins.dev.com/job/service-sample/build&lt;/a>&lt;/li>
&lt;li>选择Authorization Type为Basic Auth，并输入Username和Password （Jenkins用户名和密码）&lt;/li>
&lt;li>在Headers中填入一个新的header:
&lt;ul>
&lt;li>Key为Jenkins-Crumb&lt;/li>
&lt;li>Value为上面一步获取到的Jenkins生成的crumb值&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ol>
&lt;h2 id="java-api">JAVA API
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>com.offbytwo.jenkins&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>jenkins-client&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>0.3.8&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ JAVA API使用Jenkins Client&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">JenkinsServer&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jenkins&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">JenkinsServer&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">URI&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;http://jenkins.dev.com/&amp;#34;&lt;/span>&lt;span class="p">),&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;admin&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s">&amp;#34;password&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ JenkinsServer 类提供了进入 API 的主入口点。您可以根据 Jenkins 服务器的位置和(可选)用户名和密码/令牌创建对它的引用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Job&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jobs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jenkins&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getJobs&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ 返回所有job，job的名称（小写）为key的Map。Job 类仅提供摘要信息(名称和 url)。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">JobWithDetails job = jobs.get(&amp;#34;My Job&amp;#34;).details();
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ 获取指定job。JobWithDetails 类提供了Job的相信信息。&lt;/p>
&lt;h4 id="使用java-api构建">使用JAVA API构建
&lt;/h4>&lt;p>​ 示例代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="n">JobWithDetails&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jenkinsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;service-sample&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 执行参数&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;dev&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;BRANCH&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="s">&amp;#34;master&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">QueueReference&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">reference&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">job&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">params&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 获取构建的queueItem&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">QueueItem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queueItem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jenkinsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getQueueItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">QueueReference&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queuePart&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 获取执行对象，如果为空则还没有构建结束&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Executable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">executable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">queueItem&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getExecutable&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c1">// 构建结束后获取构建结果和构建日志,构建没有结束则会报错&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">Build&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">jenkinsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getBuild&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">queueItem&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">BuildWithDetails&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">details&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">build&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">details&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">BuildResult&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">result&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">details&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getResult&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">logs&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">details&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getConsoleOutputText&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="java-api创建job">JAVA API创建JOB
&lt;/h4>&lt;p>​ 示例代码&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="cm">/**
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> * 配置文件为xml格式以字符串类型传入
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cm"> */&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="n">jenkinsServer&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createJob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;jobName&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">configXmlStr&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>参考资料&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/nklinsirui/article/details/80832005#%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3" target="_blank" rel="noopener"
>https://blog.csdn.net/nklinsirui/article/details/80832005#%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/zjsupermanblog/archive/2017/07/26/7238422.html" target="_blank" rel="noopener"
>https://www.cnblogs.com/zjsupermanblog/archive/2017/07/26/7238422.html&lt;/a>&lt;/p>
&lt;/blockquote></description></item><item><title>内部 CA 证书管理</title><link>https://cyber-blog.github.io/p/ca-manage/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/ca-manage/</guid><description>&lt;img src="https://cyber-blog.github.io/p/ca-manage/cover.png" alt="Featured image of post 内部 CA 证书管理" />&lt;h2 id="生成-ca-证书">生成 CA 证书
&lt;/h2>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成 KEY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl genrsa -out ca.key &lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成证书&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl req -x509 -new -nodes -sha512 -days &lt;span class="m">3650&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -subj &lt;span class="s2">&amp;#34;/C=CN/ST=省/L=市/O=组织/OU=组织单位/CN=常用名(或域名)&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -key ca.key &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -out ca.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="导入-ca-证书">导入 CA 证书
&lt;/h2>&lt;p>内部人员需要把该 ca.crt 证书添加到受信任的根证书中，这样通过改 CA 证书生成的其他证书也会被信任。&lt;/p>
&lt;h3 id="windows">Windows
&lt;/h3>&lt;p>Windows 运行输入 certmgr.msc 然后添加。操作如下图所示：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/ca-manage/ca-manage.png"
width="768"
height="502"
srcset="https://cyber-blog.github.io/p/ca-manage/ca-manage_hu7322496937184039996.png 480w, https://cyber-blog.github.io/p/ca-manage/ca-manage_hu6699336193131837673.png 1024w"
loading="lazy"
alt="在这里插入图片描述"
class="gallery-image"
data-flex-grow="152"
data-flex-basis="367px"
>&lt;/p>
&lt;h3 id="centos导入-ca-证书">CentOS导入 CA 证书
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果没有 ca-certificates 就安装&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yum install -y ca-certificates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 把 ca.crt 证书放到下面目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">/etc/pki/ca-trust/source/anchors
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行下面命令更新证书&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">update-ca-trust
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果根证书是以 *.pem 结尾，需要转换成crt，然后再执行上述步骤。命令如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl x509 -in ca.pem -inform PEM -out ca.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="debian导入ca证书">Debian导入CA证书
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 一般情况下应该是已经有安装的了&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install ca-certificates
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 建立local目录是为了方便区分这是自己填加的证书，可以自定义，但一定要在/usr/share/ca-certificates目录下&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir -p /usr/share/ca-certificates/local
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 如果根证书是以 *.pem 结尾，需要转换成crt，然后再执行上述步骤。命令如下：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl x509 -in ca.pem -inform PEM -out ca.crt
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 将CA证书复制至/usr/share/ca-certificates/local目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行下面命令后会进入一个图形化界面，第一个界面选yes，然后选中刚刚添加的证书，回车即可&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">dpkg-reconfigure ca-certificates
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="使用-ca-证书生成其他证书">使用 CA 证书生成其他证书
&lt;/h2>&lt;p>例如生成泛域名证书：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成 KEY&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl genrsa -out *.majiang.com.key &lt;span class="m">4096&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 生成证书请求&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl req -sha512 -new &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -subj &lt;span class="s2">&amp;#34;/C=CN/ST=河北省/L=石家庄市/O=MJ/OU=MJ/CN=*.majiang.com&amp;#34;&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -key *.majiang.com.key &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -out *.majiang.com.csr
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置证书信息，主要是泛域名时，可以指定额外的 x.com&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &amp;gt; majiang.com.ext &lt;span class="s">&amp;lt;&amp;lt;-EOF
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">authorityKeyIdentifier=keyid,issuer
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">basicConstraints=CA:FALSE
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">keyUsage = digitalSignature, nonRepudiation, keyEncipherment, dataEncipherment
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">extendedKeyUsage = serverAuth
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">subjectAltName = @alt_names
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[alt_names]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">DNS.1=*.majiang.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">DNS.2=majiang.com
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用 CA 证书生成具体的证书&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">openssl x509 -req -sha512 -days &lt;span class="m">3650&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -extfile majiang.com.ext &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -CA ca.crt -CAkey ca.key -CAcreateserial &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -in *.majiang.com.csr &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> -out *.majiang.com.crt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>操作过程中生成的下面两个关键的文件：&lt;/p>
&lt;p>私钥：&lt;code>*.majiang.com.key&lt;/code>
公钥：&lt;code>*.majiang.com.crt&lt;/code>
网站配置使用上面两个文件即可。&lt;/p>
&lt;p>参考链接&lt;/p>
&lt;p>&lt;a class="link" href="https://blog.csdn.net/isea533/article/details/106397248" target="_blank" rel="noopener"
>https://blog.csdn.net/isea533/article/details/106397248&lt;/a>&lt;/p>
&lt;p>&lt;a class="link" href="https://github.com/goharbor/harbor/blob/v1.9.3/docs/configure_https.md" target="_blank" rel="noopener"
>https://github.com/goharbor/harbor/blob/v1.9.3/docs/configure_https.md&lt;/a>
&lt;a class="link" href="https://gist.github.com/Soarez/9688998" target="_blank" rel="noopener"
>https://gist.github.com/Soarez/9688998&lt;/a>&lt;/p></description></item><item><title>Ranchar CentOS 安装指南</title><link>https://cyber-blog.github.io/p/ranchar-install/</link><pubDate>Tue, 21 Jan 2020 00:00:00 +0000</pubDate><author>majiang213@foxmail.com (majiang)</author><guid>https://cyber-blog.github.io/p/ranchar-install/</guid><description>&lt;img src="https://cyber-blog.github.io/p/ranchar-install/cover.png" alt="Featured image of post Ranchar CentOS 安装指南" />&lt;blockquote>
&lt;p>&lt;a class="link" href="https://developer.aliyun.com/mirror/centos?spm=a2c6h.13651102.0.0.3e221b1175Oh74" target="_blank" rel="noopener"
>yum安装慢的解决方法，修改yum源为阿里云&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h2 id="1docker安装配置">1.Docker安装配置
&lt;/h2>&lt;h3 id="11-防火墙配置">1.1 防火墙配置
&lt;/h3>&lt;p>禁用防火墙&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">systemctl disable firewalld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>关闭防火墙&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">systemctl stop firewalld
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>禁用 SELinux，目的是让容器可以读取主机文件系统&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">setenforce &lt;span class="m">0&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置禁用 SELinux,修改 SELINUX 为 disabled&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">vi /etc/sysconfig/selinux
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nv">SELINUX&lt;/span>&lt;span class="o">=&lt;/span>disabled
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#SELINUX=enforcing&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>禁用 swap 分区&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#禁用当前的 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">swap sudo swapoff -a
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">#同时永久禁掉swap分区，打开如下文件注释掉swap那一行 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo vi /etc/fstab
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="12-挂载磁盘">1.2 挂载磁盘
&lt;/h3>&lt;blockquote>
&lt;p>&lt;strong>挂载磁盘，参考：&lt;/strong> &lt;a class="link" href="https://blog.csdn.net/isea533/article/details/94393429" target="_blank" rel="noopener"
>Linux 不重启(动态)挂载磁盘以及简单的数据迁移&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>一般购买服务器的时候会挂载一个100G以上的硬盘，需要先对硬盘进行格式化和挂载配置，然后修改 docker 配置为该挂载的路径。下面是磁盘的相关操作步骤。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>通过 &lt;code>fdisk -l&lt;/code> 查看系统挂载的磁盘，阿里云中通常第二个磁盘为 &lt;code>/dev/vdb&lt;/code> ，如果磁盘没有分区和格式化，先进行第 2 步操作。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>对磁盘分区，执行 &lt;code>fdisk /dev/vdb&lt;/code> 进入配置后，输入 &lt;code>n&lt;/code> ，后续提示全部使用默认设置，最后输入 &lt;code>w&lt;/code> 写入配置进行保存。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>格式化磁盘，使用 &lt;code>mkfs.ext4 /dev/vdb1&lt;/code> 进行格式化。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>输入命令编辑配置文件 &lt;code>vi /etc/fstab&lt;/code> ，在最后一行添加如下配置：&lt;/p>
&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">/dev/vdb1 /data ext4 defaults &lt;span class="m">1&lt;/span> &lt;span class="m">2&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>​ 手工和上面的配置对齐好看就行。&lt;/p>
&lt;p>5 .挂载目录，在根目录创建 &lt;code>/data&lt;/code> 目录，然后使用命令 &lt;code>mount -a&lt;/code> 或 &lt;code> mount /dev/vdb1 /data&lt;/code>进行挂载，这种方式重启后会失效，还需继续下一步配置。&lt;/p>
&lt;ol start="6">
&lt;li>接下来就可以使用 &lt;code>/data&lt;/code> 目录了。&lt;/li>
&lt;/ol>
&lt;h3 id="13-安装docker">1.3 安装docker
&lt;/h3>&lt;p>在阿里巴巴开源镜像站搜docker-ce。帮助中给了一个地址：&lt;/p>
&lt;blockquote>
&lt;p>&lt;a class="link" href="https://developer.aliyun.com/article/110806" target="_blank" rel="noopener"
>https://developer.aliyun.com/article/110806&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>使用官方安装脚本自动安装 （仅适用于公网环境）&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">curl -fsSL https://get.docker.com &lt;span class="p">|&lt;/span> bash -s docker --mirror Aliyun
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>安装完成后先别着急设置 docker 自动启动和启动服务。没有启动过 docker 的情况下，配置目录还不存在，先创建 &lt;code>mkdir -p /etc/docker&lt;/code> ，然后在 &lt;code>/data&lt;/code>下面创建一个 docker 目录（命令： &lt;code>mkdir /data/docker&lt;/code> ），然后编辑配置文件 &lt;code>vi /etc/docker/daemon.json&lt;/code> 添加如下配置：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-json" data-lang="json">&lt;span class="line">&lt;span class="cl">&lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;registry-mirrors&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;https://dockerhub.azk8s.cn&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s2">&amp;#34;https://reg-mirror.qiniu.com&amp;#34;&lt;/span>&lt;span class="p">],&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;#34;graph&amp;#34;&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;/data/docker&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>配置好docker 后，可以设置开机启动和启动服务了。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 开机启动 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl &lt;span class="nb">enable&lt;/span> docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 启动服务 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">systemctl start docker
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="14-docker离线安装">1.4 docker离线安装
&lt;/h4>&lt;p>在没有外网连接的特殊环境下安装docker的步骤&lt;/p>
&lt;blockquote>
&lt;p>参考自：https://www.centlinux.com/2019/02/install-docker-ce-on-offline-centos-7-machine.html&lt;/p>
&lt;/blockquote>
&lt;p>首先找到一台有外网的linux服务器运行如下命令&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Dockerce 需要一些在 EPEL (enterpriselinux 的额外包) yum 存储库中可用的软件包。因此，我们必须首先安装 epelyum 存储库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum install -y epel-release.noarch
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用yum-config-manager安装 Docker CE yum 存储库&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum-config-manager --add-repo&lt;span class="o">=&lt;/span>https://download.docker.com/linux/centos/docker-ce.repo
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>启用 dockerce (Nightly) yum 存储库。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum-config-manager --enable docker-ce-nightly
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>我们在 Linux 服务器中添加了两个 yum 存储库，因此，我们应该为 yum 包管理器构建缓存。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">yum makecache fast
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>下载 Docker CE 和软件依赖&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建一个下载 dockerce 和相关软件包的目录。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir ~/docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ~/docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行命令下载 dockerce 和依赖包。&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">yumdownloader --resolve docker-ce
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar cvzf ~/docker.tar.gz *
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>将下载的这些包安装在没有外网链接的服务器上&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建文件夹&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">mkdir docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 解压缩&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">tar xvf docker.tar.gz -C ~/docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> docker
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 安装并忽略依赖关系&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">rpm -ivh --replacefiles --replacepkgs *.rpm
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="15-修改hostname">1.5 修改hostname
&lt;/h3>&lt;p>根据本次安装的集群规模为每台服务器修改为规律的hostname&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">hostnamectl set-hostname master1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="2-kubectl下载安装">2. kubectl下载安装
&lt;/h2>&lt;blockquote>
&lt;p>国内直接使用阿里巴巴开源镜像站安装：&lt;/p>
&lt;p>&lt;a class="link" href="https://opsx.alibaba.com/mirror" target="_blank" rel="noopener"
>https://opsx.alibaba.com/mirror&lt;/a>&lt;/p>
&lt;p>从列表找到 kubernetes，点击帮助，显示如下信息。&lt;/p>
&lt;p>&lt;strong>重要提示：&lt;/strong>&lt;/p>
&lt;p>可以从安裝列表去掉 kubeadm、kubelet，只安装 kubectl&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>Debian / Ubuntu&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">apt-get update &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> apt-get install -y apt-transport-https
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">curl https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg &lt;span class="p">|&lt;/span> apt-key add -
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt;/etc/apt/sources.list.d/kubernetes.list
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">deb https://mirrors.aliyun.com/kubernetes/apt/ kubernetes-xenial main
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">apt-get install -y kubectl
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>CentOS / RHEL / Fedora&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">cat &lt;span class="s">&amp;lt;&amp;lt;EOF &amp;gt; /etc/yum.repos.d/kubernetes.repo
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">[kubernetes]
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">name=Kubernetes
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64/
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">enabled=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">gpgcheck=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">repo_gpgcheck=1
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="s">EOF&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>如果需要离线安装的话,则在在线环境安装之后将可执行的二进制&lt;code>kubectl&lt;/code>文件复制出来即可&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 查找文件位置，找到后复制出来&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">find / -name &lt;span class="s2">&amp;#34;kubectl&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;h2 id="3-rke下载安装">3. rke下载安装
&lt;/h2>&lt;p>&lt;strong>下载RKE二进制文件&lt;/strong>在您的工作站上，打开Web浏览器并导航到我们的&lt;a class="link" href="https://github.com/rancher/rke/releases/tag/v1.2.4" target="_blank" rel="noopener"
>RKE版本页面&lt;/a>。下载适用于您的操作系统和体系结构的最新RKE安装程序：&lt;/p>
&lt;ul>
&lt;li>MacOS：rke_darwin-amd64&lt;/li>
&lt;li>Linux（Intel / AMD）：rke_linux-amd64&lt;/li>
&lt;li>Linux（ARM 32位）：rke_linux-arm&lt;/li>
&lt;li>Linux（ARM 64位）：rke_linux-arm64&lt;/li>
&lt;li>Windows（32位）：rke_windows-386.exe&lt;/li>
&lt;li>Windows（64位）：rke_windows-amd64.exe&lt;/li>
&lt;/ul>
&lt;p>将RKE二进制文件复制到您的文件夹中 $PATH 并重命名 rke（或 rke.exe 用于 Windows）。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># MacOS &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mv rke_darwin-amd64 rke
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 增加可执行权限 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod +x rke
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Linux &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mv rke_linux-amd64 rke
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 增加可执行权限 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod +x rke
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Windows PowerShell &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;gt; mv rke_windows-amd64.exe rke.exe
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 验证安装：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ rke --version
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 输出类似下面版本信息 rke version v1.0.5&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="4-helm3-下载安装">4. helm3 下载安装
&lt;/h2>&lt;blockquote>
&lt;p>官方文档：&lt;a class="link" href="https://helm.sh/docs/intro/install/" target="_blank" rel="noopener"
>Installing Helm&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>针对 Linux 系统，使用下面的命令进行安装：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">700&lt;/span> get_helm.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ./get_helm.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="5-ssh-key各个节点的配置">5. ssh-key各个节点的配置
&lt;/h2>&lt;p>假设分别为 NODE1, NODE2, NODE3 3个节点。使用的 &lt;em>root&lt;/em> 账号生成ssh-key。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ ssh-keygen -t rsa
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 之后会有一些默认选项和可以手工配置的选项，可以自行配制，或者一直回车用默认值 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 执行完成后，会生成两个文件 &lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your identification has been saved in /root/.ssh/id_rsa.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Your public key has been saved in /root/.ssh/id_rsa.pub.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>查看 &lt;code>id_rsa.pub&lt;/code> 文件，&lt;strong>复制文件内容&lt;/strong>。在每个节点上，切换到rancher用户，然后执行如下命令&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 rancher 用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ useradd rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加到 docker 组&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ usermod -aG docker rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 切换到前面创建的用户&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ su rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 进入自己的 home 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">cd&lt;/span> ~
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 创建 .ssh 目录&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ mkdir .ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 写入NODE1的root用户的公钥&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ &lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;复制的内容&amp;#34;&lt;/span> &amp;gt;&amp;gt; .ssh/authorized_keys
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 设置权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">700&lt;/span> .ssh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ chmod &lt;span class="m">644&lt;/span> .ssh/authorized_key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 配置后可以在 NODE1 测试&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 连接成功后通过 exit 退出&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">$ ssh rancher@NODE2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>特别注意！&lt;/strong>&lt;/p>
&lt;p>两个潜在的坑，ssh配置authorized_keys后仍然需要输入密码的问题&lt;/p>
&lt;ol>
&lt;li>
&lt;p>注意 $HOME/.ssh 目录 或 $HOME目录的权限 最好是700，我就在这里栽跟头了。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>注意 uthorized_keys 的权限 chmod 644 authorized_keys 这个也是要注意的。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;h2 id="6--rke-配置集群">6. rke 配置集群
&lt;/h2>&lt;h3 id="61-rke配置离线集群">6.1 rke配置离线集群
&lt;/h3>&lt;p>在离线环境当中安装集群时，要求您使用一个 Linux 工作站，它可以访问互联网和您的私有镜像库。请确保至少有 20GB 的磁盘空间可用。如果要使用 ARM64 主机，则镜像仓库必须支持 Docker Manifest。截至 2020 年 4 月，Amazon Elastic Container Registry 不支持 Docker Manifest 功能。&lt;/p>
&lt;blockquote>
&lt;h4 id="查找您用的-rancher-版本所需要的资源">查找您用的 Rancher 版本所需要的资源
&lt;/h4>&lt;ol>
&lt;li>
&lt;p>浏览我们的&lt;a class="link" href="https://github.com/rancher/rancher/releases" target="_blank" rel="noopener"
>版本发布页面&lt;/a>，查找您想安装的 Rancher v2.x.x 版本。不要下载标记为 &lt;code>rc&lt;/code> 或 &lt;code>Pre-release&lt;/code> 的版本，因为它们在生产环境下是不稳定的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>从发行版 &lt;strong>Assets&lt;/strong> 部分下载以下文件，这些文件是离线环境下安装 Rancher 所必需的：&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Release 文件&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>rancher-images.txt&lt;/code>&lt;/td>
&lt;td>此文件包含安装 Rancher、创建集群和运行 Rancher 工具所需的镜像列表。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rancher-save-images.sh&lt;/code>&lt;/td>
&lt;td>这个脚本会从 DockerHub 中拉取在文件&lt;code>rancher-images.txt&lt;/code>中描述的所有镜像，并将它们保存为文件&lt;code>rancher-images.tar.gz&lt;/code>。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>rancher-load-images.sh&lt;/code>&lt;/td>
&lt;td>这个脚本会载入文件&lt;code>rancher-images.tar.gz&lt;/code>中的镜像，并将它们推送到您自己的私有镜像库。&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;/li>
&lt;/ol>
&lt;h4 id="收集-cert-manager-镜像">收集 cert-manager 镜像
&lt;/h4>&lt;p>如果您使用自己的证书，或者要在外部负载均衡器上终止 TLS，请跳过此步骤。&lt;/p>
&lt;p>在安装高可用过程中，如果选择使用 Rancher 默认的自签名 TLS 证书，则还必须将 &lt;a class="link" href="https://hub.helm.sh/charts/jetstack/cert-manager" target="_blank" rel="noopener"
>&lt;code>cert-manager&lt;/code>&lt;/a> 镜像添加到 &lt;code>rancher-images.txt&lt;/code> 文件中。如果使用自己的证书，则跳过此步骤。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>获取最新的&lt;code>cert-manager&lt;/code> Helm chart，解析模板,获取镜像详细信息：&lt;/p>
&lt;blockquote>
&lt;p>&lt;strong>注意：&lt;/strong> 由于&lt;code>cert-manager&lt;/code>最近的改动，您需要升级&lt;code>cert-manager&lt;/code>版本。如果您要升级 Rancher 并且使用&lt;code>cert-manager&lt;/code>的版本低于 v0.12.0，请看我们的&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/options/upgrading-cert-manager/_index" target="_blank" rel="noopener"
>升级文档&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm repo add jetstack https://charts.jetstack.io
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm repo update
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm fetch jetstack/cert-manager --version v0.12.0
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm template ./cert-manager-&amp;lt;version&amp;gt;.tgz &lt;span class="p">|&lt;/span> grep -oP &lt;span class="s1">&amp;#39;(?&amp;lt;=image: &amp;#34;).*(?=&amp;#34;)&amp;#39;&lt;/span> &amp;gt;&amp;gt; ./rancher-images.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>对镜像列表进行排序和唯一化，去除重复的镜像源：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sort -u rancher-images.txt -o rancher-images.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h4 id="将镜像保存到您的工作站中">将镜像保存到您的工作站中
&lt;/h4>&lt;ol>
&lt;li>
&lt;p>为&lt;code>rancher-save-images.sh&lt;/code> 文件添加可执行权限：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">chmod +x rancher-save-images.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>执行脚本&lt;code>rancher-save-images.sh&lt;/code>并以&lt;code>--image-list ./rancher-images.txt&lt;/code> 作为参数，创建所有需要镜像的压缩包：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">./rancher-save-images.sh --image-list ./rancher-images.txt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>结果：&lt;/strong> Docker 会开始拉取用于离线安装所需的镜像。这个过程会花费几分钟时间。完成时，您的当前目录会输出名为&lt;code>rancher-images.tar.gz&lt;/code>的压缩包。请确认输出文件是否存在。&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h4 id="推送镜像到私有镜像库">推送镜像到私有镜像库
&lt;/h4>&lt;p>下一步，您将使用脚本将文件 &lt;code>rancher-images.tar.gz&lt;/code> 中的镜像上传到您自己的私有镜像库。&lt;/p>
&lt;p>文件 &lt;code>rancher-images.txt&lt;/code> 和 &lt;code>rancher-images.tar.gz&lt;/code> 应该位于工作站中运行 &lt;code>rancher-load-images.sh&lt;/code> 脚本的同一目录下。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>登录私有镜像库：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">docker login &amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>为 &lt;code>rancher-load-images.sh&lt;/code> 添加可执行权限：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">chmod +x rancher-load-images.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>使用脚本 &lt;code>rancher-load-images.sh&lt;/code>提取&lt;code>rancher-images.tar.gz&lt;/code>文件中的镜像，根据文件&lt;code>rancher-images.txt&lt;/code>中的镜像列表对提取的镜像文件重新打 tag 并推送到您的私有镜像库：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">./rancher-load-images.sh --image-list ./rancher-images.txt --registry &amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>参考自&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/other-installation-methods/air-gap/prepare-nodes/_index" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;p>参考下面的示例创建rancher-cluster.yml文件，替换 nodes 3个节点的配置信息。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yml" data-lang="yml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">nodes&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.0.28&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">controlplane,worker,etcd]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.0.30&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">worker,etcd]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">address&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">192.168.0.26&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">role&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="l">worker,etcd]&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">services&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">etcd&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">snapshot&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">creation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">6h&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">retention&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">24h&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">kube-controller&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="c"># CIDR pool used to assign IP addresses to pods in the cluster&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">cluster_cidr&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">10.90.0.0&lt;/span>&lt;span class="l">/16&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="c"># 如果有私有的镜像仓库则可选该配置&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">private_registries&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">url&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># 私有镜像库地址&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">user&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">rancher&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">password&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s2">&amp;#34;*********&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">is_default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>&lt;strong>常见的RKE节点选项&lt;/strong>&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;strong>Option&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Required&lt;/strong>&lt;/th>
&lt;th>&lt;strong>Description&lt;/strong>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>address&lt;/code>&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>公共DNS或IP地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>user&lt;/code>&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>可以运行docker命令的用户&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>role&lt;/code>&lt;/td>
&lt;td>yes&lt;/td>
&lt;td>分配给节点的Kubernetes角色列表&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>internal_address&lt;/td>
&lt;td>no&lt;/td>
&lt;td>内部集群流量的私有DNS或IP地址&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ssh_key_path&lt;/td>
&lt;td>no&lt;/td>
&lt;td>用于对节点进行身份验证的SSH私钥的路径（默认&lt;code>~/.ssh/id_rsa&lt;/code>)&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>高级配置&lt;/strong>&lt;/p>
&lt;p>RKE有许多配置选项可用于自定义安装以适合您的特定环境。&lt;/p>
&lt;p>有关选项和功能的完整列表，请参阅&lt;a class="link" href="https://rancher.com/docs/rke/latest/en/config-options/" target="_blank" rel="noopener"
>RKE文档&lt;/a>。&lt;/p>
&lt;p>要为&lt;strong>更大&lt;/strong>的Rancher安装调整您的etcd集群，请参阅&lt;a class="link" href="https://rancher.com/docs/rancher/v2.x/en/installation/resources/advanced/etcd/" target="_blank" rel="noopener"
>etcd设置指南&lt;/a>。&lt;/p>
&lt;p>&lt;strong>特别注意&lt;/strong>：如果使用了阿里云等公有云环境时，确保主机之间端口能够互相访问，例如在阿里云&lt;/p>
&lt;p>配置：&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/image-20210118144125499.png"
loading="lazy"
alt="image-20210118144125499"
>&lt;/p>
&lt;/blockquote>
&lt;p>根据自己的配置修改保存好&lt;code> rancher-cluster.yml&lt;/code> 后，执行下面的命令：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">rke up --config ./rancher-cluster.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>该命令根据网速等多种情况，需要等待很久。这期间输出的部分日志如下：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>root@localhost ~&lt;span class="o">]&lt;/span>&lt;span class="c1"># rke up --config ./rancher-cluster.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> Initiating Kubernetes cluster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>certificates&lt;span class="o">]&lt;/span> Generating admin certificates and kubeconfig
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> Successfully Deployed state file at &lt;span class="o">[&lt;/span>./rancher-cluster.rkestate&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> Building Kubernetes cluster
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>dialer&lt;span class="o">]&lt;/span> Setup tunnel &lt;span class="k">for&lt;/span> host &lt;span class="o">[&lt;/span>192.168.0.1&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>dialer&lt;span class="o">]&lt;/span> Setup tunnel &lt;span class="k">for&lt;/span> host &lt;span class="o">[&lt;/span>192.168.0.2&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>dialer&lt;span class="o">]&lt;/span> Setup tunnel &lt;span class="k">for&lt;/span> host &lt;span class="o">[&lt;/span>192.168.0.3&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>network&lt;span class="o">]&lt;/span> Deploying port listener containers
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>network&lt;span class="o">]&lt;/span> Pulling image &lt;span class="o">[&lt;/span>rancher/rke-tools:v0.1.34&lt;span class="o">]&lt;/span> on host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>10.10.1.238&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>network&lt;span class="o">]&lt;/span> Pulling image &lt;span class="o">[&lt;/span>rancher/rke-tools:v0.1.34&lt;span class="o">]&lt;/span> on host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>10.10.1.241&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0000&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>network&lt;span class="o">]&lt;/span> Pulling image &lt;span class="o">[&lt;/span>rancher/rke-tools:v0.1.34&lt;span class="o">]&lt;/span> on host
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">[&lt;/span>10.10.1.242&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">INFO&lt;span class="o">[&lt;/span>0030&lt;span class="o">]&lt;/span> &lt;span class="o">[&lt;/span>network&lt;span class="o">]&lt;/span> Successfully pulled image &lt;span class="o">[&lt;/span>rancher/rke-tools:v0.1.34&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">on host &lt;span class="o">[&lt;/span>10.10.1.241&lt;span class="o">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>集群创建成功后，在当前目录下面有以下文件：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">-rw-r----- &lt;span class="m">1&lt;/span> root root &lt;span class="m">5382&lt;/span> Aug &lt;span class="m">1&lt;/span> 16:17 kube_config_rancher-cluster.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r----- &lt;span class="m">1&lt;/span> root root &lt;span class="m">114422&lt;/span> Aug &lt;span class="m">1&lt;/span> 16:18 rancher-cluster.rkestate
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">-rw-r--r-- &lt;span class="m">1&lt;/span> root root &lt;span class="m">423&lt;/span> Aug &lt;span class="m">1&lt;/span> 15:50 rancher-cluster.yml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>RKE 自动创建了一个 &lt;code>kube_config_rancher-cluster.yml&lt;/code> ，这个文件有 &lt;code>kubectl&lt;/code> 和 &lt;code>helm&lt;/code> 的凭据。&lt;/p>
&lt;blockquote>
&lt;h3 id="保存您的文件">保存您的文件
&lt;/h3>&lt;p>&lt;strong>重要&lt;/strong> 以下文件需要被维护，用来故障排查和升级集群。&lt;/p>
&lt;p>将以下文件的副本保存在安全的位置：&lt;/p>
&lt;ul>
&lt;li>&lt;code>rancher-cluster.yml&lt;/code>：RKE 配置文件&lt;/li>
&lt;li>&lt;code>kube_config_rancher-cluster.yml&lt;/code>：&lt;a class="link" href="https://docs.rancher.cn/docs/rke/kubeconfig/_index" target="_blank" rel="noopener"
>Kubeconfig 文件&lt;/a>&lt;/li>
&lt;li>&lt;code>rancher-cluster.rkestate&lt;/code>：&lt;a class="link" href="https://docs.rancher.cn/docs/rke/installation/_index" target="_blank" rel="noopener"
>Kubernetes 集群状态文件&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>注意：&lt;/strong> 后两个文件名的“rancher-cluster”部分取决于您如何命名 RKE 集群的配置文件。&lt;/p>
&lt;/blockquote>
&lt;p>将&lt;code> kube_config_rancher-cluster.yml&lt;/code> 复制到&lt;code> $HOME/.kube/config&lt;/code> ，如果想在其他节点通过&lt;code>kubectl &lt;/code>访问集群，将该文件复制到其他节点的相同路径下。
现在可以通过 &lt;code>kubectl &lt;/code>来查看当前的节点状态：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">$ kubectl get nodes
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">NAME STATUS ROLES AGE VERSION
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.0.1 Ready controlplane,etcd,worker 16m v1.14.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.0.2 Ready worker 16m v1.14.3
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">192.168.0.3 Ready worker 16m v1.14.3
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="7helm安装rancher">7.helm安装rancher
&lt;/h2>&lt;blockquote>
&lt;p>参考文档：&lt;a class="link" href="https://rancher.com/docs/rancher/v2.x/en/installation/k8s-install/helm-rancher/" target="_blank" rel="noopener"
>helm-rancher&lt;/a>&lt;/p>
&lt;p>离线安装参考&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/other-installation-methods/air-gap/install-rancher/_index" target="_blank" rel="noopener"
>文档&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;h3 id="71-添加稳定版helm-chart仓库">7.1 添加稳定版Helm Chart仓库
&lt;/h3>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>如果为离线环境安装的话则参考以下步骤执行：&lt;/strong>&lt;/p>
&lt;p>从可以访问 Internet 的系统中，获取最新的 Rancher Helm Chart，然后将内容复制到可以访问 Rancher Server 集群的系统中。&lt;/p>
&lt;ol>
&lt;li>
&lt;p>如果您还没有在有互联网访问的系统上安装&lt;code>helm&lt;/code>。注意：请参考&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/options/helm-version/_index" target="_blank" rel="noopener"
>Helm 版本要求&lt;/a>来选择一个 Helm 版本来安装 Rancher。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>使用&lt;code>helm repo add&lt;/code>来添加仓库，不同的地址适应不同的 Rancher 版本，请替换命令中的&lt;code>&amp;lt;CHART_REPO&amp;gt;&lt;/code>，替换为&lt;code>latest&lt;/code>，&lt;code>stable&lt;/code>或&lt;code>alpha&lt;/code>。更多信息请参考&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/options/server-tags/_index" target="_blank" rel="noopener"
>如何选择 Rancher 版本&lt;/a>。&lt;/p>
&lt;ul>
&lt;li>&lt;code>latest&lt;/code>： 最新版，建议在尝试新功能时使用。&lt;/li>
&lt;li>&lt;code>stable&lt;/code>：稳定版，建议生产环境中使用。&lt;/li>
&lt;li>&lt;code>alpha&lt;/code>：预览版， 未来版本的实验性预览。&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm repo add rancher-&amp;lt;CHART_REPO&amp;gt; https://releases.rancher.com/server-charts/&amp;lt;CHART_REPO&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>获取最新的 Rancher Chart，您会看到对应的 tgz 文件下载到本地。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm fetch rancher-&amp;lt;CHART_REPO&amp;gt;/rancher
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;/ol>
&lt;h3 id="72-为rancher创建名称空间">7.2 为Rancher创建名称空间
&lt;/h3>&lt;p>我们需要定义一个名称空间，应在该名称空间中安装由Chart创建的资源。这应该始终是&lt;code>cattle-system&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl create namespace cattle-system
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="73-选择您的ssl配置">7.3 选择您的SSL配置
&lt;/h3>&lt;p>Rancher Server 在默认情况下被设计为安全的，并且需要 SSL/TLS 配置。&lt;/p>
&lt;p>当在离线环境的 Kubernetes 中安装 Rancher 时，推荐两种证书生成方式。&lt;/p>
&lt;blockquote>
&lt;p>**注意：**如果要在外部终止 SSL/TLS，请参阅&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/options/chart-options/_index" target="_blank" rel="noopener"
>在外部负载均衡器上终止 TLS&lt;/a>。&lt;/p>
&lt;/blockquote>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>设置&lt;/th>
&lt;th>Chart 选项&lt;/th>
&lt;th>描述&lt;/th>
&lt;th>是否需要 cert-manager？&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>Rancher 生成的自签名证书&lt;/td>
&lt;td>&lt;code>ingress.tls.source=rancher&lt;/code>&lt;/td>
&lt;td>使用 Rancher 生成的 CA 签发的自签名证书 此项为&lt;strong>默认选项&lt;/strong>。在渲染 Rancher Helm 模板时不需要传递此项。&lt;/td>
&lt;td>是&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>已有的证书&lt;/td>
&lt;td>&lt;code>ingress.tls.source=secret&lt;/code>&lt;/td>
&lt;td>通过创建 Kubernetes Secret（s）使用您已有的证书文件。 渲染 Rancher Helm 模板时必须传递此选项。&lt;/td>
&lt;td>否&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;blockquote>
&lt;p>重要&lt;/p>
&lt;p>Rancher 中国技术支持团队建议您使用“您已有的证书” &lt;code>ingress.tls.source=secret&lt;/code> 这种方式，从而减少对 cert-manager 的运维成本。&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>选择 CA 颁发的可靠证书。&lt;/strong>&lt;/p>
&lt;p>根据您自己的证书创建Kubernetes secrent，以供Rancher使用。&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">kubectl -n cattle-system create secret tls tls-rancher-ingress \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--cert=tls.crt \
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">--key=tls.key
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;p>大部分情况下会使用自生成的证书，自生成证书的步骤参考https://blog.csdn.net/isea533/article/details/106397248。&lt;/p>
&lt;p>&lt;strong>注意证书相关文件的名称只能是固定的&lt;code>tls&lt;/code> 和&lt;code>cacerts&lt;/code>&lt;/strong>&lt;/p>
&lt;p>&lt;strong>&lt;code>.crt&lt;/code> 和 &lt;code>.pem&lt;/code> 的转换只需要修改后缀名称即可&lt;/strong>。参考https://stackoverflow.com/questions/991758/how-to-get-pem-file-from-key-and-crt-files&lt;/p>
&lt;/blockquote>
&lt;p>&lt;strong>使用自生成的证书创建Kubernetes secrent&lt;/strong>&lt;/p>
&lt;blockquote>
&lt;p>参考 &lt;a class="link" href="https://rancher.com/docs/rancher/v2.x/en/installation/resources/tls-secrets/" target="_blank" rel="noopener"
>https://rancher.com/docs/rancher/v2.x/en/installation/resources/tls-secrets/&lt;/a>&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用自己生成的证书。将泛域名证书的名称修改为tls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl -n cattle-system create secret tls tls-rancher-ingress &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --cert&lt;span class="o">=&lt;/span>tls.crt &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --key&lt;span class="o">=&lt;/span>tls.key
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 将之前生成的 ca.crt 修改为 cacerts.pem&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl -n cattle-system create secret generic tls-ca &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --from-file&lt;span class="o">=&lt;/span>cacerts.pem&lt;span class="o">=&lt;/span>./cacerts.pem
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h3 id="74-安装rancher">7.4 安装rancher
&lt;/h3>&lt;p>&lt;strong>在线环境直接运行以下命令即可&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm install rancher rancher-stable/rancher &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--namespace cattle-system &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set &lt;span class="nv">hostname&lt;/span>&lt;span class="o">=&lt;/span>rancher.my.org &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span>--set ingress.tls.source&lt;span class="o">=&lt;/span>secret
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 使用自生成证书则使用以下命令&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm install rancher rancher-stable/rancher &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --namespace cattle-system &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">hostname&lt;/span>&lt;span class="o">=&lt;/span>lims-rancher.sh-tec.com &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set ingress.tls.source&lt;span class="o">=&lt;/span>secret &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">privateCA&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h4 id="741-离线环境安装步骤">7.4.1 &lt;strong>离线环境安装步骤&lt;/strong>
&lt;/h4>&lt;p>&lt;strong>渲染您的 Rancher Helm 模板&lt;/strong>&lt;/p>
&lt;p>设置 Rancher Helm 模板时，Chart 中有几个选项是专门为离线安装设计的。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Chart 选项&lt;/th>
&lt;th>值&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>certmanager.version&lt;/code>&lt;/td>
&lt;td>&amp;quot;&amp;quot;&lt;/td>
&lt;td>根据运行的 cert-manager 版本配置适当的 Rancher TLS 颁发者。&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>systemDefaultRegistry&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;&lt;/code>&lt;/td>
&lt;td>配置 Rancher，在创建集群时，Rancher Server 始终从私有镜像仓库中拉取镜像&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>useBundledSystemChart&lt;/code>&lt;/td>
&lt;td>&lt;code>true&lt;/code>&lt;/td>
&lt;td>配置 Rancher Server 使用内置的 system-chart，&lt;a class="link" href="https://github.com/rancher/system-charts" target="_blank" rel="noopener"
>system-chart&lt;/a>中包含监控，日志，告警和全局 DNS 等功能所需的 Chart。这些 &lt;a class="link" href="https://github.com/rancher/system-charts" target="_blank" rel="noopener"
>Helm charts&lt;/a> 位于 GitHub 中，但是由于您处于离线环境中，因此使用 Rancher 中内置的 Chart 比设置一个 Git 镜像简单得多。当然您也可以选择自己手动镜像 GitHub 中的 Rancher System Chart。&lt;em>自 v2.3.0 起可用&lt;/em>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;strong>使用已有的证书&lt;/strong>&lt;/p>
&lt;p>根据您已有的证书创建 Kubernetes 密文，以供 Rancher 使用。证书的&lt;code>common name&lt;/code>将需要与以下命令中的&lt;code>hostname&lt;/code>选项匹配，否则 ingress controller 将无法为 Rancher 设置入口。&lt;/p>
&lt;p>设置 Rancher 模板，声明您选择的选项。使用下面表中的参考选项，需要给 Rancher 配置使用私有镜像库。&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>占位符&lt;/th>
&lt;th>描述&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>&amp;lt;VERSION&amp;gt;&lt;/code>&lt;/td>
&lt;td>Rancher 版本&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;RANCHER.YOURDOMAIN.COM&amp;gt;&lt;/code>&lt;/td>
&lt;td>负载均衡器对应的 DNS&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;&lt;/code>&lt;/td>
&lt;td>私有镜像库对应的 DNS&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl"> helm template rancher ./rancher-&amp;lt;VERSION&amp;gt;.tgz --output-dir . &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --namespace cattle-system &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">hostname&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;RANCHER.YOURDOMAIN.COM&amp;gt; &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">rancherImage&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;/rancher/rancher &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set ingress.tls.source&lt;span class="o">=&lt;/span>secret &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">systemDefaultRegistry&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt; &lt;span class="se">\ &lt;/span>&lt;span class="c1"># 自v2.2.0可用，设置默认的系统镜像仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --set &lt;span class="nv">useBundledSystemChart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="c1"># 自v2.3.0可用，使用内嵌的 Rancher system charts&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>如果您使用的是由私有 CA 签名的证书，则在&lt;code>--set ingress.tls.source=secret&lt;/code>之后添加&lt;code>--set privateCA=true&lt;/code>：&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">helm template rancher ./rancher-&amp;lt;VERSION&amp;gt;.tgz --output-dir . &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --namespace cattle-system &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">hostname&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;RANCHER.YOURDOMAIN.COM&amp;gt; &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">rancherImage&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt;/rancher/rancher &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set ingress.tls.source&lt;span class="o">=&lt;/span>secret &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">privateCA&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">systemDefaultRegistry&lt;/span>&lt;span class="o">=&lt;/span>&amp;lt;REGISTRY.YOURDOMAIN.COM:PORT&amp;gt; &lt;span class="se">\ &lt;/span>&lt;span class="c1"># 自v2.2.0可用，设置默认的系统镜像仓库&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> --set &lt;span class="nv">useBundledSystemChart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="c1"># 自v2.3.0可用，使用内嵌的 Rancher system charts&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># example&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">helm template rancher ./rancher-2.4.4.tgz --output-dir . &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --namespace cattle-system &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">hostname&lt;/span>&lt;span class="o">=&lt;/span>rancher.wx.com &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set ingress.tls.source&lt;span class="o">=&lt;/span>secret &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">privateCA&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span> &lt;span class="se">\
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="se">&lt;/span> --set &lt;span class="nv">useBundledSystemChart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nb">true&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>可选&lt;/strong>：要安装指定的 Rancher 版本，请设置&lt;code>rancherImageTag&lt;/code>的值，例如：&lt;code>--set rancherImageTag = v2.3.6&lt;/code>&lt;/p>
&lt;p>然后请参考&lt;a class="link" href="https://docs.rancher.cn/docs/rancher2/installation_new/options/tls-secrets/_index" target="_blank" rel="noopener"
>添加 TLS 密文&lt;/a>发布证书文件，以便 Rancher 和 ingress controller 可以使用它们。&lt;/p>
&lt;p>安装rancher&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">kubectl -n cattle-system apply -R -f ./rancher
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;strong>验证 Rancher Server 是否已成功部署&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 检查 Rancher Server 是否运行成功：&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl -n cattle-system rollout status deploy/rancher
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Waiting &lt;span class="k">for&lt;/span> deployment &lt;span class="s2">&amp;#34;rancher&amp;#34;&lt;/span> rollout to finish: &lt;span class="m">0&lt;/span> of &lt;span class="m">3&lt;/span> updated replicas are available...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">deployment &lt;span class="s2">&amp;#34;rancher&amp;#34;&lt;/span> successfully rolled out
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;blockquote>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 重置rancher密码&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">kubectl --kubeconfig kube_config_rancher-cluster.yml -n cattle-system &lt;span class="nb">exec&lt;/span> &lt;span class="k">$(&lt;/span>kubectl --kubeconfig kube_config_rancher-cluster.yml -n cattle-system get pods -l &lt;span class="nv">app&lt;/span>&lt;span class="o">=&lt;/span>rancher &lt;span class="p">|&lt;/span> grep &lt;span class="s1">&amp;#39;1/1&amp;#39;&lt;/span> &lt;span class="p">|&lt;/span> head -1 &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{ print $1 }&amp;#39;&lt;/span>&lt;span class="k">)&lt;/span> -- reset-password
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;h1 id="harbor安装">harbor安装
&lt;/h1>&lt;p>harbor系统需求docker 17.06.0-ce+、docker-compose 1.18.0+。docker-compose为二进制可执行文件&lt;/p>
&lt;blockquote>
&lt;p>docker-compose安装参考&lt;a class="link" href="https://docs.docker.com/compose/install/" target="_blank" rel="noopener"
>官方文档&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-sh" data-lang="sh">&lt;span class="line">&lt;span class="cl">sudo curl -L &lt;span class="s2">&amp;#34;https://github.com/docker/compose/releases/download/1.27.4/docker-compose-&lt;/span>&lt;span class="k">$(&lt;/span>uname -s&lt;span class="k">)&lt;/span>&lt;span class="s2">-&lt;/span>&lt;span class="k">$(&lt;/span>uname -m&lt;span class="k">)&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> -o /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># 添加可执行权限&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo chmod +x /usr/local/bin/docker-compose
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/blockquote>
&lt;p>harbor安装参照官方github&lt;a class="link" href="https://github.com/goharbor/harbor/releases" target="_blank" rel="noopener"
>release&lt;/a>页面下载最新的安装包&lt;/p>
&lt;p>harbor配置文件参考&lt;/p>
&lt;p>&lt;img src="https://cyber-blog.github.io/p/ranchar-install/harbor_yaml.png"
width="1209"
height="513"
srcset="https://cyber-blog.github.io/p/ranchar-install/harbor_yaml_hu5815470480611913929.png 480w, https://cyber-blog.github.io/p/ranchar-install/harbor_yaml_hu3728669794012258620.png 1024w"
loading="lazy"
alt="harbor_yaml"
class="gallery-image"
data-flex-grow="235"
data-flex-basis="565px"
>&lt;/p>
&lt;p>参考官方&lt;a class="link" href="https://goharbor.io/docs/2.0.0/install-config/quick-install-script/" target="_blank" rel="noopener"
>文档&lt;/a>&lt;/p>
&lt;p>关于Harbor https 私有证书配置注意事项 &lt;a class="link" href="https://blog.csdn.net/isea533/article/details/102872633" target="_blank" rel="noopener"
>https://blog.csdn.net/isea533/article/details/102872633&lt;/a>&lt;/p>
&lt;p>自生成证书的步骤参考https://blog.csdn.net/isea533/article/details/106397248。&lt;/p>
&lt;p>&lt;code>.crt&lt;/code> he &lt;code>.pem&lt;/code> 的转换只需要修改后缀名称即可。参考https://stackoverflow.com/questions/991758/how-to-get-pem-file-from-key-and-crt-files&lt;/p>
&lt;p>&lt;strong>注意，安装方式解决harbor不会自启动的问题参考https://www.cnblogs.com/kirito-c/p/11145881.html&lt;/strong>&lt;/p></description></item></channel></rss>